# -----------------------------------------------------------------------------
# This file was autogenerated by symforce from template:
#     function/FUNCTION.py.jinja
# Do NOT modify by hand.
# -----------------------------------------------------------------------------

# pylint: disable=too-many-locals,too-many-lines,too-many-statements,unused-argument,unused-import

import math
import typing as T

import numpy

import sym


def imu_manifold_preintegration_update(
    DR,
    Dv,
    Dp,
    covariance,
    DR_D_gyro_bias,
    Dv_D_gyro_bias,
    Dv_D_accel_bias,
    Dp_D_gyro_bias,
    Dp_D_accel_bias,
    gyro_bias,
    accel_bias,
    gyro_cov,
    accel_cov,
    gyro,
    accel,
    dt,
    epsilon,
):
    # type: (sym.Rot3, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, float, float) -> T.Tuple[sym.Rot3, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray]
    """
    An internal helper function to update a set of preintegrated IMU measurements with a new pair of
    gyroscope and accelerometer measurements. Returns the updated preintegrated measurements.

    When integrating the first measurement, DR should be the identity, Dv, Dp, covariance, and the
    derivatives w.r.t. to bias should all be 0.

    Args:
        DR (sf.Rot3): Preintegrated change in orientation
        Dv (sf.V3): Preintegrated change in velocity
        Dp (sf.V3): Preintegrated change in position
        covariance (sf.M99): Covariance of [DR's tangent space, Dv, Dp]
        DR_D_gyro_bias (sf.M33): Derivative of DR w.r.t. gyro_bias
        Dv_D_gyro_bias (sf.M33): Derivative of Dv w.r.t. gyro_bias
        Dv_D_accel_bias (sf.M33): Derivative of Dv w.r.t. accel_bias
        Dp_D_gyro_bias (sf.M33): Derivative of Dp w.r.t. gyro_bias
        Dp_D_accel_bias (sf.M33): Derivative of Dp w.r.t. accel_bias
        gyro_bias (sf.V3): Initial guess for the gyroscope measurement bias
        accel_bias (sf.V3): Initial guess for the accelerometer measurement bias
        gyro_cov (sf.M33): The covariance of the gyroscope measurement
        accel_cov (sf.M33): The covariance of the accelerometer measurement
        gyro (sf.V3): The gyroscope measurement
        accel (sf.V3): The accelerometer measurement
        dt (T.Scalar): The time between the new measurements and the last
        epsilon (T.Scalar): epsilon for numerical stability

    Returns:
        T.Tuple[sf.Rot3, sf.V3, sf.V3, sf.Matrix, sf.Matrix, sf.Matrix, sf.Matrix, sf.Matrix, sf.Matrix]:
            new_DR,
            new_Dv,
            new_Dp,
            new_covariance,
            new_DR_D_gyro_bias,
            new_Dv_D_gyro_bias,
            new_Dv_D_accel_bias,
            new_Dp_D_gyro_bias,
            new_Dp_D_accel_bias
    """

    # Total ops: 1913

    # Input arrays
    _DR = DR.data
    if Dv.shape == (3,):
        Dv = Dv.reshape((3, 1))
    elif Dv.shape != (3, 1):
        raise IndexError(
            "Dv is expected to have shape (3, 1) or (3,); instead had shape {}".format(Dv.shape)
        )

    if Dp.shape == (3,):
        Dp = Dp.reshape((3, 1))
    elif Dp.shape != (3, 1):
        raise IndexError(
            "Dp is expected to have shape (3, 1) or (3,); instead had shape {}".format(Dp.shape)
        )

    if gyro_bias.shape == (3,):
        gyro_bias = gyro_bias.reshape((3, 1))
    elif gyro_bias.shape != (3, 1):
        raise IndexError(
            "gyro_bias is expected to have shape (3, 1) or (3,); instead had shape {}".format(
                gyro_bias.shape
            )
        )

    if accel_bias.shape == (3,):
        accel_bias = accel_bias.reshape((3, 1))
    elif accel_bias.shape != (3, 1):
        raise IndexError(
            "accel_bias is expected to have shape (3, 1) or (3,); instead had shape {}".format(
                accel_bias.shape
            )
        )

    if gyro.shape == (3,):
        gyro = gyro.reshape((3, 1))
    elif gyro.shape != (3, 1):
        raise IndexError(
            "gyro is expected to have shape (3, 1) or (3,); instead had shape {}".format(gyro.shape)
        )

    if accel.shape == (3,):
        accel = accel.reshape((3, 1))
    elif accel.shape != (3, 1):
        raise IndexError(
            "accel is expected to have shape (3, 1) or (3,); instead had shape {}".format(
                accel.shape
            )
        )

    # Intermediate terms (430)
    _tmp0 = gyro[2, 0] - gyro_bias[2, 0]
    _tmp1 = dt ** 2
    _tmp2 = gyro[1, 0] - gyro_bias[1, 0]
    _tmp3 = _tmp1 * _tmp2 ** 2
    _tmp4 = gyro[0, 0] - gyro_bias[0, 0]
    _tmp5 = _tmp1 * _tmp4 ** 2
    _tmp6 = _tmp0 ** 2 * _tmp1
    _tmp7 = _tmp3 + _tmp5 + _tmp6
    _tmp8 = _tmp7 + epsilon ** 2
    _tmp9 = math.sqrt(_tmp8)
    _tmp10 = (1.0 / 2.0) * _tmp9
    _tmp11 = math.sin(_tmp10)
    _tmp12 = _tmp11 / _tmp9
    _tmp13 = _tmp12 * dt
    _tmp14 = _tmp0 * _tmp13
    _tmp15 = _tmp13 * _tmp2
    _tmp16 = _tmp4 * dt
    _tmp17 = _tmp12 * _tmp16
    _tmp18 = math.cos(_tmp10)
    _tmp19 = _DR[0] * _tmp12
    _tmp20 = _tmp19 * dt
    _tmp21 = 2 * _DR[1]
    _tmp22 = _DR[0] * _tmp21
    _tmp23 = 2 * _DR[2] * _DR[3]
    _tmp24 = _tmp22 - _tmp23
    _tmp25 = accel[1, 0] - accel_bias[1, 0]
    _tmp26 = -2 * _DR[1] ** 2
    _tmp27 = -2 * _DR[2] ** 2
    _tmp28 = _tmp26 + _tmp27 + 1
    _tmp29 = accel[0, 0] - accel_bias[0, 0]
    _tmp30 = _DR[3] * _tmp21
    _tmp31 = 2 * _DR[0]
    _tmp32 = _DR[2] * _tmp31
    _tmp33 = _tmp30 + _tmp32
    _tmp34 = accel[2, 0] - accel_bias[2, 0]
    _tmp35 = _tmp24 * _tmp25 + _tmp28 * _tmp29 + _tmp33 * _tmp34
    _tmp36 = _tmp22 + _tmp23
    _tmp37 = 1 - 2 * _DR[0] ** 2
    _tmp38 = _tmp27 + _tmp37
    _tmp39 = _DR[3] * _tmp31
    _tmp40 = _DR[2] * _tmp21
    _tmp41 = -_tmp39 + _tmp40
    _tmp42 = _tmp25 * _tmp38 + _tmp29 * _tmp36 + _tmp34 * _tmp41
    _tmp43 = _tmp26 + _tmp37
    _tmp44 = -_tmp30 + _tmp32
    _tmp45 = _tmp39 + _tmp40
    _tmp46 = _tmp25 * _tmp45 + _tmp29 * _tmp44 + _tmp34 * _tmp43
    _tmp47 = (1.0 / 2.0) * _tmp1
    _tmp48 = _tmp7 + epsilon
    _tmp49 = math.sqrt(_tmp48)
    _tmp50 = (1 - math.cos(_tmp49)) / _tmp48
    _tmp51 = _tmp50 * dt
    _tmp52 = _tmp2 * _tmp51
    _tmp53 = (_tmp49 - math.sin(_tmp49)) / _tmp48 ** (3.0 / 2.0)
    _tmp54 = _tmp1 * _tmp4
    _tmp55 = _tmp0 * _tmp54
    _tmp56 = _tmp53 * _tmp55
    _tmp57 = _tmp52 + _tmp56
    _tmp58 = _tmp0 * _tmp51
    _tmp59 = _tmp2 * _tmp53
    _tmp60 = _tmp54 * _tmp59
    _tmp61 = -_tmp58 + _tmp60
    _tmp62 = -_tmp3
    _tmp63 = -_tmp6
    _tmp64 = _tmp53 * (_tmp62 + _tmp63) + 1
    _tmp65 = -_tmp57 * gyro_cov[2, 1] - _tmp61 * gyro_cov[1, 1] - _tmp64 * gyro_cov[0, 1]
    _tmp66 = _tmp61 * dt
    _tmp67 = 2 * _tmp11 ** 2 / _tmp8
    _tmp68 = -_tmp3 * _tmp67
    _tmp69 = -_tmp6 * _tmp67 + 1
    _tmp70 = _tmp68 + _tmp69
    _tmp71 = 2 * _tmp18
    _tmp72 = _tmp14 * _tmp71
    _tmp73 = _tmp2 * _tmp67
    _tmp74 = _tmp54 * _tmp73
    _tmp75 = _tmp72 + _tmp74
    _tmp76 = _tmp15 * _tmp71
    _tmp77 = _tmp55 * _tmp67
    _tmp78 = -_tmp76 + _tmp77
    _tmp79 = _tmp70 * covariance[0, 0] + _tmp75 * covariance[1, 0] + _tmp78 * covariance[2, 0]
    _tmp80 = -_tmp57 * gyro_cov[2, 2] - _tmp61 * gyro_cov[1, 2] - _tmp64 * gyro_cov[0, 2]
    _tmp81 = _tmp57 * dt
    _tmp82 = _tmp70 * covariance[0, 2] + _tmp75 * covariance[1, 2] + _tmp78 * covariance[2, 2]
    _tmp83 = -_tmp57 * gyro_cov[2, 0] - _tmp61 * gyro_cov[1, 0] - _tmp64 * gyro_cov[0, 0]
    _tmp84 = _tmp64 * dt
    _tmp85 = _tmp70 * covariance[0, 1] + _tmp75 * covariance[1, 1] + _tmp78 * covariance[2, 1]
    _tmp86 = _tmp16 * _tmp50
    _tmp87 = _tmp0 * _tmp1
    _tmp88 = _tmp59 * _tmp87
    _tmp89 = -_tmp86 + _tmp88
    _tmp90 = _tmp58 + _tmp60
    _tmp91 = -_tmp5
    _tmp92 = _tmp53 * (_tmp63 + _tmp91) + 1
    _tmp93 = -_tmp89 * gyro_cov[2, 1] - _tmp90 * gyro_cov[0, 1] - _tmp92 * gyro_cov[1, 1]
    _tmp94 = -_tmp72 + _tmp74
    _tmp95 = _tmp17 * _tmp71
    _tmp96 = _tmp73 * _tmp87
    _tmp97 = _tmp95 + _tmp96
    _tmp98 = -_tmp5 * _tmp67
    _tmp99 = _tmp69 + _tmp98
    _tmp100 = _tmp94 * covariance[0, 0] + _tmp97 * covariance[2, 0] + _tmp99 * covariance[1, 0]
    _tmp101 = -_tmp89 * gyro_cov[2, 0] - _tmp90 * gyro_cov[0, 0] - _tmp92 * gyro_cov[1, 0]
    _tmp102 = _tmp94 * covariance[0, 1] + _tmp97 * covariance[2, 1] + _tmp99 * covariance[1, 1]
    _tmp103 = -_tmp89 * gyro_cov[2, 2] - _tmp90 * gyro_cov[0, 2] - _tmp92 * gyro_cov[1, 2]
    _tmp104 = _tmp94 * covariance[0, 2] + _tmp97 * covariance[2, 2] + _tmp99 * covariance[1, 2]
    _tmp105 = _tmp76 + _tmp77
    _tmp106 = -_tmp95 + _tmp96
    _tmp107 = _tmp68 + _tmp98 + 1
    _tmp108 = _tmp105 * covariance[0, 0] + _tmp106 * covariance[1, 0] + _tmp107 * covariance[2, 0]
    _tmp109 = _tmp105 * covariance[0, 2] + _tmp106 * covariance[1, 2] + _tmp107 * covariance[2, 2]
    _tmp110 = _tmp105 * covariance[0, 1] + _tmp106 * covariance[1, 1] + _tmp107 * covariance[2, 1]
    _tmp111 = -_tmp52 + _tmp56
    _tmp112 = _tmp86 + _tmp88
    _tmp113 = _tmp53 * (_tmp62 + _tmp91) + 1
    _tmp114 = -_tmp111 * gyro_cov[0, 2] - _tmp112 * gyro_cov[1, 2] - _tmp113 * gyro_cov[2, 2]
    _tmp115 = -_tmp111 * gyro_cov[0, 1] - _tmp112 * gyro_cov[1, 1] - _tmp113 * gyro_cov[2, 1]
    _tmp116 = -_tmp111 * gyro_cov[0, 0] - _tmp112 * gyro_cov[1, 0] - _tmp113 * gyro_cov[2, 0]
    _tmp117 = _tmp24 * dt
    _tmp118 = _tmp28 * dt
    _tmp119 = -_tmp117 * _tmp29 + _tmp118 * _tmp25
    _tmp120 = _tmp119 * covariance[2, 2]
    _tmp121 = _tmp33 * dt
    _tmp122 = _tmp117 * _tmp34 - _tmp121 * _tmp25
    _tmp123 = _tmp122 * covariance[0, 2]
    _tmp124 = -_tmp118 * _tmp34 + _tmp121 * _tmp29
    _tmp125 = _tmp124 * covariance[1, 2]
    _tmp126 = -_tmp120 - _tmp123 - _tmp125 + covariance[3, 2]
    _tmp127 = _tmp119 * covariance[2, 0]
    _tmp128 = _tmp122 * covariance[0, 0]
    _tmp129 = _tmp124 * covariance[1, 0]
    _tmp130 = -_tmp127 - _tmp128 - _tmp129 + covariance[3, 0]
    _tmp131 = _tmp119 * covariance[2, 1]
    _tmp132 = _tmp122 * covariance[0, 1]
    _tmp133 = _tmp124 * covariance[1, 1]
    _tmp134 = -_tmp131 - _tmp132 - _tmp133 + covariance[3, 1]
    _tmp135 = _tmp41 * dt
    _tmp136 = _tmp38 * dt
    _tmp137 = -_tmp135 * _tmp25 + _tmp136 * _tmp34
    _tmp138 = _tmp137 * covariance[0, 0]
    _tmp139 = _tmp36 * dt
    _tmp140 = -_tmp136 * _tmp29 + _tmp139 * _tmp25
    _tmp141 = _tmp140 * covariance[2, 0]
    _tmp142 = _tmp135 * _tmp29 - _tmp139 * _tmp34
    _tmp143 = _tmp142 * covariance[1, 0]
    _tmp144 = -_tmp138 - _tmp141 - _tmp143 + covariance[4, 0]
    _tmp145 = _tmp137 * covariance[0, 2]
    _tmp146 = _tmp140 * covariance[2, 2]
    _tmp147 = _tmp142 * covariance[1, 2]
    _tmp148 = -_tmp145 - _tmp146 - _tmp147 + covariance[4, 2]
    _tmp149 = _tmp137 * covariance[0, 1]
    _tmp150 = _tmp140 * covariance[2, 1]
    _tmp151 = _tmp142 * covariance[1, 1]
    _tmp152 = -_tmp149 - _tmp150 - _tmp151 + covariance[4, 1]
    _tmp153 = _tmp45 * dt
    _tmp154 = _tmp43 * dt
    _tmp155 = _tmp153 * _tmp34 - _tmp154 * _tmp25
    _tmp156 = _tmp155 * covariance[0, 0]
    _tmp157 = _tmp44 * dt
    _tmp158 = -_tmp153 * _tmp29 + _tmp157 * _tmp25
    _tmp159 = _tmp158 * covariance[2, 0]
    _tmp160 = _tmp154 * _tmp29 - _tmp157 * _tmp34
    _tmp161 = _tmp160 * covariance[1, 0]
    _tmp162 = -_tmp156 - _tmp159 - _tmp161 + covariance[5, 0]
    _tmp163 = _tmp155 * covariance[0, 1]
    _tmp164 = _tmp158 * covariance[2, 1]
    _tmp165 = _tmp160 * covariance[1, 1]
    _tmp166 = -_tmp163 - _tmp164 - _tmp165 + covariance[5, 1]
    _tmp167 = _tmp155 * covariance[0, 2]
    _tmp168 = _tmp158 * covariance[2, 2]
    _tmp169 = _tmp160 * covariance[1, 2]
    _tmp170 = -_tmp167 - _tmp168 - _tmp169 + covariance[5, 2]
    _tmp171 = (1.0 / 2.0) * dt
    _tmp172 = (
        -_tmp131 * _tmp171
        - _tmp132 * _tmp171
        - _tmp133 * _tmp171
        + covariance[3, 1] * dt
        + covariance[6, 1]
    )
    _tmp173 = (
        -_tmp120 * _tmp171
        - _tmp123 * _tmp171
        - _tmp125 * _tmp171
        + covariance[3, 2] * dt
        + covariance[6, 2]
    )
    _tmp174 = (
        -_tmp127 * _tmp171
        - _tmp128 * _tmp171
        - _tmp129 * _tmp171
        + covariance[3, 0] * dt
        + covariance[6, 0]
    )
    _tmp175 = (
        -_tmp138 * _tmp171
        - _tmp141 * _tmp171
        - _tmp143 * _tmp171
        + covariance[4, 0] * dt
        + covariance[7, 0]
    )
    _tmp176 = (
        -_tmp149 * _tmp171
        - _tmp150 * _tmp171
        - _tmp151 * _tmp171
        + covariance[4, 1] * dt
        + covariance[7, 1]
    )
    _tmp177 = (
        -_tmp145 * _tmp171
        - _tmp146 * _tmp171
        - _tmp147 * _tmp171
        + covariance[4, 2] * dt
        + covariance[7, 2]
    )
    _tmp178 = (
        -_tmp167 * _tmp171
        - _tmp168 * _tmp171
        - _tmp169 * _tmp171
        + covariance[5, 2] * dt
        + covariance[8, 2]
    )
    _tmp179 = (
        -_tmp163 * _tmp171
        - _tmp164 * _tmp171
        - _tmp165 * _tmp171
        + covariance[5, 1] * dt
        + covariance[8, 1]
    )
    _tmp180 = (
        -_tmp156 * _tmp171
        - _tmp159 * _tmp171
        - _tmp161 * _tmp171
        + covariance[5, 0] * dt
        + covariance[8, 0]
    )
    _tmp181 = _tmp90 * dt
    _tmp182 = _tmp89 * dt
    _tmp183 = _tmp92 * dt
    _tmp184 = _tmp111 * dt
    _tmp185 = _tmp112 * dt
    _tmp186 = _tmp113 * dt
    _tmp187 = _tmp124 * _tmp85
    _tmp188 = _tmp122 * _tmp79
    _tmp189 = _tmp119 * _tmp82
    _tmp190 = _tmp70 * covariance[0, 3] + _tmp75 * covariance[1, 3] + _tmp78 * covariance[2, 3]
    _tmp191 = _tmp102 * _tmp124
    _tmp192 = _tmp100 * _tmp122
    _tmp193 = _tmp104 * _tmp119
    _tmp194 = _tmp94 * covariance[0, 3] + _tmp97 * covariance[2, 3] + _tmp99 * covariance[1, 3]
    _tmp195 = _tmp108 * _tmp122
    _tmp196 = _tmp109 * _tmp119
    _tmp197 = _tmp110 * _tmp124
    _tmp198 = _tmp105 * covariance[0, 3] + _tmp106 * covariance[1, 3] + _tmp107 * covariance[2, 3]
    _tmp199 = _tmp124 * _tmp134
    _tmp200 = _tmp122 * _tmp130
    _tmp201 = _tmp33 * accel_cov[2, 1]
    _tmp202 = _tmp24 * accel_cov[1, 1]
    _tmp203 = _tmp28 * accel_cov[0, 1]
    _tmp204 = -_tmp201 - _tmp202 - _tmp203
    _tmp205 = _tmp33 * accel_cov[2, 2]
    _tmp206 = _tmp24 * accel_cov[1, 2]
    _tmp207 = _tmp28 * accel_cov[0, 2]
    _tmp208 = -_tmp205 - _tmp206 - _tmp207
    _tmp209 = _tmp33 * accel_cov[2, 0]
    _tmp210 = _tmp24 * accel_cov[1, 0]
    _tmp211 = _tmp28 * accel_cov[0, 0]
    _tmp212 = -_tmp209 - _tmp210 - _tmp211
    _tmp213 = _tmp119 * _tmp126
    _tmp214 = _tmp119 * covariance[2, 3]
    _tmp215 = _tmp122 * covariance[0, 3]
    _tmp216 = _tmp124 * covariance[1, 3]
    _tmp217 = -_tmp214 - _tmp215 - _tmp216 + covariance[3, 3]
    _tmp218 = _tmp41 * accel_cov[2, 0]
    _tmp219 = _tmp36 * accel_cov[0, 0]
    _tmp220 = _tmp38 * accel_cov[1, 0]
    _tmp221 = -_tmp218 - _tmp219 - _tmp220
    _tmp222 = _tmp41 * accel_cov[2, 2]
    _tmp223 = _tmp36 * accel_cov[0, 2]
    _tmp224 = _tmp38 * accel_cov[1, 2]
    _tmp225 = -_tmp222 - _tmp223 - _tmp224
    _tmp226 = _tmp41 * accel_cov[2, 1]
    _tmp227 = _tmp36 * accel_cov[0, 1]
    _tmp228 = _tmp38 * accel_cov[1, 1]
    _tmp229 = -_tmp226 - _tmp227 - _tmp228
    _tmp230 = _tmp124 * _tmp152
    _tmp231 = _tmp122 * _tmp144
    _tmp232 = _tmp119 * _tmp148
    _tmp233 = _tmp137 * covariance[0, 3]
    _tmp234 = _tmp140 * covariance[2, 3]
    _tmp235 = _tmp142 * covariance[1, 3]
    _tmp236 = -_tmp233 - _tmp234 - _tmp235 + covariance[4, 3]
    _tmp237 = _tmp122 * _tmp162
    _tmp238 = _tmp124 * _tmp166
    _tmp239 = _tmp45 * accel_cov[1, 0]
    _tmp240 = _tmp44 * accel_cov[0, 0]
    _tmp241 = _tmp43 * accel_cov[2, 0]
    _tmp242 = -_tmp239 - _tmp240 - _tmp241
    _tmp243 = _tmp45 * accel_cov[1, 2]
    _tmp244 = _tmp44 * accel_cov[0, 2]
    _tmp245 = _tmp43 * accel_cov[2, 2]
    _tmp246 = -_tmp243 - _tmp244 - _tmp245
    _tmp247 = _tmp45 * accel_cov[1, 1]
    _tmp248 = _tmp44 * accel_cov[0, 1]
    _tmp249 = _tmp43 * accel_cov[2, 1]
    _tmp250 = -_tmp247 - _tmp248 - _tmp249
    _tmp251 = _tmp119 * _tmp170
    _tmp252 = _tmp155 * covariance[0, 3]
    _tmp253 = _tmp158 * covariance[2, 3]
    _tmp254 = _tmp160 * covariance[1, 3]
    _tmp255 = -_tmp252 - _tmp253 - _tmp254 + covariance[5, 3]
    _tmp256 = _tmp122 * _tmp174
    _tmp257 = _tmp124 * _tmp172
    _tmp258 = -_tmp171 * _tmp201 - _tmp171 * _tmp202 - _tmp171 * _tmp203
    _tmp259 = -_tmp171 * _tmp205 - _tmp171 * _tmp206 - _tmp171 * _tmp207
    _tmp260 = _tmp119 * _tmp173
    _tmp261 = -_tmp171 * _tmp209 - _tmp171 * _tmp210 - _tmp171 * _tmp211
    _tmp262 = (
        -_tmp171 * _tmp214
        - _tmp171 * _tmp215
        - _tmp171 * _tmp216
        + covariance[3, 3] * dt
        + covariance[6, 3]
    )
    _tmp263 = _tmp122 * _tmp175
    _tmp264 = _tmp124 * _tmp176
    _tmp265 = -_tmp171 * _tmp218 - _tmp171 * _tmp219 - _tmp171 * _tmp220
    _tmp266 = -_tmp171 * _tmp222 - _tmp171 * _tmp223 - _tmp171 * _tmp224
    _tmp267 = -_tmp171 * _tmp226 - _tmp171 * _tmp227 - _tmp171 * _tmp228
    _tmp268 = _tmp119 * _tmp177
    _tmp269 = (
        -_tmp171 * _tmp233
        - _tmp171 * _tmp234
        - _tmp171 * _tmp235
        + covariance[4, 3] * dt
        + covariance[7, 3]
    )
    _tmp270 = _tmp122 * _tmp180
    _tmp271 = _tmp119 * _tmp178
    _tmp272 = _tmp124 * _tmp179
    _tmp273 = -_tmp171 * _tmp243 - _tmp171 * _tmp244 - _tmp171 * _tmp245
    _tmp274 = -_tmp171 * _tmp247 - _tmp171 * _tmp248 - _tmp171 * _tmp249
    _tmp275 = -_tmp171 * _tmp239 - _tmp171 * _tmp240 - _tmp171 * _tmp241
    _tmp276 = (
        -_tmp171 * _tmp252
        - _tmp171 * _tmp253
        - _tmp171 * _tmp254
        + covariance[5, 3] * dt
        + covariance[8, 3]
    )
    _tmp277 = _tmp137 * _tmp79
    _tmp278 = _tmp142 * _tmp85
    _tmp279 = _tmp140 * _tmp82
    _tmp280 = _tmp70 * covariance[0, 4] + _tmp75 * covariance[1, 4] + _tmp78 * covariance[2, 4]
    _tmp281 = _tmp104 * _tmp140
    _tmp282 = _tmp102 * _tmp142
    _tmp283 = _tmp100 * _tmp137
    _tmp284 = _tmp94 * covariance[0, 4] + _tmp97 * covariance[2, 4] + _tmp99 * covariance[1, 4]
    _tmp285 = _tmp110 * _tmp142
    _tmp286 = _tmp109 * _tmp140
    _tmp287 = _tmp108 * _tmp137
    _tmp288 = _tmp105 * covariance[0, 4] + _tmp106 * covariance[1, 4] + _tmp107 * covariance[2, 4]
    _tmp289 = _tmp130 * _tmp137
    _tmp290 = _tmp126 * _tmp140
    _tmp291 = _tmp134 * _tmp142
    _tmp292 = _tmp119 * covariance[2, 4]
    _tmp293 = _tmp122 * covariance[0, 4]
    _tmp294 = _tmp124 * covariance[1, 4]
    _tmp295 = -_tmp292 - _tmp293 - _tmp294 + covariance[3, 4]
    _tmp296 = _tmp142 * _tmp152
    _tmp297 = _tmp137 * _tmp144
    _tmp298 = _tmp140 * _tmp148
    _tmp299 = _tmp137 * covariance[0, 4]
    _tmp300 = _tmp140 * covariance[2, 4]
    _tmp301 = _tmp142 * covariance[1, 4]
    _tmp302 = -_tmp299 - _tmp300 - _tmp301 + covariance[4, 4]
    _tmp303 = _tmp137 * _tmp162
    _tmp304 = _tmp142 * _tmp166
    _tmp305 = _tmp140 * _tmp170
    _tmp306 = _tmp155 * covariance[0, 4]
    _tmp307 = _tmp158 * covariance[2, 4]
    _tmp308 = _tmp160 * covariance[1, 4]
    _tmp309 = -_tmp306 - _tmp307 - _tmp308 + covariance[5, 4]
    _tmp310 = _tmp140 * _tmp173
    _tmp311 = _tmp142 * _tmp172
    _tmp312 = _tmp137 * _tmp174
    _tmp313 = (
        -_tmp171 * _tmp292
        - _tmp171 * _tmp293
        - _tmp171 * _tmp294
        + covariance[3, 4] * dt
        + covariance[6, 4]
    )
    _tmp314 = _tmp142 * _tmp176
    _tmp315 = _tmp140 * _tmp177
    _tmp316 = _tmp137 * _tmp175
    _tmp317 = (
        -_tmp171 * _tmp299
        - _tmp171 * _tmp300
        - _tmp171 * _tmp301
        + covariance[4, 4] * dt
        + covariance[7, 4]
    )
    _tmp318 = _tmp140 * _tmp178
    _tmp319 = _tmp137 * _tmp180
    _tmp320 = _tmp142 * _tmp179
    _tmp321 = (
        -_tmp171 * _tmp306
        - _tmp171 * _tmp307
        - _tmp171 * _tmp308
        + covariance[5, 4] * dt
        + covariance[8, 4]
    )
    _tmp322 = _tmp158 * _tmp82
    _tmp323 = _tmp160 * _tmp85
    _tmp324 = _tmp155 * _tmp79
    _tmp325 = _tmp70 * covariance[0, 5] + _tmp75 * covariance[1, 5] + _tmp78 * covariance[2, 5]
    _tmp326 = _tmp100 * _tmp155
    _tmp327 = _tmp102 * _tmp160
    _tmp328 = _tmp104 * _tmp158
    _tmp329 = _tmp94 * covariance[0, 5] + _tmp97 * covariance[2, 5] + _tmp99 * covariance[1, 5]
    _tmp330 = _tmp108 * _tmp155
    _tmp331 = _tmp110 * _tmp160
    _tmp332 = _tmp109 * _tmp158
    _tmp333 = _tmp105 * covariance[0, 5] + _tmp106 * covariance[1, 5] + _tmp107 * covariance[2, 5]
    _tmp334 = _tmp126 * _tmp158
    _tmp335 = _tmp134 * _tmp160
    _tmp336 = _tmp130 * _tmp155
    _tmp337 = _tmp119 * covariance[2, 5]
    _tmp338 = _tmp122 * covariance[0, 5]
    _tmp339 = _tmp124 * covariance[1, 5]
    _tmp340 = -_tmp337 - _tmp338 - _tmp339 + covariance[3, 5]
    _tmp341 = _tmp148 * _tmp158
    _tmp342 = _tmp144 * _tmp155
    _tmp343 = _tmp152 * _tmp160
    _tmp344 = _tmp137 * covariance[0, 5]
    _tmp345 = _tmp140 * covariance[2, 5]
    _tmp346 = _tmp142 * covariance[1, 5]
    _tmp347 = -_tmp344 - _tmp345 - _tmp346 + covariance[4, 5]
    _tmp348 = _tmp158 * _tmp170
    _tmp349 = _tmp160 * _tmp166
    _tmp350 = _tmp155 * _tmp162
    _tmp351 = _tmp155 * covariance[0, 5]
    _tmp352 = _tmp158 * covariance[2, 5]
    _tmp353 = _tmp160 * covariance[1, 5]
    _tmp354 = -_tmp351 - _tmp352 - _tmp353 + covariance[5, 5]
    _tmp355 = _tmp160 * _tmp172
    _tmp356 = _tmp155 * _tmp174
    _tmp357 = _tmp158 * _tmp173
    _tmp358 = (
        -_tmp171 * _tmp337
        - _tmp171 * _tmp338
        - _tmp171 * _tmp339
        + covariance[3, 5] * dt
        + covariance[6, 5]
    )
    _tmp359 = _tmp158 * _tmp177
    _tmp360 = _tmp160 * _tmp176
    _tmp361 = _tmp155 * _tmp175
    _tmp362 = (
        -_tmp171 * _tmp344
        - _tmp171 * _tmp345
        - _tmp171 * _tmp346
        + covariance[4, 5] * dt
        + covariance[7, 5]
    )
    _tmp363 = _tmp160 * _tmp179
    _tmp364 = _tmp155 * _tmp180
    _tmp365 = _tmp158 * _tmp178
    _tmp366 = (
        -_tmp171 * _tmp351
        - _tmp171 * _tmp352
        - _tmp171 * _tmp353
        + covariance[5, 5] * dt
        + covariance[8, 5]
    )
    _tmp367 = _tmp119 * covariance[2, 6]
    _tmp368 = _tmp122 * covariance[0, 6]
    _tmp369 = _tmp124 * covariance[1, 6]
    _tmp370 = _tmp24 * _tmp47
    _tmp371 = _tmp33 * _tmp47
    _tmp372 = _tmp28 * _tmp47
    _tmp373 = _tmp137 * covariance[0, 6]
    _tmp374 = _tmp140 * covariance[2, 6]
    _tmp375 = _tmp142 * covariance[1, 6]
    _tmp376 = _tmp155 * covariance[0, 6]
    _tmp377 = _tmp158 * covariance[2, 6]
    _tmp378 = _tmp160 * covariance[1, 6]
    _tmp379 = _tmp119 * covariance[2, 7]
    _tmp380 = _tmp122 * covariance[0, 7]
    _tmp381 = _tmp124 * covariance[1, 7]
    _tmp382 = _tmp36 * _tmp47
    _tmp383 = _tmp38 * _tmp47
    _tmp384 = _tmp41 * _tmp47
    _tmp385 = _tmp137 * covariance[0, 7]
    _tmp386 = _tmp140 * covariance[2, 7]
    _tmp387 = _tmp142 * covariance[1, 7]
    _tmp388 = _tmp155 * covariance[0, 7]
    _tmp389 = _tmp158 * covariance[2, 7]
    _tmp390 = _tmp160 * covariance[1, 7]
    _tmp391 = _tmp119 * covariance[2, 8]
    _tmp392 = _tmp122 * covariance[0, 8]
    _tmp393 = _tmp124 * covariance[1, 8]
    _tmp394 = _tmp44 * _tmp47
    _tmp395 = _tmp43 * _tmp47
    _tmp396 = _tmp45 * _tmp47
    _tmp397 = _tmp137 * covariance[0, 8]
    _tmp398 = _tmp140 * covariance[2, 8]
    _tmp399 = _tmp142 * covariance[1, 8]
    _tmp400 = _tmp155 * covariance[0, 8]
    _tmp401 = _tmp158 * covariance[2, 8]
    _tmp402 = _tmp160 * covariance[1, 8]
    _tmp403 = DR_D_gyro_bias[0, 0] * _tmp122
    _tmp404 = DR_D_gyro_bias[2, 0] * _tmp119
    _tmp405 = DR_D_gyro_bias[1, 0] * _tmp124
    _tmp406 = DR_D_gyro_bias[1, 0] * _tmp142
    _tmp407 = DR_D_gyro_bias[0, 0] * _tmp137
    _tmp408 = DR_D_gyro_bias[2, 0] * _tmp140
    _tmp409 = DR_D_gyro_bias[2, 0] * _tmp158
    _tmp410 = DR_D_gyro_bias[1, 0] * _tmp160
    _tmp411 = DR_D_gyro_bias[0, 0] * _tmp155
    _tmp412 = DR_D_gyro_bias[0, 1] * _tmp122
    _tmp413 = DR_D_gyro_bias[2, 1] * _tmp119
    _tmp414 = DR_D_gyro_bias[1, 1] * _tmp124
    _tmp415 = DR_D_gyro_bias[1, 1] * _tmp142
    _tmp416 = DR_D_gyro_bias[0, 1] * _tmp137
    _tmp417 = DR_D_gyro_bias[2, 1] * _tmp140
    _tmp418 = DR_D_gyro_bias[2, 1] * _tmp158
    _tmp419 = DR_D_gyro_bias[1, 1] * _tmp160
    _tmp420 = DR_D_gyro_bias[0, 1] * _tmp155
    _tmp421 = DR_D_gyro_bias[0, 2] * _tmp122
    _tmp422 = DR_D_gyro_bias[2, 2] * _tmp119
    _tmp423 = DR_D_gyro_bias[1, 2] * _tmp124
    _tmp424 = DR_D_gyro_bias[1, 2] * _tmp142
    _tmp425 = DR_D_gyro_bias[0, 2] * _tmp137
    _tmp426 = DR_D_gyro_bias[2, 2] * _tmp140
    _tmp427 = DR_D_gyro_bias[2, 2] * _tmp158
    _tmp428 = DR_D_gyro_bias[1, 2] * _tmp160
    _tmp429 = DR_D_gyro_bias[0, 2] * _tmp155

    # Output terms
    _new_DR = [0.0] * 4
    _new_DR[0] = _DR[0] * _tmp18 + _DR[1] * _tmp14 - _DR[2] * _tmp15 + _DR[3] * _tmp17
    _new_DR[1] = _DR[1] * _tmp18 + _DR[2] * _tmp17 + _DR[3] * _tmp15 - _tmp0 * _tmp20
    _new_DR[2] = -_DR[1] * _tmp17 + _DR[2] * _tmp18 + _DR[3] * _tmp14 + _tmp2 * _tmp20
    _new_DR[3] = -_DR[1] * _tmp15 - _DR[2] * _tmp14 + _DR[3] * _tmp18 - _tmp16 * _tmp19
    _new_Dv = numpy.zeros((3, 1))
    _new_Dv[0, 0] = Dv[0, 0] + _tmp35 * dt
    _new_Dv[1, 0] = Dv[1, 0] + _tmp42 * dt
    _new_Dv[2, 0] = Dv[2, 0] + _tmp46 * dt
    _new_Dp = numpy.zeros((3, 1))
    _new_Dp[0, 0] = Dp[0, 0] + Dv[0, 0] * dt + _tmp35 * _tmp47
    _new_Dp[1, 0] = Dp[1, 0] + Dv[1, 0] * dt + _tmp42 * _tmp47
    _new_Dp[2, 0] = Dp[2, 0] + Dv[2, 0] * dt + _tmp46 * _tmp47
    _new_covarinace = numpy.zeros((9, 9))
    _new_covarinace[0, 0] = (
        -_tmp65 * _tmp66
        + _tmp70 * _tmp79
        + _tmp75 * _tmp85
        + _tmp78 * _tmp82
        - _tmp80 * _tmp81
        - _tmp83 * _tmp84
    )
    _new_covarinace[1, 0] = (
        _tmp100 * _tmp70
        - _tmp101 * _tmp84
        + _tmp102 * _tmp75
        - _tmp103 * _tmp81
        + _tmp104 * _tmp78
        - _tmp66 * _tmp93
    )
    _new_covarinace[2, 0] = (
        _tmp108 * _tmp70
        + _tmp109 * _tmp78
        + _tmp110 * _tmp75
        - _tmp114 * _tmp81
        - _tmp115 * _tmp66
        - _tmp116 * _tmp84
    )
    _new_covarinace[3, 0] = _tmp126 * _tmp78 + _tmp130 * _tmp70 + _tmp134 * _tmp75
    _new_covarinace[4, 0] = _tmp144 * _tmp70 + _tmp148 * _tmp78 + _tmp152 * _tmp75
    _new_covarinace[5, 0] = _tmp162 * _tmp70 + _tmp166 * _tmp75 + _tmp170 * _tmp78
    _new_covarinace[6, 0] = _tmp172 * _tmp75 + _tmp173 * _tmp78 + _tmp174 * _tmp70
    _new_covarinace[7, 0] = _tmp175 * _tmp70 + _tmp176 * _tmp75 + _tmp177 * _tmp78
    _new_covarinace[8, 0] = _tmp178 * _tmp78 + _tmp179 * _tmp75 + _tmp180 * _tmp70
    _new_covarinace[0, 1] = (
        -_tmp181 * _tmp83
        - _tmp182 * _tmp80
        - _tmp183 * _tmp65
        + _tmp79 * _tmp94
        + _tmp82 * _tmp97
        + _tmp85 * _tmp99
    )
    _new_covarinace[1, 1] = (
        _tmp100 * _tmp94
        - _tmp101 * _tmp181
        + _tmp102 * _tmp99
        - _tmp103 * _tmp182
        + _tmp104 * _tmp97
        - _tmp183 * _tmp93
    )
    _new_covarinace[2, 1] = (
        _tmp108 * _tmp94
        + _tmp109 * _tmp97
        + _tmp110 * _tmp99
        - _tmp114 * _tmp182
        - _tmp115 * _tmp183
        - _tmp116 * _tmp181
    )
    _new_covarinace[3, 1] = _tmp126 * _tmp97 + _tmp130 * _tmp94 + _tmp134 * _tmp99
    _new_covarinace[4, 1] = _tmp144 * _tmp94 + _tmp148 * _tmp97 + _tmp152 * _tmp99
    _new_covarinace[5, 1] = _tmp162 * _tmp94 + _tmp166 * _tmp99 + _tmp170 * _tmp97
    _new_covarinace[6, 1] = _tmp172 * _tmp99 + _tmp173 * _tmp97 + _tmp174 * _tmp94
    _new_covarinace[7, 1] = _tmp175 * _tmp94 + _tmp176 * _tmp99 + _tmp177 * _tmp97
    _new_covarinace[8, 1] = _tmp178 * _tmp97 + _tmp179 * _tmp99 + _tmp180 * _tmp94
    _new_covarinace[0, 2] = (
        _tmp105 * _tmp79
        + _tmp106 * _tmp85
        + _tmp107 * _tmp82
        - _tmp184 * _tmp83
        - _tmp185 * _tmp65
        - _tmp186 * _tmp80
    )
    _new_covarinace[1, 2] = (
        _tmp100 * _tmp105
        - _tmp101 * _tmp184
        + _tmp102 * _tmp106
        - _tmp103 * _tmp186
        + _tmp104 * _tmp107
        - _tmp185 * _tmp93
    )
    _new_covarinace[2, 2] = (
        _tmp105 * _tmp108
        + _tmp106 * _tmp110
        + _tmp107 * _tmp109
        - _tmp114 * _tmp186
        - _tmp115 * _tmp185
        - _tmp116 * _tmp184
    )
    _new_covarinace[3, 2] = _tmp105 * _tmp130 + _tmp106 * _tmp134 + _tmp107 * _tmp126
    _new_covarinace[4, 2] = _tmp105 * _tmp144 + _tmp106 * _tmp152 + _tmp107 * _tmp148
    _new_covarinace[5, 2] = _tmp105 * _tmp162 + _tmp106 * _tmp166 + _tmp107 * _tmp170
    _new_covarinace[6, 2] = _tmp105 * _tmp174 + _tmp106 * _tmp172 + _tmp107 * _tmp173
    _new_covarinace[7, 2] = _tmp105 * _tmp175 + _tmp106 * _tmp176 + _tmp107 * _tmp177
    _new_covarinace[8, 2] = _tmp105 * _tmp180 + _tmp106 * _tmp179 + _tmp107 * _tmp178
    _new_covarinace[0, 3] = -_tmp187 - _tmp188 - _tmp189 + _tmp190
    _new_covarinace[1, 3] = -_tmp191 - _tmp192 - _tmp193 + _tmp194
    _new_covarinace[2, 3] = -_tmp195 - _tmp196 - _tmp197 + _tmp198
    _new_covarinace[3, 3] = (
        -_tmp117 * _tmp204
        - _tmp118 * _tmp212
        - _tmp121 * _tmp208
        - _tmp199
        - _tmp200
        - _tmp213
        + _tmp217
    )
    _new_covarinace[4, 3] = (
        -_tmp117 * _tmp229
        - _tmp118 * _tmp221
        - _tmp121 * _tmp225
        - _tmp230
        - _tmp231
        - _tmp232
        + _tmp236
    )
    _new_covarinace[5, 3] = (
        -_tmp117 * _tmp250
        - _tmp118 * _tmp242
        - _tmp121 * _tmp246
        - _tmp237
        - _tmp238
        - _tmp251
        + _tmp255
    )
    _new_covarinace[6, 3] = (
        -_tmp117 * _tmp258
        - _tmp118 * _tmp261
        - _tmp121 * _tmp259
        - _tmp256
        - _tmp257
        - _tmp260
        + _tmp262
    )
    _new_covarinace[7, 3] = (
        -_tmp117 * _tmp267
        - _tmp118 * _tmp265
        - _tmp121 * _tmp266
        - _tmp263
        - _tmp264
        - _tmp268
        + _tmp269
    )
    _new_covarinace[8, 3] = (
        -_tmp117 * _tmp274
        - _tmp118 * _tmp275
        - _tmp121 * _tmp273
        - _tmp270
        - _tmp271
        - _tmp272
        + _tmp276
    )
    _new_covarinace[0, 4] = -_tmp277 - _tmp278 - _tmp279 + _tmp280
    _new_covarinace[1, 4] = -_tmp281 - _tmp282 - _tmp283 + _tmp284
    _new_covarinace[2, 4] = -_tmp285 - _tmp286 - _tmp287 + _tmp288
    _new_covarinace[3, 4] = (
        -_tmp135 * _tmp208
        - _tmp136 * _tmp204
        - _tmp139 * _tmp212
        - _tmp289
        - _tmp290
        - _tmp291
        + _tmp295
    )
    _new_covarinace[4, 4] = (
        -_tmp135 * _tmp225
        - _tmp136 * _tmp229
        - _tmp139 * _tmp221
        - _tmp296
        - _tmp297
        - _tmp298
        + _tmp302
    )
    _new_covarinace[5, 4] = (
        -_tmp135 * _tmp246
        - _tmp136 * _tmp250
        - _tmp139 * _tmp242
        - _tmp303
        - _tmp304
        - _tmp305
        + _tmp309
    )
    _new_covarinace[6, 4] = (
        -_tmp135 * _tmp259
        - _tmp136 * _tmp258
        - _tmp139 * _tmp261
        - _tmp310
        - _tmp311
        - _tmp312
        + _tmp313
    )
    _new_covarinace[7, 4] = (
        -_tmp135 * _tmp266
        - _tmp136 * _tmp267
        - _tmp139 * _tmp265
        - _tmp314
        - _tmp315
        - _tmp316
        + _tmp317
    )
    _new_covarinace[8, 4] = (
        -_tmp135 * _tmp273
        - _tmp136 * _tmp274
        - _tmp139 * _tmp275
        - _tmp318
        - _tmp319
        - _tmp320
        + _tmp321
    )
    _new_covarinace[0, 5] = -_tmp322 - _tmp323 - _tmp324 + _tmp325
    _new_covarinace[1, 5] = -_tmp326 - _tmp327 - _tmp328 + _tmp329
    _new_covarinace[2, 5] = -_tmp330 - _tmp331 - _tmp332 + _tmp333
    _new_covarinace[3, 5] = (
        -_tmp153 * _tmp204
        - _tmp154 * _tmp208
        - _tmp157 * _tmp212
        - _tmp334
        - _tmp335
        - _tmp336
        + _tmp340
    )
    _new_covarinace[4, 5] = (
        -_tmp153 * _tmp229
        - _tmp154 * _tmp225
        - _tmp157 * _tmp221
        - _tmp341
        - _tmp342
        - _tmp343
        + _tmp347
    )
    _new_covarinace[5, 5] = (
        -_tmp153 * _tmp250
        - _tmp154 * _tmp246
        - _tmp157 * _tmp242
        - _tmp348
        - _tmp349
        - _tmp350
        + _tmp354
    )
    _new_covarinace[6, 5] = (
        -_tmp153 * _tmp258
        - _tmp154 * _tmp259
        - _tmp157 * _tmp261
        - _tmp355
        - _tmp356
        - _tmp357
        + _tmp358
    )
    _new_covarinace[7, 5] = (
        -_tmp153 * _tmp267
        - _tmp154 * _tmp266
        - _tmp157 * _tmp265
        - _tmp359
        - _tmp360
        - _tmp361
        + _tmp362
    )
    _new_covarinace[8, 5] = (
        -_tmp153 * _tmp274
        - _tmp154 * _tmp273
        - _tmp157 * _tmp275
        - _tmp363
        - _tmp364
        - _tmp365
        + _tmp366
    )
    _new_covarinace[0, 6] = (
        -_tmp171 * _tmp187
        - _tmp171 * _tmp188
        - _tmp171 * _tmp189
        + _tmp190 * dt
        + _tmp70 * covariance[0, 6]
        + _tmp75 * covariance[1, 6]
        + _tmp78 * covariance[2, 6]
    )
    _new_covarinace[1, 6] = (
        -_tmp171 * _tmp191
        - _tmp171 * _tmp192
        - _tmp171 * _tmp193
        + _tmp194 * dt
        + _tmp94 * covariance[0, 6]
        + _tmp97 * covariance[2, 6]
        + _tmp99 * covariance[1, 6]
    )
    _new_covarinace[2, 6] = (
        _tmp105 * covariance[0, 6]
        + _tmp106 * covariance[1, 6]
        + _tmp107 * covariance[2, 6]
        - _tmp171 * _tmp195
        - _tmp171 * _tmp196
        - _tmp171 * _tmp197
        + _tmp198 * dt
    )
    _new_covarinace[3, 6] = (
        -_tmp171 * _tmp199
        - _tmp171 * _tmp200
        - _tmp171 * _tmp213
        - _tmp204 * _tmp370
        - _tmp208 * _tmp371
        - _tmp212 * _tmp372
        + _tmp217 * dt
        - _tmp367
        - _tmp368
        - _tmp369
        + covariance[3, 6]
    )
    _new_covarinace[4, 6] = (
        -_tmp171 * _tmp230
        - _tmp171 * _tmp231
        - _tmp171 * _tmp232
        - _tmp221 * _tmp372
        - _tmp225 * _tmp371
        - _tmp229 * _tmp370
        + _tmp236 * dt
        - _tmp373
        - _tmp374
        - _tmp375
        + covariance[4, 6]
    )
    _new_covarinace[5, 6] = (
        -_tmp171 * _tmp237
        - _tmp171 * _tmp238
        - _tmp171 * _tmp251
        - _tmp242 * _tmp372
        - _tmp246 * _tmp371
        - _tmp250 * _tmp370
        + _tmp255 * dt
        - _tmp376
        - _tmp377
        - _tmp378
        + covariance[5, 6]
    )
    _new_covarinace[6, 6] = (
        -_tmp171 * _tmp256
        - _tmp171 * _tmp257
        - _tmp171 * _tmp260
        - _tmp171 * _tmp367
        - _tmp171 * _tmp368
        - _tmp171 * _tmp369
        - _tmp258 * _tmp370
        - _tmp259 * _tmp371
        - _tmp261 * _tmp372
        + _tmp262 * dt
        + covariance[3, 6] * dt
        + covariance[6, 6]
    )
    _new_covarinace[7, 6] = (
        -_tmp171 * _tmp263
        - _tmp171 * _tmp264
        - _tmp171 * _tmp268
        - _tmp171 * _tmp373
        - _tmp171 * _tmp374
        - _tmp171 * _tmp375
        - _tmp265 * _tmp372
        - _tmp266 * _tmp371
        - _tmp267 * _tmp370
        + _tmp269 * dt
        + covariance[4, 6] * dt
        + covariance[7, 6]
    )
    _new_covarinace[8, 6] = (
        -_tmp171 * _tmp270
        - _tmp171 * _tmp271
        - _tmp171 * _tmp272
        - _tmp171 * _tmp376
        - _tmp171 * _tmp377
        - _tmp171 * _tmp378
        - _tmp273 * _tmp371
        - _tmp274 * _tmp370
        - _tmp275 * _tmp372
        + _tmp276 * dt
        + covariance[5, 6] * dt
        + covariance[8, 6]
    )
    _new_covarinace[0, 7] = (
        -_tmp171 * _tmp277
        - _tmp171 * _tmp278
        - _tmp171 * _tmp279
        + _tmp280 * dt
        + _tmp70 * covariance[0, 7]
        + _tmp75 * covariance[1, 7]
        + _tmp78 * covariance[2, 7]
    )
    _new_covarinace[1, 7] = (
        -_tmp171 * _tmp281
        - _tmp171 * _tmp282
        - _tmp171 * _tmp283
        + _tmp284 * dt
        + _tmp94 * covariance[0, 7]
        + _tmp97 * covariance[2, 7]
        + _tmp99 * covariance[1, 7]
    )
    _new_covarinace[2, 7] = (
        _tmp105 * covariance[0, 7]
        + _tmp106 * covariance[1, 7]
        + _tmp107 * covariance[2, 7]
        - _tmp171 * _tmp285
        - _tmp171 * _tmp286
        - _tmp171 * _tmp287
        + _tmp288 * dt
    )
    _new_covarinace[3, 7] = (
        -_tmp171 * _tmp289
        - _tmp171 * _tmp290
        - _tmp171 * _tmp291
        - _tmp204 * _tmp383
        - _tmp208 * _tmp384
        - _tmp212 * _tmp382
        + _tmp295 * dt
        - _tmp379
        - _tmp380
        - _tmp381
        + covariance[3, 7]
    )
    _new_covarinace[4, 7] = (
        -_tmp171 * _tmp296
        - _tmp171 * _tmp297
        - _tmp171 * _tmp298
        - _tmp221 * _tmp382
        - _tmp225 * _tmp384
        - _tmp229 * _tmp383
        + _tmp302 * dt
        - _tmp385
        - _tmp386
        - _tmp387
        + covariance[4, 7]
    )
    _new_covarinace[5, 7] = (
        -_tmp171 * _tmp303
        - _tmp171 * _tmp304
        - _tmp171 * _tmp305
        - _tmp242 * _tmp382
        - _tmp246 * _tmp384
        - _tmp250 * _tmp383
        + _tmp309 * dt
        - _tmp388
        - _tmp389
        - _tmp390
        + covariance[5, 7]
    )
    _new_covarinace[6, 7] = (
        -_tmp171 * _tmp310
        - _tmp171 * _tmp311
        - _tmp171 * _tmp312
        - _tmp171 * _tmp379
        - _tmp171 * _tmp380
        - _tmp171 * _tmp381
        - _tmp258 * _tmp383
        - _tmp259 * _tmp384
        - _tmp261 * _tmp382
        + _tmp313 * dt
        + covariance[3, 7] * dt
        + covariance[6, 7]
    )
    _new_covarinace[7, 7] = (
        -_tmp171 * _tmp314
        - _tmp171 * _tmp315
        - _tmp171 * _tmp316
        - _tmp171 * _tmp385
        - _tmp171 * _tmp386
        - _tmp171 * _tmp387
        - _tmp265 * _tmp382
        - _tmp266 * _tmp384
        - _tmp267 * _tmp383
        + _tmp317 * dt
        + covariance[4, 7] * dt
        + covariance[7, 7]
    )
    _new_covarinace[8, 7] = (
        -_tmp171 * _tmp318
        - _tmp171 * _tmp319
        - _tmp171 * _tmp320
        - _tmp171 * _tmp388
        - _tmp171 * _tmp389
        - _tmp171 * _tmp390
        - _tmp273 * _tmp384
        - _tmp274 * _tmp383
        - _tmp275 * _tmp382
        + _tmp321 * dt
        + covariance[5, 7] * dt
        + covariance[8, 7]
    )
    _new_covarinace[0, 8] = (
        -_tmp171 * _tmp322
        - _tmp171 * _tmp323
        - _tmp171 * _tmp324
        + _tmp325 * dt
        + _tmp70 * covariance[0, 8]
        + _tmp75 * covariance[1, 8]
        + _tmp78 * covariance[2, 8]
    )
    _new_covarinace[1, 8] = (
        -_tmp171 * _tmp326
        - _tmp171 * _tmp327
        - _tmp171 * _tmp328
        + _tmp329 * dt
        + _tmp94 * covariance[0, 8]
        + _tmp97 * covariance[2, 8]
        + _tmp99 * covariance[1, 8]
    )
    _new_covarinace[2, 8] = (
        _tmp105 * covariance[0, 8]
        + _tmp106 * covariance[1, 8]
        + _tmp107 * covariance[2, 8]
        - _tmp171 * _tmp330
        - _tmp171 * _tmp331
        - _tmp171 * _tmp332
        + _tmp333 * dt
    )
    _new_covarinace[3, 8] = (
        -_tmp171 * _tmp334
        - _tmp171 * _tmp335
        - _tmp171 * _tmp336
        - _tmp204 * _tmp396
        - _tmp208 * _tmp395
        - _tmp212 * _tmp394
        + _tmp340 * dt
        - _tmp391
        - _tmp392
        - _tmp393
        + covariance[3, 8]
    )
    _new_covarinace[4, 8] = (
        -_tmp171 * _tmp341
        - _tmp171 * _tmp342
        - _tmp171 * _tmp343
        - _tmp221 * _tmp394
        - _tmp225 * _tmp395
        - _tmp229 * _tmp396
        + _tmp347 * dt
        - _tmp397
        - _tmp398
        - _tmp399
        + covariance[4, 8]
    )
    _new_covarinace[5, 8] = (
        -_tmp171 * _tmp348
        - _tmp171 * _tmp349
        - _tmp171 * _tmp350
        - _tmp242 * _tmp394
        - _tmp246 * _tmp395
        - _tmp250 * _tmp396
        + _tmp354 * dt
        - _tmp400
        - _tmp401
        - _tmp402
        + covariance[5, 8]
    )
    _new_covarinace[6, 8] = (
        -_tmp171 * _tmp355
        - _tmp171 * _tmp356
        - _tmp171 * _tmp357
        - _tmp171 * _tmp391
        - _tmp171 * _tmp392
        - _tmp171 * _tmp393
        - _tmp258 * _tmp396
        - _tmp259 * _tmp395
        - _tmp261 * _tmp394
        + _tmp358 * dt
        + covariance[3, 8] * dt
        + covariance[6, 8]
    )
    _new_covarinace[7, 8] = (
        -_tmp171 * _tmp359
        - _tmp171 * _tmp360
        - _tmp171 * _tmp361
        - _tmp171 * _tmp397
        - _tmp171 * _tmp398
        - _tmp171 * _tmp399
        - _tmp265 * _tmp394
        - _tmp266 * _tmp395
        - _tmp267 * _tmp396
        + _tmp362 * dt
        + covariance[4, 8] * dt
        + covariance[7, 8]
    )
    _new_covarinace[8, 8] = (
        -_tmp171 * _tmp363
        - _tmp171 * _tmp364
        - _tmp171 * _tmp365
        - _tmp171 * _tmp400
        - _tmp171 * _tmp401
        - _tmp171 * _tmp402
        - _tmp273 * _tmp395
        - _tmp274 * _tmp396
        - _tmp275 * _tmp394
        + _tmp366 * dt
        + covariance[5, 8] * dt
        + covariance[8, 8]
    )
    _new_DR_D_gyro_bias = numpy.zeros((3, 3))
    _new_DR_D_gyro_bias[0, 0] = (
        DR_D_gyro_bias[0, 0] * _tmp70
        + DR_D_gyro_bias[1, 0] * _tmp75
        + DR_D_gyro_bias[2, 0] * _tmp78
        - _tmp84
    )
    _new_DR_D_gyro_bias[1, 0] = (
        DR_D_gyro_bias[0, 0] * _tmp94
        + DR_D_gyro_bias[1, 0] * _tmp99
        + DR_D_gyro_bias[2, 0] * _tmp97
        - _tmp181
    )
    _new_DR_D_gyro_bias[2, 0] = (
        DR_D_gyro_bias[0, 0] * _tmp105
        + DR_D_gyro_bias[1, 0] * _tmp106
        + DR_D_gyro_bias[2, 0] * _tmp107
        - _tmp184
    )
    _new_DR_D_gyro_bias[0, 1] = (
        DR_D_gyro_bias[0, 1] * _tmp70
        + DR_D_gyro_bias[1, 1] * _tmp75
        + DR_D_gyro_bias[2, 1] * _tmp78
        - _tmp66
    )
    _new_DR_D_gyro_bias[1, 1] = (
        DR_D_gyro_bias[0, 1] * _tmp94
        + DR_D_gyro_bias[1, 1] * _tmp99
        + DR_D_gyro_bias[2, 1] * _tmp97
        - _tmp183
    )
    _new_DR_D_gyro_bias[2, 1] = (
        DR_D_gyro_bias[0, 1] * _tmp105
        + DR_D_gyro_bias[1, 1] * _tmp106
        + DR_D_gyro_bias[2, 1] * _tmp107
        - _tmp185
    )
    _new_DR_D_gyro_bias[0, 2] = (
        DR_D_gyro_bias[0, 2] * _tmp70
        + DR_D_gyro_bias[1, 2] * _tmp75
        + DR_D_gyro_bias[2, 2] * _tmp78
        - _tmp81
    )
    _new_DR_D_gyro_bias[1, 2] = (
        DR_D_gyro_bias[0, 2] * _tmp94
        + DR_D_gyro_bias[1, 2] * _tmp99
        + DR_D_gyro_bias[2, 2] * _tmp97
        - _tmp182
    )
    _new_DR_D_gyro_bias[2, 2] = (
        DR_D_gyro_bias[0, 2] * _tmp105
        + DR_D_gyro_bias[1, 2] * _tmp106
        + DR_D_gyro_bias[2, 2] * _tmp107
        - _tmp186
    )
    _new_Dp_D_gyro_bias = numpy.zeros((3, 3))
    _new_Dp_D_gyro_bias[0, 0] = Dv_D_gyro_bias[0, 0] - _tmp403 - _tmp404 - _tmp405
    _new_Dp_D_gyro_bias[1, 0] = Dv_D_gyro_bias[1, 0] - _tmp406 - _tmp407 - _tmp408
    _new_Dp_D_gyro_bias[2, 0] = Dv_D_gyro_bias[2, 0] - _tmp409 - _tmp410 - _tmp411
    _new_Dp_D_gyro_bias[0, 1] = Dv_D_gyro_bias[0, 1] - _tmp412 - _tmp413 - _tmp414
    _new_Dp_D_gyro_bias[1, 1] = Dv_D_gyro_bias[1, 1] - _tmp415 - _tmp416 - _tmp417
    _new_Dp_D_gyro_bias[2, 1] = Dv_D_gyro_bias[2, 1] - _tmp418 - _tmp419 - _tmp420
    _new_Dp_D_gyro_bias[0, 2] = Dv_D_gyro_bias[0, 2] - _tmp421 - _tmp422 - _tmp423
    _new_Dp_D_gyro_bias[1, 2] = Dv_D_gyro_bias[1, 2] - _tmp424 - _tmp425 - _tmp426
    _new_Dp_D_gyro_bias[2, 2] = Dv_D_gyro_bias[2, 2] - _tmp427 - _tmp428 - _tmp429
    _new_Dp_D_accel_bias = numpy.zeros((3, 3))
    _new_Dp_D_accel_bias[0, 0] = Dv_D_accel_bias[0, 0] - _tmp118
    _new_Dp_D_accel_bias[1, 0] = Dv_D_accel_bias[1, 0] - _tmp139
    _new_Dp_D_accel_bias[2, 0] = Dv_D_accel_bias[2, 0] - _tmp157
    _new_Dp_D_accel_bias[0, 1] = Dv_D_accel_bias[0, 1] - _tmp117
    _new_Dp_D_accel_bias[1, 1] = Dv_D_accel_bias[1, 1] - _tmp136
    _new_Dp_D_accel_bias[2, 1] = Dv_D_accel_bias[2, 1] - _tmp153
    _new_Dp_D_accel_bias[0, 2] = Dv_D_accel_bias[0, 2] - _tmp121
    _new_Dp_D_accel_bias[1, 2] = Dv_D_accel_bias[1, 2] - _tmp135
    _new_Dp_D_accel_bias[2, 2] = Dv_D_accel_bias[2, 2] - _tmp154
    _new_Dv_D_gyro_bias = numpy.zeros((3, 3))
    _new_Dv_D_gyro_bias[0, 0] = (
        Dp_D_gyro_bias[0, 0]
        + Dv_D_gyro_bias[0, 0] * dt
        - _tmp171 * _tmp403
        - _tmp171 * _tmp404
        - _tmp171 * _tmp405
    )
    _new_Dv_D_gyro_bias[1, 0] = (
        Dp_D_gyro_bias[1, 0]
        + Dv_D_gyro_bias[1, 0] * dt
        - _tmp171 * _tmp406
        - _tmp171 * _tmp407
        - _tmp171 * _tmp408
    )
    _new_Dv_D_gyro_bias[2, 0] = (
        Dp_D_gyro_bias[2, 0]
        + Dv_D_gyro_bias[2, 0] * dt
        - _tmp171 * _tmp409
        - _tmp171 * _tmp410
        - _tmp171 * _tmp411
    )
    _new_Dv_D_gyro_bias[0, 1] = (
        Dp_D_gyro_bias[0, 1]
        + Dv_D_gyro_bias[0, 1] * dt
        - _tmp171 * _tmp412
        - _tmp171 * _tmp413
        - _tmp171 * _tmp414
    )
    _new_Dv_D_gyro_bias[1, 1] = (
        Dp_D_gyro_bias[1, 1]
        + Dv_D_gyro_bias[1, 1] * dt
        - _tmp171 * _tmp415
        - _tmp171 * _tmp416
        - _tmp171 * _tmp417
    )
    _new_Dv_D_gyro_bias[2, 1] = (
        Dp_D_gyro_bias[2, 1]
        + Dv_D_gyro_bias[2, 1] * dt
        - _tmp171 * _tmp418
        - _tmp171 * _tmp419
        - _tmp171 * _tmp420
    )
    _new_Dv_D_gyro_bias[0, 2] = (
        Dp_D_gyro_bias[0, 2]
        + Dv_D_gyro_bias[0, 2] * dt
        - _tmp171 * _tmp421
        - _tmp171 * _tmp422
        - _tmp171 * _tmp423
    )
    _new_Dv_D_gyro_bias[1, 2] = (
        Dp_D_gyro_bias[1, 2]
        + Dv_D_gyro_bias[1, 2] * dt
        - _tmp171 * _tmp424
        - _tmp171 * _tmp425
        - _tmp171 * _tmp426
    )
    _new_Dv_D_gyro_bias[2, 2] = (
        Dp_D_gyro_bias[2, 2]
        + Dv_D_gyro_bias[2, 2] * dt
        - _tmp171 * _tmp427
        - _tmp171 * _tmp428
        - _tmp171 * _tmp429
    )
    _new_Dv_D_accel_bias = numpy.zeros((3, 3))
    _new_Dv_D_accel_bias[0, 0] = Dp_D_accel_bias[0, 0] + Dv_D_accel_bias[0, 0] * dt - _tmp372
    _new_Dv_D_accel_bias[1, 0] = Dp_D_accel_bias[1, 0] + Dv_D_accel_bias[1, 0] * dt - _tmp382
    _new_Dv_D_accel_bias[2, 0] = Dp_D_accel_bias[2, 0] + Dv_D_accel_bias[2, 0] * dt - _tmp394
    _new_Dv_D_accel_bias[0, 1] = Dp_D_accel_bias[0, 1] + Dv_D_accel_bias[0, 1] * dt - _tmp370
    _new_Dv_D_accel_bias[1, 1] = Dp_D_accel_bias[1, 1] + Dv_D_accel_bias[1, 1] * dt - _tmp383
    _new_Dv_D_accel_bias[2, 1] = Dp_D_accel_bias[2, 1] + Dv_D_accel_bias[2, 1] * dt - _tmp396
    _new_Dv_D_accel_bias[0, 2] = Dp_D_accel_bias[0, 2] + Dv_D_accel_bias[0, 2] * dt - _tmp371
    _new_Dv_D_accel_bias[1, 2] = Dp_D_accel_bias[1, 2] + Dv_D_accel_bias[1, 2] * dt - _tmp384
    _new_Dv_D_accel_bias[2, 2] = Dp_D_accel_bias[2, 2] + Dv_D_accel_bias[2, 2] * dt - _tmp395
    return (
        sym.Rot3.from_storage(_new_DR),
        _new_Dv,
        _new_Dp,
        _new_covarinace,
        _new_DR_D_gyro_bias,
        _new_Dp_D_gyro_bias,
        _new_Dp_D_accel_bias,
        _new_Dv_D_gyro_bias,
        _new_Dv_D_accel_bias,
    )
