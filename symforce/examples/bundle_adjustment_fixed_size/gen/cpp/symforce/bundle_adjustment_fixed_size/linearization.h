// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

#include <sym/pose3.h>

namespace bundle_adjustment_fixed_size {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Computes the linearization of the residual around the given state,
 * and returns the relevant information about the resulting linear system.
 *
 * Input args: The state to linearize around
 *
 * Output args:
 *     residual (Eigen::Matrix*): The residual vector
 *     jacobian: (72x26) jacobian of residual wrt args views_1_pose (6), landmarks_0_ (1),
 *               landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1),
 *               landmarks_5_ (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1),
 *               landmarks_9_ (1), landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1),
 *               landmarks_13_ (1), landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1),
 *               landmarks_17_ (1), landmarks_18_ (1), landmarks_19_ (1)
 *     hessian: (26x26) Gauss-Newton hessian for args views_1_pose (6), landmarks_0_ (1),
 *              landmarks_1_ (1), landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_
 *              (1), landmarks_6_ (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1),
 *              landmarks_10_ (1), landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1),
 *              landmarks_14_ (1), landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1),
 *              landmarks_18_ (1), landmarks_19_ (1)
 *     rhs: (26x1) Gauss-Newton rhs for args views_1_pose (6), landmarks_0_ (1), landmarks_1_ (1),
 *          landmarks_2_ (1), landmarks_3_ (1), landmarks_4_ (1), landmarks_5_ (1), landmarks_6_
 *          (1), landmarks_7_ (1), landmarks_8_ (1), landmarks_9_ (1), landmarks_10_ (1),
 *          landmarks_11_ (1), landmarks_12_ (1), landmarks_13_ (1), landmarks_14_ (1),
 *          landmarks_15_ (1), landmarks_16_ (1), landmarks_17_ (1), landmarks_18_ (1),
 *          landmarks_19_ (1)
 */
template <typename Scalar>
void Linearization(
    const Eigen::Matrix<Scalar, 4, 1>& views_0_calibration, const sym::Pose3<Scalar>& views_0_pose,
    const Eigen::Matrix<Scalar, 4, 1>& views_1_calibration, const sym::Pose3<Scalar>& views_1_pose,
    const sym::Pose3<Scalar>& priors_0_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_0_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_0_1_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_0_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_0_sqrt_info,
    const sym::Pose3<Scalar>& priors_1_1_target_T_src,
    const Eigen::Matrix<Scalar, 6, 6>& priors_1_1_sqrt_info,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_0_target_coords, const Scalar matches_0_0_weight,
    const Scalar matches_0_0_inverse_range_prior,
    const Scalar matches_0_0_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_1_target_coords, const Scalar matches_0_1_weight,
    const Scalar matches_0_1_inverse_range_prior,
    const Scalar matches_0_1_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_2_target_coords, const Scalar matches_0_2_weight,
    const Scalar matches_0_2_inverse_range_prior,
    const Scalar matches_0_2_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_3_target_coords, const Scalar matches_0_3_weight,
    const Scalar matches_0_3_inverse_range_prior,
    const Scalar matches_0_3_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_4_target_coords, const Scalar matches_0_4_weight,
    const Scalar matches_0_4_inverse_range_prior,
    const Scalar matches_0_4_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_5_target_coords, const Scalar matches_0_5_weight,
    const Scalar matches_0_5_inverse_range_prior,
    const Scalar matches_0_5_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_6_target_coords, const Scalar matches_0_6_weight,
    const Scalar matches_0_6_inverse_range_prior,
    const Scalar matches_0_6_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_7_target_coords, const Scalar matches_0_7_weight,
    const Scalar matches_0_7_inverse_range_prior,
    const Scalar matches_0_7_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_8_target_coords, const Scalar matches_0_8_weight,
    const Scalar matches_0_8_inverse_range_prior,
    const Scalar matches_0_8_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_9_target_coords, const Scalar matches_0_9_weight,
    const Scalar matches_0_9_inverse_range_prior,
    const Scalar matches_0_9_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_10_target_coords, const Scalar matches_0_10_weight,
    const Scalar matches_0_10_inverse_range_prior,
    const Scalar matches_0_10_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_11_target_coords, const Scalar matches_0_11_weight,
    const Scalar matches_0_11_inverse_range_prior,
    const Scalar matches_0_11_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_12_target_coords, const Scalar matches_0_12_weight,
    const Scalar matches_0_12_inverse_range_prior,
    const Scalar matches_0_12_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_13_target_coords, const Scalar matches_0_13_weight,
    const Scalar matches_0_13_inverse_range_prior,
    const Scalar matches_0_13_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_14_target_coords, const Scalar matches_0_14_weight,
    const Scalar matches_0_14_inverse_range_prior,
    const Scalar matches_0_14_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_15_target_coords, const Scalar matches_0_15_weight,
    const Scalar matches_0_15_inverse_range_prior,
    const Scalar matches_0_15_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_16_target_coords, const Scalar matches_0_16_weight,
    const Scalar matches_0_16_inverse_range_prior,
    const Scalar matches_0_16_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_17_target_coords, const Scalar matches_0_17_weight,
    const Scalar matches_0_17_inverse_range_prior,
    const Scalar matches_0_17_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_18_target_coords, const Scalar matches_0_18_weight,
    const Scalar matches_0_18_inverse_range_prior,
    const Scalar matches_0_18_inverse_range_prior_sigma,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_source_coords,
    const Eigen::Matrix<Scalar, 2, 1>& matches_0_19_target_coords, const Scalar matches_0_19_weight,
    const Scalar matches_0_19_inverse_range_prior,
    const Scalar matches_0_19_inverse_range_prior_sigma, const Scalar landmarks_0_,
    const Scalar landmarks_1_, const Scalar landmarks_2_, const Scalar landmarks_3_,
    const Scalar landmarks_4_, const Scalar landmarks_5_, const Scalar landmarks_6_,
    const Scalar landmarks_7_, const Scalar landmarks_8_, const Scalar landmarks_9_,
    const Scalar landmarks_10_, const Scalar landmarks_11_, const Scalar landmarks_12_,
    const Scalar landmarks_13_, const Scalar landmarks_14_, const Scalar landmarks_15_,
    const Scalar landmarks_16_, const Scalar landmarks_17_, const Scalar landmarks_18_,
    const Scalar landmarks_19_, const Scalar costs_reprojection_error_gnc_scale,
    const Scalar costs_reprojection_error_gnc_mu, const Scalar epsilon,
    Eigen::Matrix<Scalar, 72, 1>* const residual = nullptr,
    Eigen::SparseMatrix<Scalar>* const jacobian = nullptr,
    Eigen::SparseMatrix<Scalar>* const hessian = nullptr,
    Eigen::Matrix<Scalar, 26, 1>* const rhs = nullptr) {
  // Total ops: 12085

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _views_0_pose = views_0_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _views_1_pose = views_1_pose.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_0_target_T_src = priors_0_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_0_1_target_T_src = priors_0_1_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_0_target_T_src = priors_1_0_target_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _priors_1_1_target_T_src = priors_1_1_target_T_src.Data();

  // Intermediate terms (3049)
  const Scalar _tmp0 = _views_0_pose[2] * _views_0_pose[3];
  const Scalar _tmp1 = 2 * _tmp0;
  const Scalar _tmp2 = _views_0_pose[0] * _views_0_pose[1];
  const Scalar _tmp3 = 2 * _tmp2;
  const Scalar _tmp4 = -_tmp1 + _tmp3;
  const Scalar _tmp5 = std::pow(_views_0_pose[0], Scalar(2));
  const Scalar _tmp6 = -2 * _tmp5;
  const Scalar _tmp7 = std::pow(_views_0_pose[2], Scalar(2));
  const Scalar _tmp8 = 1 - 2 * _tmp7;
  const Scalar _tmp9 = _tmp6 + _tmp8;
  const Scalar _tmp10 = _views_0_pose[1] * _views_0_pose[2];
  const Scalar _tmp11 = 2 * _tmp10;
  const Scalar _tmp12 = _views_0_pose[0] * _views_0_pose[3];
  const Scalar _tmp13 = 2 * _tmp12;
  const Scalar _tmp14 = _tmp11 + _tmp13;
  const Scalar _tmp15 = -_priors_0_1_target_T_src[5] - _tmp14 * _views_0_pose[6] +
                        _tmp14 * _views_1_pose[6] - _tmp4 * _views_0_pose[4] +
                        _tmp4 * _views_1_pose[4] - _tmp9 * _views_0_pose[5] +
                        _tmp9 * _views_1_pose[5];
  const Scalar _tmp16 = _views_0_pose[0] * _views_1_pose[0];
  const Scalar _tmp17 = _views_0_pose[2] * _views_1_pose[2];
  const Scalar _tmp18 = _views_0_pose[1] * _views_1_pose[1];
  const Scalar _tmp19 = _views_0_pose[3] * _views_1_pose[3];
  const Scalar _tmp20 = _tmp16 + _tmp17 + _tmp18 + _tmp19;
  const Scalar _tmp21 = _views_0_pose[0] * _views_1_pose[3];
  const Scalar _tmp22 = _views_0_pose[3] * _views_1_pose[0];
  const Scalar _tmp23 = _views_0_pose[1] * _views_1_pose[2];
  const Scalar _tmp24 = _views_0_pose[2] * _views_1_pose[1];
  const Scalar _tmp25 = -_tmp21 + _tmp22 - _tmp23 + _tmp24;
  const Scalar _tmp26 = _views_0_pose[1] * _views_1_pose[3];
  const Scalar _tmp27 = _views_0_pose[2] * _views_1_pose[0];
  const Scalar _tmp28 = _views_0_pose[0] * _views_1_pose[2];
  const Scalar _tmp29 = _views_0_pose[3] * _views_1_pose[1];
  const Scalar _tmp30 = -_tmp26 - _tmp27 + _tmp28 + _tmp29;
  const Scalar _tmp31 = _views_0_pose[2] * _views_1_pose[3];
  const Scalar _tmp32 = _views_0_pose[1] * _views_1_pose[0];
  const Scalar _tmp33 = _views_0_pose[3] * _views_1_pose[2];
  const Scalar _tmp34 = _views_0_pose[0] * _views_1_pose[1];
  const Scalar _tmp35 = -_tmp31 + _tmp32 + _tmp33 - _tmp34;
  const Scalar _tmp36 = _priors_0_1_target_T_src[0] * _tmp25 +
                        _priors_0_1_target_T_src[1] * _tmp30 +
                        _priors_0_1_target_T_src[2] * _tmp35 + _priors_0_1_target_T_src[3] * _tmp20;
  const Scalar _tmp37 = -epsilon;
  const Scalar _tmp38 = _tmp37 + 1;
  const Scalar _tmp39 = std::min<Scalar>(_tmp38, std::fabs(_tmp36));
  const Scalar _tmp40 = 2 * (2 * std::min<Scalar>(0, (((_tmp36) > 0) - ((_tmp36) < 0))) + 1) *
                        std::acos(_tmp39) / std::sqrt(Scalar(1 - std::pow(_tmp39, Scalar(2))));
  const Scalar _tmp41 =
      _tmp40 * (_priors_0_1_target_T_src[0] * _tmp35 - _priors_0_1_target_T_src[1] * _tmp20 -
                _priors_0_1_target_T_src[2] * _tmp25 + _priors_0_1_target_T_src[3] * _tmp30);
  const Scalar _tmp42 = std::pow(_views_0_pose[1], Scalar(2));
  const Scalar _tmp43 = -2 * _tmp42;
  const Scalar _tmp44 = _tmp43 + _tmp6 + 1;
  const Scalar _tmp45 = _views_0_pose[0] * _views_0_pose[2];
  const Scalar _tmp46 = 2 * _tmp45;
  const Scalar _tmp47 = _views_0_pose[1] * _views_0_pose[3];
  const Scalar _tmp48 = 2 * _tmp47;
  const Scalar _tmp49 = _tmp46 + _tmp48;
  const Scalar _tmp50 = _tmp11 - _tmp13;
  const Scalar _tmp51 = -_priors_0_1_target_T_src[6] - _tmp44 * _views_0_pose[6] +
                        _tmp44 * _views_1_pose[6] - _tmp49 * _views_0_pose[4] +
                        _tmp49 * _views_1_pose[4] - _tmp50 * _views_0_pose[5] +
                        _tmp50 * _views_1_pose[5];
  const Scalar _tmp52 =
      _tmp40 * (-_priors_0_1_target_T_src[0] * _tmp20 - _priors_0_1_target_T_src[1] * _tmp35 +
                _priors_0_1_target_T_src[2] * _tmp30 + _priors_0_1_target_T_src[3] * _tmp25);
  const Scalar _tmp53 =
      _tmp40 * (-_priors_0_1_target_T_src[0] * _tmp30 + _priors_0_1_target_T_src[1] * _tmp25 -
                _priors_0_1_target_T_src[2] * _tmp20 + _priors_0_1_target_T_src[3] * _tmp35);
  const Scalar _tmp54 = _tmp1 + _tmp3;
  const Scalar _tmp55 = _tmp43 + _tmp8;
  const Scalar _tmp56 = _tmp46 - _tmp48;
  const Scalar _tmp57 = -_priors_0_1_target_T_src[4] - _tmp54 * _views_0_pose[5] +
                        _tmp54 * _views_1_pose[5] - _tmp55 * _views_0_pose[4] +
                        _tmp55 * _views_1_pose[4] - _tmp56 * _views_0_pose[6] +
                        _tmp56 * _views_1_pose[6];
  const Scalar _tmp58 = _tmp15 * priors_0_1_sqrt_info(0, 4) + _tmp41 * priors_0_1_sqrt_info(0, 1) +
                        _tmp51 * priors_0_1_sqrt_info(0, 5) + _tmp52 * priors_0_1_sqrt_info(0, 0) +
                        _tmp53 * priors_0_1_sqrt_info(0, 2) + _tmp57 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp59 = _tmp15 * priors_0_1_sqrt_info(1, 4) + _tmp41 * priors_0_1_sqrt_info(1, 1) +
                        _tmp51 * priors_0_1_sqrt_info(1, 5) + _tmp52 * priors_0_1_sqrt_info(1, 0) +
                        _tmp53 * priors_0_1_sqrt_info(1, 2) + _tmp57 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp60 = _tmp15 * priors_0_1_sqrt_info(2, 4) + _tmp41 * priors_0_1_sqrt_info(2, 1) +
                        _tmp51 * priors_0_1_sqrt_info(2, 5) + _tmp52 * priors_0_1_sqrt_info(2, 0) +
                        _tmp53 * priors_0_1_sqrt_info(2, 2) + _tmp57 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp61 = _tmp15 * priors_0_1_sqrt_info(3, 4) + _tmp41 * priors_0_1_sqrt_info(3, 1) +
                        _tmp51 * priors_0_1_sqrt_info(3, 5) + _tmp52 * priors_0_1_sqrt_info(3, 0) +
                        _tmp53 * priors_0_1_sqrt_info(3, 2) + _tmp57 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp62 = _tmp15 * priors_0_1_sqrt_info(4, 4) + _tmp41 * priors_0_1_sqrt_info(4, 1) +
                        _tmp51 * priors_0_1_sqrt_info(4, 5) + _tmp52 * priors_0_1_sqrt_info(4, 0) +
                        _tmp53 * priors_0_1_sqrt_info(4, 2) + _tmp57 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp63 = _tmp15 * priors_0_1_sqrt_info(5, 4) + _tmp41 * priors_0_1_sqrt_info(5, 1) +
                        _tmp51 * priors_0_1_sqrt_info(5, 5) + _tmp52 * priors_0_1_sqrt_info(5, 0) +
                        _tmp53 * priors_0_1_sqrt_info(5, 2) + _tmp57 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp64 = _views_1_pose[0] * _views_1_pose[2];
  const Scalar _tmp65 = 2 * _tmp64;
  const Scalar _tmp66 = _views_1_pose[1] * _views_1_pose[3];
  const Scalar _tmp67 = 2 * _tmp66;
  const Scalar _tmp68 = _tmp65 - _tmp67;
  const Scalar _tmp69 = _views_1_pose[0] * _views_1_pose[1];
  const Scalar _tmp70 = 2 * _tmp69;
  const Scalar _tmp71 = _views_1_pose[2] * _views_1_pose[3];
  const Scalar _tmp72 = 2 * _tmp71;
  const Scalar _tmp73 = _tmp70 + _tmp72;
  const Scalar _tmp74 = std::pow(_views_1_pose[2], Scalar(2));
  const Scalar _tmp75 = -2 * _tmp74;
  const Scalar _tmp76 = std::pow(_views_1_pose[1], Scalar(2));
  const Scalar _tmp77 = -2 * _tmp76;
  const Scalar _tmp78 = _tmp75 + _tmp77 + 1;
  const Scalar _tmp79 = -_priors_1_0_target_T_src[4] + _tmp68 * _views_0_pose[6] -
                        _tmp68 * _views_1_pose[6] + _tmp73 * _views_0_pose[5] -
                        _tmp73 * _views_1_pose[5] + _tmp78 * _views_0_pose[4] -
                        _tmp78 * _views_1_pose[4];
  const Scalar _tmp80 = _views_1_pose[0] * _views_1_pose[3];
  const Scalar _tmp81 = 2 * _tmp80;
  const Scalar _tmp82 = _views_1_pose[1] * _views_1_pose[2];
  const Scalar _tmp83 = 2 * _tmp82;
  const Scalar _tmp84 = _tmp81 + _tmp83;
  const Scalar _tmp85 = _tmp70 - _tmp72;
  const Scalar _tmp86 = std::pow(_views_1_pose[0], Scalar(2));
  const Scalar _tmp87 = 1 - 2 * _tmp86;
  const Scalar _tmp88 = _tmp75 + _tmp87;
  const Scalar _tmp89 = -_priors_1_0_target_T_src[5] + _tmp84 * _views_0_pose[6] -
                        _tmp84 * _views_1_pose[6] + _tmp85 * _views_0_pose[4] -
                        _tmp85 * _views_1_pose[4] + _tmp88 * _views_0_pose[5] -
                        _tmp88 * _views_1_pose[5];
  const Scalar _tmp90 = -_tmp81 + _tmp83;
  const Scalar _tmp91 = _tmp65 + _tmp67;
  const Scalar _tmp92 = _tmp77 + _tmp87;
  const Scalar _tmp93 = -_priors_1_0_target_T_src[6] + _tmp90 * _views_0_pose[5] -
                        _tmp90 * _views_1_pose[5] + _tmp91 * _views_0_pose[4] -
                        _tmp91 * _views_1_pose[4] + _tmp92 * _views_0_pose[6] -
                        _tmp92 * _views_1_pose[6];
  const Scalar _tmp94 = _tmp26 + _tmp27 - _tmp28 - _tmp29;
  const Scalar _tmp95 = _priors_1_0_target_T_src[0] * _tmp94;
  const Scalar _tmp96 = -_tmp95;
  const Scalar _tmp97 = _tmp31 - _tmp32 - _tmp33 + _tmp34;
  const Scalar _tmp98 = _priors_1_0_target_T_src[3] * _tmp97;
  const Scalar _tmp99 = _tmp21 - _tmp22 + _tmp23 - _tmp24;
  const Scalar _tmp100 = _priors_1_0_target_T_src[1] * _tmp99;
  const Scalar _tmp101 = _tmp100 + _tmp98;
  const Scalar _tmp102 = _tmp101 + _tmp96;
  const Scalar _tmp103 = _priors_1_0_target_T_src[2] * _tmp97;
  const Scalar _tmp104 = _priors_1_0_target_T_src[1] * _tmp94;
  const Scalar _tmp105 = -_tmp104;
  const Scalar _tmp106 = _priors_1_0_target_T_src[0] * _tmp99;
  const Scalar _tmp107 = -_tmp106;
  const Scalar _tmp108 = _tmp105 + _tmp107;
  const Scalar _tmp109 = _priors_1_0_target_T_src[3] * _tmp20 + _tmp103 - _tmp108;
  const Scalar _tmp110 = std::min<Scalar>(_tmp38, std::fabs(_tmp109));
  const Scalar _tmp111 = (2 * std::min<Scalar>(0, (((_tmp109) > 0) - ((_tmp109) < 0))) + 1) *
                         std::acos(_tmp110) / std::sqrt(Scalar(1 - std::pow(_tmp110, Scalar(2))));
  const Scalar _tmp112 = _tmp111 * (-_priors_1_0_target_T_src[2] * _tmp20 + _tmp102);
  const Scalar _tmp113 = 2 * _tmp112;
  const Scalar _tmp114 = _priors_1_0_target_T_src[2] * _tmp99;
  const Scalar _tmp115 = -_tmp114;
  const Scalar _tmp116 = _priors_1_0_target_T_src[0] * _tmp97;
  const Scalar _tmp117 = _priors_1_0_target_T_src[3] * _tmp94;
  const Scalar _tmp118 = _tmp116 + _tmp117;
  const Scalar _tmp119 = _tmp115 + _tmp118;
  const Scalar _tmp120 = 2 * _tmp111;
  const Scalar _tmp121 = _tmp120 * (-_priors_1_0_target_T_src[1] * _tmp20 + _tmp119);
  const Scalar _tmp122 = _priors_1_0_target_T_src[1] * _tmp97;
  const Scalar _tmp123 = _priors_1_0_target_T_src[2] * _tmp94;
  const Scalar _tmp124 = _priors_1_0_target_T_src[3] * _tmp99;
  const Scalar _tmp125 = _tmp123 + _tmp124;
  const Scalar _tmp126 = _tmp120 * (-_priors_1_0_target_T_src[0] * _tmp20 - _tmp122 + _tmp125);
  const Scalar _tmp127 =
      _tmp113 * priors_1_0_sqrt_info(0, 2) + _tmp121 * priors_1_0_sqrt_info(0, 1) +
      _tmp126 * priors_1_0_sqrt_info(0, 0) + _tmp79 * priors_1_0_sqrt_info(0, 3) +
      _tmp89 * priors_1_0_sqrt_info(0, 4) + _tmp93 * priors_1_0_sqrt_info(0, 5);
  const Scalar _tmp128 =
      _tmp113 * priors_1_0_sqrt_info(1, 2) + _tmp121 * priors_1_0_sqrt_info(1, 1) +
      _tmp126 * priors_1_0_sqrt_info(1, 0) + _tmp79 * priors_1_0_sqrt_info(1, 3) +
      _tmp89 * priors_1_0_sqrt_info(1, 4) + _tmp93 * priors_1_0_sqrt_info(1, 5);
  const Scalar _tmp129 =
      _tmp113 * priors_1_0_sqrt_info(2, 2) + _tmp121 * priors_1_0_sqrt_info(2, 1) +
      _tmp126 * priors_1_0_sqrt_info(2, 0) + _tmp79 * priors_1_0_sqrt_info(2, 3) +
      _tmp89 * priors_1_0_sqrt_info(2, 4) + _tmp93 * priors_1_0_sqrt_info(2, 5);
  const Scalar _tmp130 =
      _tmp113 * priors_1_0_sqrt_info(3, 2) + _tmp121 * priors_1_0_sqrt_info(3, 1) +
      _tmp126 * priors_1_0_sqrt_info(3, 0) + _tmp79 * priors_1_0_sqrt_info(3, 3) +
      _tmp89 * priors_1_0_sqrt_info(3, 4) + _tmp93 * priors_1_0_sqrt_info(3, 5);
  const Scalar _tmp131 =
      _tmp113 * priors_1_0_sqrt_info(4, 2) + _tmp121 * priors_1_0_sqrt_info(4, 1) +
      _tmp126 * priors_1_0_sqrt_info(4, 0) + _tmp79 * priors_1_0_sqrt_info(4, 3) +
      _tmp89 * priors_1_0_sqrt_info(4, 4) + _tmp93 * priors_1_0_sqrt_info(4, 5);
  const Scalar _tmp132 = 2 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp133 = _tmp112 * _tmp132 + _tmp121 * priors_1_0_sqrt_info(5, 1) +
                         _tmp126 * priors_1_0_sqrt_info(5, 0) +
                         _tmp79 * priors_1_0_sqrt_info(5, 3) + _tmp89 * priors_1_0_sqrt_info(5, 4) +
                         _tmp93 * priors_1_0_sqrt_info(5, 5);
  const Scalar _tmp134 = -views_0_calibration(2, 0);
  const Scalar _tmp135 = _tmp134 + matches_0_0_source_coords(0, 0);
  const Scalar _tmp136 = std::pow(views_0_calibration(0, 0), Scalar(-2));
  const Scalar _tmp137 = -views_0_calibration(3, 0);
  const Scalar _tmp138 = _tmp137 + matches_0_0_source_coords(1, 0);
  const Scalar _tmp139 = std::pow(views_0_calibration(1, 0), Scalar(-2));
  const Scalar _tmp140 = std::pow(
      Scalar(std::pow(_tmp135, Scalar(2)) * _tmp136 + std::pow(_tmp138, Scalar(2)) * _tmp139 + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp141 = Scalar(1.0) / (views_0_calibration(0, 0));
  const Scalar _tmp142 = _tmp141 * _tmp55;
  const Scalar _tmp143 = _tmp135 * _tmp140;
  const Scalar _tmp144 = Scalar(1.0) / (views_0_calibration(1, 0));
  const Scalar _tmp145 = _tmp144 * _tmp4;
  const Scalar _tmp146 = _tmp138 * _tmp140;
  const Scalar _tmp147 = _views_0_pose[4] - _views_1_pose[4];
  const Scalar _tmp148 = _tmp147 * landmarks_0_;
  const Scalar _tmp149 = _tmp140 * _tmp49 + _tmp142 * _tmp143 + _tmp145 * _tmp146 + _tmp148;
  const Scalar _tmp150 = _tmp144 * _tmp9;
  const Scalar _tmp151 = _tmp141 * _tmp54;
  const Scalar _tmp152 = _views_0_pose[5] - _views_1_pose[5];
  const Scalar _tmp153 = _tmp152 * landmarks_0_;
  const Scalar _tmp154 = _tmp140 * _tmp50 + _tmp143 * _tmp151 + _tmp146 * _tmp150 + _tmp153;
  const Scalar _tmp155 = _tmp141 * _tmp56;
  const Scalar _tmp156 = _tmp14 * _tmp144;
  const Scalar _tmp157 = _views_0_pose[6] - _views_1_pose[6];
  const Scalar _tmp158 = _tmp157 * landmarks_0_;
  const Scalar _tmp159 = _tmp140 * _tmp44 + _tmp143 * _tmp155 + _tmp146 * _tmp156 + _tmp158;
  const Scalar _tmp160 = _tmp149 * _tmp91 + _tmp154 * _tmp90 + _tmp159 * _tmp92;
  const Scalar _tmp161 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp160)));
  const Scalar _tmp162 = -matches_0_0_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp163 = _tmp161 * views_1_calibration(0, 0) *
                             (_tmp149 * _tmp78 + _tmp154 * _tmp73 + _tmp159 * _tmp68) +
                         _tmp162;
  const Scalar _tmp164 = std::sqrt(matches_0_0_weight);
  const Scalar _tmp165 = -matches_0_0_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp166 = _tmp161 * views_1_calibration(1, 0) *
                             (_tmp149 * _tmp85 + _tmp154 * _tmp88 + _tmp159 * _tmp84) +
                         _tmp165;
  const Scalar _tmp167 = std::pow(_tmp163, Scalar(2)) + std::pow(_tmp166, Scalar(2)) + epsilon;
  const Scalar _tmp168 = std::pow(costs_reprojection_error_gnc_scale, Scalar(-2));
  const Scalar _tmp169 = Scalar(1.0) / (-costs_reprojection_error_gnc_mu + epsilon + 1);
  const Scalar _tmp170 = epsilon + std::fabs(_tmp169);
  const Scalar _tmp171 = _tmp168 / _tmp170;
  const Scalar _tmp172 = 2 - _tmp169;
  const Scalar _tmp173 =
      _tmp172 + epsilon * (2 * std::min<Scalar>(0, (((_tmp172) > 0) - ((_tmp172) < 0))) + 1);
  const Scalar _tmp174 = (Scalar(1) / Scalar(2)) * _tmp173;
  const Scalar _tmp175 = 2 * _tmp170 / _tmp173;
  const Scalar _tmp176 =
      _tmp164 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp167 * _tmp171 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp160) > 0) - ((_tmp160) < 0))) / std::sqrt(_tmp167);
  const Scalar _tmp177 = _tmp163 * _tmp176;
  const Scalar _tmp178 = _tmp166 * _tmp176;
  const Scalar _tmp179 = _tmp134 + matches_0_1_source_coords(0, 0);
  const Scalar _tmp180 = _tmp137 + matches_0_1_source_coords(1, 0);
  const Scalar _tmp181 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp179, Scalar(2)) + _tmp139 * std::pow(_tmp180, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp182 = _tmp180 * _tmp181;
  const Scalar _tmp183 = _tmp179 * _tmp181;
  const Scalar _tmp184 = _tmp147 * landmarks_1_;
  const Scalar _tmp185 = _tmp142 * _tmp183 + _tmp145 * _tmp182 + _tmp181 * _tmp49 + _tmp184;
  const Scalar _tmp186 = _tmp152 * landmarks_1_;
  const Scalar _tmp187 = _tmp150 * _tmp182 + _tmp151 * _tmp183 + _tmp181 * _tmp50 + _tmp186;
  const Scalar _tmp188 = _tmp157 * landmarks_1_;
  const Scalar _tmp189 = _tmp155 * _tmp183 + _tmp156 * _tmp182 + _tmp181 * _tmp44 + _tmp188;
  const Scalar _tmp190 = _tmp185 * _tmp91 + _tmp187 * _tmp90 + _tmp189 * _tmp92;
  const Scalar _tmp191 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp190)));
  const Scalar _tmp192 = -matches_0_1_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp193 = _tmp191 * views_1_calibration(0, 0) *
                             (_tmp185 * _tmp78 + _tmp187 * _tmp73 + _tmp189 * _tmp68) +
                         _tmp192;
  const Scalar _tmp194 = std::sqrt(matches_0_1_weight);
  const Scalar _tmp195 = -matches_0_1_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp196 = _tmp191 * views_1_calibration(1, 0) *
                             (_tmp185 * _tmp85 + _tmp187 * _tmp88 + _tmp189 * _tmp84) +
                         _tmp195;
  const Scalar _tmp197 = std::pow(_tmp193, Scalar(2)) + std::pow(_tmp196, Scalar(2)) + epsilon;
  const Scalar _tmp198 =
      _tmp194 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp197 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp190) > 0) - ((_tmp190) < 0))) / std::sqrt(_tmp197);
  const Scalar _tmp199 = _tmp193 * _tmp198;
  const Scalar _tmp200 = _tmp196 * _tmp198;
  const Scalar _tmp201 = _tmp137 + matches_0_2_source_coords(1, 0);
  const Scalar _tmp202 = _tmp134 + matches_0_2_source_coords(0, 0);
  const Scalar _tmp203 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp202, Scalar(2)) + _tmp139 * std::pow(_tmp201, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp204 = _tmp201 * _tmp203;
  const Scalar _tmp205 = _tmp202 * _tmp203;
  const Scalar _tmp206 = _tmp147 * landmarks_2_;
  const Scalar _tmp207 = _tmp142 * _tmp205 + _tmp145 * _tmp204 + _tmp203 * _tmp49 + _tmp206;
  const Scalar _tmp208 = _tmp152 * landmarks_2_;
  const Scalar _tmp209 = _tmp150 * _tmp204 + _tmp151 * _tmp205 + _tmp203 * _tmp50 + _tmp208;
  const Scalar _tmp210 = _tmp157 * landmarks_2_;
  const Scalar _tmp211 = _tmp155 * _tmp205 + _tmp156 * _tmp204 + _tmp203 * _tmp44 + _tmp210;
  const Scalar _tmp212 = _tmp207 * _tmp91 + _tmp209 * _tmp90 + _tmp211 * _tmp92;
  const Scalar _tmp213 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp212)));
  const Scalar _tmp214 = -matches_0_2_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp215 = _tmp213 * views_1_calibration(0, 0) *
                             (_tmp207 * _tmp78 + _tmp209 * _tmp73 + _tmp211 * _tmp68) +
                         _tmp214;
  const Scalar _tmp216 = std::sqrt(matches_0_2_weight);
  const Scalar _tmp217 = -matches_0_2_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp218 = _tmp213 * views_1_calibration(1, 0) *
                             (_tmp207 * _tmp85 + _tmp209 * _tmp88 + _tmp211 * _tmp84) +
                         _tmp217;
  const Scalar _tmp219 = std::pow(_tmp215, Scalar(2)) + std::pow(_tmp218, Scalar(2)) + epsilon;
  const Scalar _tmp220 =
      _tmp216 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp219 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp212) > 0) - ((_tmp212) < 0))) / std::sqrt(_tmp219);
  const Scalar _tmp221 = _tmp215 * _tmp220;
  const Scalar _tmp222 = _tmp218 * _tmp220;
  const Scalar _tmp223 = _tmp134 + matches_0_3_source_coords(0, 0);
  const Scalar _tmp224 = _tmp137 + matches_0_3_source_coords(1, 0);
  const Scalar _tmp225 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp223, Scalar(2)) + _tmp139 * std::pow(_tmp224, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp226 = _tmp224 * _tmp225;
  const Scalar _tmp227 = _tmp223 * _tmp225;
  const Scalar _tmp228 = _tmp157 * landmarks_3_;
  const Scalar _tmp229 = _tmp155 * _tmp227 + _tmp156 * _tmp226 + _tmp225 * _tmp44 + _tmp228;
  const Scalar _tmp230 = _tmp147 * landmarks_3_;
  const Scalar _tmp231 = _tmp142 * _tmp227 + _tmp145 * _tmp226 + _tmp225 * _tmp49 + _tmp230;
  const Scalar _tmp232 = _tmp152 * landmarks_3_;
  const Scalar _tmp233 = _tmp150 * _tmp226 + _tmp151 * _tmp227 + _tmp225 * _tmp50 + _tmp232;
  const Scalar _tmp234 = _tmp229 * _tmp92 + _tmp231 * _tmp91 + _tmp233 * _tmp90;
  const Scalar _tmp235 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp234)));
  const Scalar _tmp236 = -matches_0_3_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp237 = _tmp235 * views_1_calibration(0, 0) *
                             (_tmp229 * _tmp68 + _tmp231 * _tmp78 + _tmp233 * _tmp73) +
                         _tmp236;
  const Scalar _tmp238 = std::sqrt(matches_0_3_weight);
  const Scalar _tmp239 = -matches_0_3_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp240 = _tmp235 * views_1_calibration(1, 0) *
                             (_tmp229 * _tmp84 + _tmp231 * _tmp85 + _tmp233 * _tmp88) +
                         _tmp239;
  const Scalar _tmp241 = std::pow(_tmp237, Scalar(2)) + std::pow(_tmp240, Scalar(2)) + epsilon;
  const Scalar _tmp242 =
      _tmp238 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp241 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp234) > 0) - ((_tmp234) < 0))) / std::sqrt(_tmp241);
  const Scalar _tmp243 = _tmp237 * _tmp242;
  const Scalar _tmp244 = _tmp240 * _tmp242;
  const Scalar _tmp245 = _tmp137 + matches_0_4_source_coords(1, 0);
  const Scalar _tmp246 = _tmp134 + matches_0_4_source_coords(0, 0);
  const Scalar _tmp247 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp246, Scalar(2)) + _tmp139 * std::pow(_tmp245, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp248 = _tmp246 * _tmp247;
  const Scalar _tmp249 = _tmp245 * _tmp247;
  const Scalar _tmp250 = _tmp152 * landmarks_4_;
  const Scalar _tmp251 = _tmp150 * _tmp249 + _tmp151 * _tmp248 + _tmp247 * _tmp50 + _tmp250;
  const Scalar _tmp252 = _tmp147 * landmarks_4_;
  const Scalar _tmp253 = _tmp142 * _tmp248 + _tmp145 * _tmp249 + _tmp247 * _tmp49 + _tmp252;
  const Scalar _tmp254 = _tmp157 * landmarks_4_;
  const Scalar _tmp255 = _tmp155 * _tmp248 + _tmp156 * _tmp249 + _tmp247 * _tmp44 + _tmp254;
  const Scalar _tmp256 = _tmp251 * _tmp90 + _tmp253 * _tmp91 + _tmp255 * _tmp92;
  const Scalar _tmp257 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp256)));
  const Scalar _tmp258 = -matches_0_4_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp259 = _tmp257 * views_1_calibration(0, 0) *
                             (_tmp251 * _tmp73 + _tmp253 * _tmp78 + _tmp255 * _tmp68) +
                         _tmp258;
  const Scalar _tmp260 = std::sqrt(matches_0_4_weight);
  const Scalar _tmp261 = -matches_0_4_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp262 = _tmp257 * views_1_calibration(1, 0) *
                             (_tmp251 * _tmp88 + _tmp253 * _tmp85 + _tmp255 * _tmp84) +
                         _tmp261;
  const Scalar _tmp263 = std::pow(_tmp259, Scalar(2)) + std::pow(_tmp262, Scalar(2)) + epsilon;
  const Scalar _tmp264 =
      _tmp260 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp263 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp256) > 0) - ((_tmp256) < 0))) / std::sqrt(_tmp263);
  const Scalar _tmp265 = _tmp259 * _tmp264;
  const Scalar _tmp266 = _tmp262 * _tmp264;
  const Scalar _tmp267 = _tmp137 + matches_0_5_source_coords(1, 0);
  const Scalar _tmp268 = _tmp134 + matches_0_5_source_coords(0, 0);
  const Scalar _tmp269 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp268, Scalar(2)) + _tmp139 * std::pow(_tmp267, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp270 = _tmp268 * _tmp269;
  const Scalar _tmp271 = _tmp267 * _tmp269;
  const Scalar _tmp272 = _tmp152 * landmarks_5_;
  const Scalar _tmp273 = _tmp150 * _tmp271 + _tmp151 * _tmp270 + _tmp269 * _tmp50 + _tmp272;
  const Scalar _tmp274 = _tmp157 * landmarks_5_;
  const Scalar _tmp275 = _tmp155 * _tmp270 + _tmp156 * _tmp271 + _tmp269 * _tmp44 + _tmp274;
  const Scalar _tmp276 = _tmp147 * landmarks_5_;
  const Scalar _tmp277 = _tmp142 * _tmp270 + _tmp145 * _tmp271 + _tmp269 * _tmp49 + _tmp276;
  const Scalar _tmp278 = _tmp273 * _tmp90 + _tmp275 * _tmp92 + _tmp277 * _tmp91;
  const Scalar _tmp279 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp278)));
  const Scalar _tmp280 = -matches_0_5_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp281 = _tmp279 * views_1_calibration(0, 0) *
                             (_tmp273 * _tmp73 + _tmp275 * _tmp68 + _tmp277 * _tmp78) +
                         _tmp280;
  const Scalar _tmp282 = std::sqrt(matches_0_5_weight);
  const Scalar _tmp283 = -matches_0_5_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp284 = _tmp279 * views_1_calibration(1, 0) *
                             (_tmp273 * _tmp88 + _tmp275 * _tmp84 + _tmp277 * _tmp85) +
                         _tmp283;
  const Scalar _tmp285 = std::pow(_tmp281, Scalar(2)) + std::pow(_tmp284, Scalar(2)) + epsilon;
  const Scalar _tmp286 =
      _tmp282 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp285 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp278) > 0) - ((_tmp278) < 0))) / std::sqrt(_tmp285);
  const Scalar _tmp287 = _tmp281 * _tmp286;
  const Scalar _tmp288 = _tmp284 * _tmp286;
  const Scalar _tmp289 = _tmp134 + matches_0_6_source_coords(0, 0);
  const Scalar _tmp290 = _tmp137 + matches_0_6_source_coords(1, 0);
  const Scalar _tmp291 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp289, Scalar(2)) + _tmp139 * std::pow(_tmp290, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp292 = _tmp289 * _tmp291;
  const Scalar _tmp293 = _tmp290 * _tmp291;
  const Scalar _tmp294 = _tmp147 * landmarks_6_;
  const Scalar _tmp295 = _tmp142 * _tmp292 + _tmp145 * _tmp293 + _tmp291 * _tmp49 + _tmp294;
  const Scalar _tmp296 = _tmp157 * landmarks_6_;
  const Scalar _tmp297 = _tmp155 * _tmp292 + _tmp156 * _tmp293 + _tmp291 * _tmp44 + _tmp296;
  const Scalar _tmp298 = _tmp152 * landmarks_6_;
  const Scalar _tmp299 = _tmp150 * _tmp293 + _tmp151 * _tmp292 + _tmp291 * _tmp50 + _tmp298;
  const Scalar _tmp300 = _tmp295 * _tmp91 + _tmp297 * _tmp92 + _tmp299 * _tmp90;
  const Scalar _tmp301 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp300)));
  const Scalar _tmp302 = -matches_0_6_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp303 = _tmp301 * views_1_calibration(0, 0) *
                             (_tmp295 * _tmp78 + _tmp297 * _tmp68 + _tmp299 * _tmp73) +
                         _tmp302;
  const Scalar _tmp304 = std::sqrt(matches_0_6_weight);
  const Scalar _tmp305 = -matches_0_6_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp306 = _tmp301 * views_1_calibration(1, 0) *
                             (_tmp295 * _tmp85 + _tmp297 * _tmp84 + _tmp299 * _tmp88) +
                         _tmp305;
  const Scalar _tmp307 = std::pow(_tmp303, Scalar(2)) + std::pow(_tmp306, Scalar(2)) + epsilon;
  const Scalar _tmp308 =
      _tmp304 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp307 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp300) > 0) - ((_tmp300) < 0))) / std::sqrt(_tmp307);
  const Scalar _tmp309 = _tmp303 * _tmp308;
  const Scalar _tmp310 = _tmp306 * _tmp308;
  const Scalar _tmp311 = _tmp137 + matches_0_7_source_coords(1, 0);
  const Scalar _tmp312 = _tmp134 + matches_0_7_source_coords(0, 0);
  const Scalar _tmp313 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp312, Scalar(2)) + _tmp139 * std::pow(_tmp311, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp314 = _tmp312 * _tmp313;
  const Scalar _tmp315 = _tmp311 * _tmp313;
  const Scalar _tmp316 = _tmp147 * landmarks_7_;
  const Scalar _tmp317 = _tmp142 * _tmp314 + _tmp145 * _tmp315 + _tmp313 * _tmp49 + _tmp316;
  const Scalar _tmp318 = _tmp152 * landmarks_7_;
  const Scalar _tmp319 = _tmp150 * _tmp315 + _tmp151 * _tmp314 + _tmp313 * _tmp50 + _tmp318;
  const Scalar _tmp320 = _tmp157 * landmarks_7_;
  const Scalar _tmp321 = _tmp155 * _tmp314 + _tmp156 * _tmp315 + _tmp313 * _tmp44 + _tmp320;
  const Scalar _tmp322 = _tmp317 * _tmp91 + _tmp319 * _tmp90 + _tmp321 * _tmp92;
  const Scalar _tmp323 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp322)));
  const Scalar _tmp324 = -matches_0_7_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp325 = _tmp323 * views_1_calibration(0, 0) *
                             (_tmp317 * _tmp78 + _tmp319 * _tmp73 + _tmp321 * _tmp68) +
                         _tmp324;
  const Scalar _tmp326 = std::sqrt(matches_0_7_weight);
  const Scalar _tmp327 = -matches_0_7_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp328 = _tmp323 * views_1_calibration(1, 0) *
                             (_tmp317 * _tmp85 + _tmp319 * _tmp88 + _tmp321 * _tmp84) +
                         _tmp327;
  const Scalar _tmp329 = std::pow(_tmp325, Scalar(2)) + std::pow(_tmp328, Scalar(2)) + epsilon;
  const Scalar _tmp330 =
      _tmp326 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp329 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp322) > 0) - ((_tmp322) < 0))) / std::sqrt(_tmp329);
  const Scalar _tmp331 = _tmp325 * _tmp330;
  const Scalar _tmp332 = _tmp328 * _tmp330;
  const Scalar _tmp333 = _tmp137 + matches_0_8_source_coords(1, 0);
  const Scalar _tmp334 = _tmp134 + matches_0_8_source_coords(0, 0);
  const Scalar _tmp335 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp334, Scalar(2)) + _tmp139 * std::pow(_tmp333, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp336 = _tmp334 * _tmp335;
  const Scalar _tmp337 = _tmp333 * _tmp335;
  const Scalar _tmp338 = _tmp157 * landmarks_8_;
  const Scalar _tmp339 = _tmp155 * _tmp336 + _tmp156 * _tmp337 + _tmp335 * _tmp44 + _tmp338;
  const Scalar _tmp340 = _tmp152 * landmarks_8_;
  const Scalar _tmp341 = _tmp150 * _tmp337 + _tmp151 * _tmp336 + _tmp335 * _tmp50 + _tmp340;
  const Scalar _tmp342 = _tmp147 * landmarks_8_;
  const Scalar _tmp343 = _tmp142 * _tmp336 + _tmp145 * _tmp337 + _tmp335 * _tmp49 + _tmp342;
  const Scalar _tmp344 = _tmp339 * _tmp92 + _tmp341 * _tmp90 + _tmp343 * _tmp91;
  const Scalar _tmp345 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp344)));
  const Scalar _tmp346 = -matches_0_8_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp347 = _tmp345 * views_1_calibration(0, 0) *
                             (_tmp339 * _tmp68 + _tmp341 * _tmp73 + _tmp343 * _tmp78) +
                         _tmp346;
  const Scalar _tmp348 = std::sqrt(matches_0_8_weight);
  const Scalar _tmp349 = -matches_0_8_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp350 = _tmp345 * views_1_calibration(1, 0) *
                             (_tmp339 * _tmp84 + _tmp341 * _tmp88 + _tmp343 * _tmp85) +
                         _tmp349;
  const Scalar _tmp351 = std::pow(_tmp347, Scalar(2)) + std::pow(_tmp350, Scalar(2)) + epsilon;
  const Scalar _tmp352 =
      _tmp348 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp351 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp344) > 0) - ((_tmp344) < 0))) / std::sqrt(_tmp351);
  const Scalar _tmp353 = _tmp347 * _tmp352;
  const Scalar _tmp354 = _tmp350 * _tmp352;
  const Scalar _tmp355 = _tmp137 + matches_0_9_source_coords(1, 0);
  const Scalar _tmp356 = _tmp134 + matches_0_9_source_coords(0, 0);
  const Scalar _tmp357 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp356, Scalar(2)) + _tmp139 * std::pow(_tmp355, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp358 = _tmp356 * _tmp357;
  const Scalar _tmp359 = _tmp355 * _tmp357;
  const Scalar _tmp360 = _tmp147 * landmarks_9_;
  const Scalar _tmp361 = _tmp142 * _tmp358 + _tmp145 * _tmp359 + _tmp357 * _tmp49 + _tmp360;
  const Scalar _tmp362 = _tmp152 * landmarks_9_;
  const Scalar _tmp363 = _tmp150 * _tmp359 + _tmp151 * _tmp358 + _tmp357 * _tmp50 + _tmp362;
  const Scalar _tmp364 = _tmp157 * landmarks_9_;
  const Scalar _tmp365 = _tmp155 * _tmp358 + _tmp156 * _tmp359 + _tmp357 * _tmp44 + _tmp364;
  const Scalar _tmp366 = _tmp361 * _tmp91 + _tmp363 * _tmp90 + _tmp365 * _tmp92;
  const Scalar _tmp367 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp366)));
  const Scalar _tmp368 = -matches_0_9_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp369 = _tmp367 * views_1_calibration(0, 0) *
                             (_tmp361 * _tmp78 + _tmp363 * _tmp73 + _tmp365 * _tmp68) +
                         _tmp368;
  const Scalar _tmp370 = std::sqrt(matches_0_9_weight);
  const Scalar _tmp371 = -matches_0_9_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp372 = _tmp367 * views_1_calibration(1, 0) *
                             (_tmp361 * _tmp85 + _tmp363 * _tmp88 + _tmp365 * _tmp84) +
                         _tmp371;
  const Scalar _tmp373 = std::pow(_tmp369, Scalar(2)) + std::pow(_tmp372, Scalar(2)) + epsilon;
  const Scalar _tmp374 =
      _tmp370 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp373 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp366) > 0) - ((_tmp366) < 0))) / std::sqrt(_tmp373);
  const Scalar _tmp375 = _tmp369 * _tmp374;
  const Scalar _tmp376 = _tmp372 * _tmp374;
  const Scalar _tmp377 = _tmp137 + matches_0_10_source_coords(1, 0);
  const Scalar _tmp378 = _tmp134 + matches_0_10_source_coords(0, 0);
  const Scalar _tmp379 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp378, Scalar(2)) + _tmp139 * std::pow(_tmp377, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp380 = _tmp157 * landmarks_10_;
  const Scalar _tmp381 = _tmp377 * _tmp379;
  const Scalar _tmp382 = _tmp378 * _tmp379;
  const Scalar _tmp383 = _tmp155 * _tmp382 + _tmp156 * _tmp381 + _tmp379 * _tmp44 + _tmp380;
  const Scalar _tmp384 = _tmp147 * landmarks_10_;
  const Scalar _tmp385 = _tmp142 * _tmp382 + _tmp145 * _tmp381 + _tmp379 * _tmp49 + _tmp384;
  const Scalar _tmp386 = _tmp152 * landmarks_10_;
  const Scalar _tmp387 = _tmp150 * _tmp381 + _tmp151 * _tmp382 + _tmp379 * _tmp50 + _tmp386;
  const Scalar _tmp388 = _tmp383 * _tmp92 + _tmp385 * _tmp91 + _tmp387 * _tmp90;
  const Scalar _tmp389 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp388)));
  const Scalar _tmp390 = -matches_0_10_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp391 = _tmp389 * views_1_calibration(0, 0) *
                             (_tmp383 * _tmp68 + _tmp385 * _tmp78 + _tmp387 * _tmp73) +
                         _tmp390;
  const Scalar _tmp392 = std::sqrt(matches_0_10_weight);
  const Scalar _tmp393 = -matches_0_10_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp394 = _tmp389 * views_1_calibration(1, 0) *
                             (_tmp383 * _tmp84 + _tmp385 * _tmp85 + _tmp387 * _tmp88) +
                         _tmp393;
  const Scalar _tmp395 = std::pow(_tmp391, Scalar(2)) + std::pow(_tmp394, Scalar(2)) + epsilon;
  const Scalar _tmp396 =
      _tmp392 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp395 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp388) > 0) - ((_tmp388) < 0))) / std::sqrt(_tmp395);
  const Scalar _tmp397 = _tmp391 * _tmp396;
  const Scalar _tmp398 = _tmp394 * _tmp396;
  const Scalar _tmp399 = _tmp137 + matches_0_11_source_coords(1, 0);
  const Scalar _tmp400 = _tmp134 + matches_0_11_source_coords(0, 0);
  const Scalar _tmp401 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp400, Scalar(2)) + _tmp139 * std::pow(_tmp399, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp402 = _tmp400 * _tmp401;
  const Scalar _tmp403 = _tmp157 * landmarks_11_;
  const Scalar _tmp404 = _tmp399 * _tmp401;
  const Scalar _tmp405 = _tmp155 * _tmp402 + _tmp156 * _tmp404 + _tmp401 * _tmp44 + _tmp403;
  const Scalar _tmp406 = _tmp152 * landmarks_11_;
  const Scalar _tmp407 = _tmp150 * _tmp404 + _tmp151 * _tmp402 + _tmp401 * _tmp50 + _tmp406;
  const Scalar _tmp408 = _tmp147 * landmarks_11_;
  const Scalar _tmp409 = _tmp142 * _tmp402 + _tmp145 * _tmp404 + _tmp401 * _tmp49 + _tmp408;
  const Scalar _tmp410 = _tmp405 * _tmp92 + _tmp407 * _tmp90 + _tmp409 * _tmp91;
  const Scalar _tmp411 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp410)));
  const Scalar _tmp412 = -matches_0_11_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp413 = _tmp411 * views_1_calibration(0, 0) *
                             (_tmp405 * _tmp68 + _tmp407 * _tmp73 + _tmp409 * _tmp78) +
                         _tmp412;
  const Scalar _tmp414 = std::sqrt(matches_0_11_weight);
  const Scalar _tmp415 = -matches_0_11_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp416 = _tmp411 * views_1_calibration(1, 0) *
                             (_tmp405 * _tmp84 + _tmp407 * _tmp88 + _tmp409 * _tmp85) +
                         _tmp415;
  const Scalar _tmp417 = std::pow(_tmp413, Scalar(2)) + std::pow(_tmp416, Scalar(2)) + epsilon;
  const Scalar _tmp418 =
      _tmp414 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp417 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp410) > 0) - ((_tmp410) < 0))) / std::sqrt(_tmp417);
  const Scalar _tmp419 = _tmp413 * _tmp418;
  const Scalar _tmp420 = _tmp416 * _tmp418;
  const Scalar _tmp421 = _tmp137 + matches_0_12_source_coords(1, 0);
  const Scalar _tmp422 = _tmp134 + matches_0_12_source_coords(0, 0);
  const Scalar _tmp423 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp422, Scalar(2)) + _tmp139 * std::pow(_tmp421, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp424 = _tmp152 * landmarks_12_;
  const Scalar _tmp425 = _tmp422 * _tmp423;
  const Scalar _tmp426 = _tmp421 * _tmp423;
  const Scalar _tmp427 = _tmp150 * _tmp426 + _tmp151 * _tmp425 + _tmp423 * _tmp50 + _tmp424;
  const Scalar _tmp428 = _tmp157 * landmarks_12_;
  const Scalar _tmp429 = _tmp155 * _tmp425 + _tmp156 * _tmp426 + _tmp423 * _tmp44 + _tmp428;
  const Scalar _tmp430 = _tmp147 * landmarks_12_;
  const Scalar _tmp431 = _tmp142 * _tmp425 + _tmp145 * _tmp426 + _tmp423 * _tmp49 + _tmp430;
  const Scalar _tmp432 = _tmp427 * _tmp90 + _tmp429 * _tmp92 + _tmp431 * _tmp91;
  const Scalar _tmp433 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp432)));
  const Scalar _tmp434 = -matches_0_12_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp435 = _tmp433 * views_1_calibration(0, 0) *
                             (_tmp427 * _tmp73 + _tmp429 * _tmp68 + _tmp431 * _tmp78) +
                         _tmp434;
  const Scalar _tmp436 = -matches_0_12_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp437 = _tmp433 * views_1_calibration(1, 0) *
                             (_tmp427 * _tmp88 + _tmp429 * _tmp84 + _tmp431 * _tmp85) +
                         _tmp436;
  const Scalar _tmp438 = std::pow(_tmp435, Scalar(2)) + std::pow(_tmp437, Scalar(2)) + epsilon;
  const Scalar _tmp439 = std::sqrt(matches_0_12_weight);
  const Scalar _tmp440 =
      _tmp439 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp438 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp432) > 0) - ((_tmp432) < 0))) / std::sqrt(_tmp438);
  const Scalar _tmp441 = _tmp435 * _tmp440;
  const Scalar _tmp442 = _tmp437 * _tmp440;
  const Scalar _tmp443 = _tmp137 + matches_0_13_source_coords(1, 0);
  const Scalar _tmp444 = _tmp134 + matches_0_13_source_coords(0, 0);
  const Scalar _tmp445 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp444, Scalar(2)) + _tmp139 * std::pow(_tmp443, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp446 = _tmp147 * landmarks_13_;
  const Scalar _tmp447 = _tmp444 * _tmp445;
  const Scalar _tmp448 = _tmp443 * _tmp445;
  const Scalar _tmp449 = _tmp142 * _tmp447 + _tmp145 * _tmp448 + _tmp445 * _tmp49 + _tmp446;
  const Scalar _tmp450 = _tmp157 * landmarks_13_;
  const Scalar _tmp451 = _tmp155 * _tmp447 + _tmp156 * _tmp448 + _tmp44 * _tmp445 + _tmp450;
  const Scalar _tmp452 = _tmp152 * landmarks_13_;
  const Scalar _tmp453 = _tmp150 * _tmp448 + _tmp151 * _tmp447 + _tmp445 * _tmp50 + _tmp452;
  const Scalar _tmp454 = _tmp449 * _tmp91 + _tmp451 * _tmp92 + _tmp453 * _tmp90;
  const Scalar _tmp455 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp454)));
  const Scalar _tmp456 = -matches_0_13_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp457 = _tmp455 * views_1_calibration(0, 0) *
                             (_tmp449 * _tmp78 + _tmp451 * _tmp68 + _tmp453 * _tmp73) +
                         _tmp456;
  const Scalar _tmp458 = std::sqrt(matches_0_13_weight);
  const Scalar _tmp459 = -matches_0_13_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp460 = _tmp455 * views_1_calibration(1, 0) *
                             (_tmp449 * _tmp85 + _tmp451 * _tmp84 + _tmp453 * _tmp88) +
                         _tmp459;
  const Scalar _tmp461 = std::pow(_tmp457, Scalar(2)) + std::pow(_tmp460, Scalar(2)) + epsilon;
  const Scalar _tmp462 =
      _tmp458 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp461 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp454) > 0) - ((_tmp454) < 0))) / std::sqrt(_tmp461);
  const Scalar _tmp463 = _tmp457 * _tmp462;
  const Scalar _tmp464 = _tmp460 * _tmp462;
  const Scalar _tmp465 = _tmp137 + matches_0_14_source_coords(1, 0);
  const Scalar _tmp466 = _tmp134 + matches_0_14_source_coords(0, 0);
  const Scalar _tmp467 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp466, Scalar(2)) + _tmp139 * std::pow(_tmp465, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp468 = _tmp157 * landmarks_14_;
  const Scalar _tmp469 = _tmp465 * _tmp467;
  const Scalar _tmp470 = _tmp466 * _tmp467;
  const Scalar _tmp471 = _tmp155 * _tmp470 + _tmp156 * _tmp469 + _tmp44 * _tmp467 + _tmp468;
  const Scalar _tmp472 = _tmp152 * landmarks_14_;
  const Scalar _tmp473 = _tmp150 * _tmp469 + _tmp151 * _tmp470 + _tmp467 * _tmp50 + _tmp472;
  const Scalar _tmp474 = _tmp147 * landmarks_14_;
  const Scalar _tmp475 = _tmp142 * _tmp470 + _tmp145 * _tmp469 + _tmp467 * _tmp49 + _tmp474;
  const Scalar _tmp476 = _tmp471 * _tmp92 + _tmp473 * _tmp90 + _tmp475 * _tmp91;
  const Scalar _tmp477 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp476)));
  const Scalar _tmp478 = -matches_0_14_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp479 = _tmp477 * views_1_calibration(0, 0) *
                             (_tmp471 * _tmp68 + _tmp473 * _tmp73 + _tmp475 * _tmp78) +
                         _tmp478;
  const Scalar _tmp480 = std::sqrt(matches_0_14_weight);
  const Scalar _tmp481 = -matches_0_14_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp482 = _tmp477 * views_1_calibration(1, 0) *
                             (_tmp471 * _tmp84 + _tmp473 * _tmp88 + _tmp475 * _tmp85) +
                         _tmp481;
  const Scalar _tmp483 = std::pow(_tmp479, Scalar(2)) + std::pow(_tmp482, Scalar(2)) + epsilon;
  const Scalar _tmp484 =
      _tmp480 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp483 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp476) > 0) - ((_tmp476) < 0))) / std::sqrt(_tmp483);
  const Scalar _tmp485 = _tmp479 * _tmp484;
  const Scalar _tmp486 = _tmp482 * _tmp484;
  const Scalar _tmp487 = _tmp137 + matches_0_15_source_coords(1, 0);
  const Scalar _tmp488 = _tmp134 + matches_0_15_source_coords(0, 0);
  const Scalar _tmp489 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp488, Scalar(2)) + _tmp139 * std::pow(_tmp487, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp490 = _tmp487 * _tmp489;
  const Scalar _tmp491 = _tmp157 * landmarks_15_;
  const Scalar _tmp492 = _tmp488 * _tmp489;
  const Scalar _tmp493 = _tmp155 * _tmp492 + _tmp156 * _tmp490 + _tmp44 * _tmp489 + _tmp491;
  const Scalar _tmp494 = _tmp152 * landmarks_15_;
  const Scalar _tmp495 = _tmp150 * _tmp490 + _tmp151 * _tmp492 + _tmp489 * _tmp50 + _tmp494;
  const Scalar _tmp496 = _tmp147 * landmarks_15_;
  const Scalar _tmp497 = _tmp142 * _tmp492 + _tmp145 * _tmp490 + _tmp489 * _tmp49 + _tmp496;
  const Scalar _tmp498 = _tmp493 * _tmp92 + _tmp495 * _tmp90 + _tmp497 * _tmp91;
  const Scalar _tmp499 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp498)));
  const Scalar _tmp500 = -matches_0_15_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp501 = _tmp499 * views_1_calibration(0, 0) *
                             (_tmp493 * _tmp68 + _tmp495 * _tmp73 + _tmp497 * _tmp78) +
                         _tmp500;
  const Scalar _tmp502 = std::sqrt(matches_0_15_weight);
  const Scalar _tmp503 = -matches_0_15_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp504 = _tmp499 * views_1_calibration(1, 0) *
                             (_tmp493 * _tmp84 + _tmp495 * _tmp88 + _tmp497 * _tmp85) +
                         _tmp503;
  const Scalar _tmp505 = std::pow(_tmp501, Scalar(2)) + std::pow(_tmp504, Scalar(2)) + epsilon;
  const Scalar _tmp506 =
      _tmp502 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp505 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp498) > 0) - ((_tmp498) < 0))) / std::sqrt(_tmp505);
  const Scalar _tmp507 = _tmp501 * _tmp506;
  const Scalar _tmp508 = _tmp504 * _tmp506;
  const Scalar _tmp509 = _tmp137 + matches_0_16_source_coords(1, 0);
  const Scalar _tmp510 = _tmp134 + matches_0_16_source_coords(0, 0);
  const Scalar _tmp511 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp510, Scalar(2)) + _tmp139 * std::pow(_tmp509, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp512 = _tmp509 * _tmp511;
  const Scalar _tmp513 = _tmp147 * landmarks_16_;
  const Scalar _tmp514 = _tmp510 * _tmp511;
  const Scalar _tmp515 = _tmp142 * _tmp514 + _tmp145 * _tmp512 + _tmp49 * _tmp511 + _tmp513;
  const Scalar _tmp516 = _tmp157 * landmarks_16_;
  const Scalar _tmp517 = _tmp155 * _tmp514 + _tmp156 * _tmp512 + _tmp44 * _tmp511 + _tmp516;
  const Scalar _tmp518 = _tmp152 * landmarks_16_;
  const Scalar _tmp519 = _tmp150 * _tmp512 + _tmp151 * _tmp514 + _tmp50 * _tmp511 + _tmp518;
  const Scalar _tmp520 = _tmp515 * _tmp91 + _tmp517 * _tmp92 + _tmp519 * _tmp90;
  const Scalar _tmp521 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp520)));
  const Scalar _tmp522 = -matches_0_16_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp523 = _tmp521 * views_1_calibration(0, 0) *
                             (_tmp515 * _tmp78 + _tmp517 * _tmp68 + _tmp519 * _tmp73) +
                         _tmp522;
  const Scalar _tmp524 = std::sqrt(matches_0_16_weight);
  const Scalar _tmp525 = -matches_0_16_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp526 = _tmp521 * views_1_calibration(1, 0) *
                             (_tmp515 * _tmp85 + _tmp517 * _tmp84 + _tmp519 * _tmp88) +
                         _tmp525;
  const Scalar _tmp527 = std::pow(_tmp523, Scalar(2)) + std::pow(_tmp526, Scalar(2)) + epsilon;
  const Scalar _tmp528 =
      _tmp524 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp527 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp520) > 0) - ((_tmp520) < 0))) / std::sqrt(_tmp527);
  const Scalar _tmp529 = _tmp523 * _tmp528;
  const Scalar _tmp530 = _tmp526 * _tmp528;
  const Scalar _tmp531 = _tmp137 + matches_0_17_source_coords(1, 0);
  const Scalar _tmp532 = _tmp134 + matches_0_17_source_coords(0, 0);
  const Scalar _tmp533 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp532, Scalar(2)) + _tmp139 * std::pow(_tmp531, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp534 = _tmp147 * landmarks_17_;
  const Scalar _tmp535 = _tmp532 * _tmp533;
  const Scalar _tmp536 = _tmp531 * _tmp533;
  const Scalar _tmp537 = _tmp142 * _tmp535 + _tmp145 * _tmp536 + _tmp49 * _tmp533 + _tmp534;
  const Scalar _tmp538 = _tmp152 * landmarks_17_;
  const Scalar _tmp539 = _tmp150 * _tmp536 + _tmp151 * _tmp535 + _tmp50 * _tmp533 + _tmp538;
  const Scalar _tmp540 = _tmp157 * landmarks_17_;
  const Scalar _tmp541 = _tmp155 * _tmp535 + _tmp156 * _tmp536 + _tmp44 * _tmp533 + _tmp540;
  const Scalar _tmp542 = _tmp537 * _tmp91 + _tmp539 * _tmp90 + _tmp541 * _tmp92;
  const Scalar _tmp543 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp542)));
  const Scalar _tmp544 = -matches_0_17_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp545 = _tmp543 * views_1_calibration(0, 0) *
                             (_tmp537 * _tmp78 + _tmp539 * _tmp73 + _tmp541 * _tmp68) +
                         _tmp544;
  const Scalar _tmp546 = std::sqrt(matches_0_17_weight);
  const Scalar _tmp547 = -matches_0_17_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp548 = _tmp543 * views_1_calibration(1, 0) *
                             (_tmp537 * _tmp85 + _tmp539 * _tmp88 + _tmp541 * _tmp84) +
                         _tmp547;
  const Scalar _tmp549 = std::pow(_tmp545, Scalar(2)) + std::pow(_tmp548, Scalar(2)) + epsilon;
  const Scalar _tmp550 =
      _tmp546 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp549 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp542) > 0) - ((_tmp542) < 0))) / std::sqrt(_tmp549);
  const Scalar _tmp551 = _tmp545 * _tmp550;
  const Scalar _tmp552 = _tmp548 * _tmp550;
  const Scalar _tmp553 = _tmp137 + matches_0_18_source_coords(1, 0);
  const Scalar _tmp554 = _tmp134 + matches_0_18_source_coords(0, 0);
  const Scalar _tmp555 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp554, Scalar(2)) + _tmp139 * std::pow(_tmp553, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp556 = _tmp553 * _tmp555;
  const Scalar _tmp557 = _tmp157 * landmarks_18_;
  const Scalar _tmp558 = _tmp554 * _tmp555;
  const Scalar _tmp559 = _tmp155 * _tmp558 + _tmp156 * _tmp556 + _tmp44 * _tmp555 + _tmp557;
  const Scalar _tmp560 = _tmp152 * landmarks_18_;
  const Scalar _tmp561 = _tmp150 * _tmp556 + _tmp151 * _tmp558 + _tmp50 * _tmp555 + _tmp560;
  const Scalar _tmp562 = _tmp147 * landmarks_18_;
  const Scalar _tmp563 = _tmp142 * _tmp558 + _tmp145 * _tmp556 + _tmp49 * _tmp555 + _tmp562;
  const Scalar _tmp564 = _tmp559 * _tmp92 + _tmp561 * _tmp90 + _tmp563 * _tmp91;
  const Scalar _tmp565 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp564)));
  const Scalar _tmp566 = -matches_0_18_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp567 = _tmp565 * views_1_calibration(0, 0) *
                             (_tmp559 * _tmp68 + _tmp561 * _tmp73 + _tmp563 * _tmp78) +
                         _tmp566;
  const Scalar _tmp568 = std::sqrt(matches_0_18_weight);
  const Scalar _tmp569 = -matches_0_18_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp570 = _tmp565 * views_1_calibration(1, 0) *
                             (_tmp559 * _tmp84 + _tmp561 * _tmp88 + _tmp563 * _tmp85) +
                         _tmp569;
  const Scalar _tmp571 = std::pow(_tmp567, Scalar(2)) + std::pow(_tmp570, Scalar(2)) + epsilon;
  const Scalar _tmp572 =
      _tmp568 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp571 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp564) > 0) - ((_tmp564) < 0))) / std::sqrt(_tmp571);
  const Scalar _tmp573 = _tmp567 * _tmp572;
  const Scalar _tmp574 = _tmp570 * _tmp572;
  const Scalar _tmp575 = _tmp137 + matches_0_19_source_coords(1, 0);
  const Scalar _tmp576 = _tmp134 + matches_0_19_source_coords(0, 0);
  const Scalar _tmp577 = std::pow(
      Scalar(_tmp136 * std::pow(_tmp576, Scalar(2)) + _tmp139 * std::pow(_tmp575, Scalar(2)) + 1),
      Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp578 = _tmp575 * _tmp577;
  const Scalar _tmp579 = _tmp157 * landmarks_19_;
  const Scalar _tmp580 = _tmp576 * _tmp577;
  const Scalar _tmp581 = _tmp155 * _tmp580 + _tmp156 * _tmp578 + _tmp44 * _tmp577 + _tmp579;
  const Scalar _tmp582 = _tmp152 * landmarks_19_;
  const Scalar _tmp583 = _tmp150 * _tmp578 + _tmp151 * _tmp580 + _tmp50 * _tmp577 + _tmp582;
  const Scalar _tmp584 = _tmp147 * landmarks_19_;
  const Scalar _tmp585 = _tmp142 * _tmp580 + _tmp145 * _tmp578 + _tmp49 * _tmp577 + _tmp584;
  const Scalar _tmp586 = _tmp581 * _tmp92 + _tmp583 * _tmp90 + _tmp585 * _tmp91;
  const Scalar _tmp587 = Scalar(1.0) / (std::max<Scalar>(epsilon, std::fabs(_tmp586)));
  const Scalar _tmp588 = -matches_0_19_target_coords(0, 0) + views_1_calibration(2, 0);
  const Scalar _tmp589 = _tmp587 * views_1_calibration(0, 0) *
                             (_tmp581 * _tmp68 + _tmp583 * _tmp73 + _tmp585 * _tmp78) +
                         _tmp588;
  const Scalar _tmp590 = std::sqrt(matches_0_19_weight);
  const Scalar _tmp591 = -matches_0_19_target_coords(1, 0) + views_1_calibration(3, 0);
  const Scalar _tmp592 = _tmp587 * views_1_calibration(1, 0) *
                             (_tmp581 * _tmp84 + _tmp583 * _tmp88 + _tmp585 * _tmp85) +
                         _tmp591;
  const Scalar _tmp593 = std::pow(_tmp589, Scalar(2)) + std::pow(_tmp592, Scalar(2)) + epsilon;
  const Scalar _tmp594 =
      _tmp590 *
      std::sqrt(Scalar(_tmp175 * (std::pow(Scalar(_tmp171 * _tmp593 + 1), _tmp174) - 1))) *
      std::max<Scalar>(0, (((_tmp586) > 0) - ((_tmp586) < 0))) / std::sqrt(_tmp593);
  const Scalar _tmp595 = _tmp589 * _tmp594;
  const Scalar _tmp596 = _tmp592 * _tmp594;
  const Scalar _tmp597 = landmarks_0_ - matches_0_0_inverse_range_prior;
  const Scalar _tmp598 = epsilon + matches_0_0_inverse_range_prior_sigma;
  const Scalar _tmp599 = matches_0_0_weight / _tmp598;
  const Scalar _tmp600 = landmarks_1_ - matches_0_1_inverse_range_prior;
  const Scalar _tmp601 = epsilon + matches_0_1_inverse_range_prior_sigma;
  const Scalar _tmp602 = matches_0_1_weight / _tmp601;
  const Scalar _tmp603 = landmarks_2_ - matches_0_2_inverse_range_prior;
  const Scalar _tmp604 = epsilon + matches_0_2_inverse_range_prior_sigma;
  const Scalar _tmp605 = matches_0_2_weight / _tmp604;
  const Scalar _tmp606 = landmarks_3_ - matches_0_3_inverse_range_prior;
  const Scalar _tmp607 = epsilon + matches_0_3_inverse_range_prior_sigma;
  const Scalar _tmp608 = matches_0_3_weight / _tmp607;
  const Scalar _tmp609 = landmarks_4_ - matches_0_4_inverse_range_prior;
  const Scalar _tmp610 = epsilon + matches_0_4_inverse_range_prior_sigma;
  const Scalar _tmp611 = matches_0_4_weight / _tmp610;
  const Scalar _tmp612 = landmarks_5_ - matches_0_5_inverse_range_prior;
  const Scalar _tmp613 = epsilon + matches_0_5_inverse_range_prior_sigma;
  const Scalar _tmp614 = matches_0_5_weight / _tmp613;
  const Scalar _tmp615 = landmarks_6_ - matches_0_6_inverse_range_prior;
  const Scalar _tmp616 = epsilon + matches_0_6_inverse_range_prior_sigma;
  const Scalar _tmp617 = matches_0_6_weight / _tmp616;
  const Scalar _tmp618 = landmarks_7_ - matches_0_7_inverse_range_prior;
  const Scalar _tmp619 = epsilon + matches_0_7_inverse_range_prior_sigma;
  const Scalar _tmp620 = matches_0_7_weight / _tmp619;
  const Scalar _tmp621 = landmarks_8_ - matches_0_8_inverse_range_prior;
  const Scalar _tmp622 = epsilon + matches_0_8_inverse_range_prior_sigma;
  const Scalar _tmp623 = matches_0_8_weight / _tmp622;
  const Scalar _tmp624 = landmarks_9_ - matches_0_9_inverse_range_prior;
  const Scalar _tmp625 = epsilon + matches_0_9_inverse_range_prior_sigma;
  const Scalar _tmp626 = matches_0_9_weight / _tmp625;
  const Scalar _tmp627 = landmarks_10_ - matches_0_10_inverse_range_prior;
  const Scalar _tmp628 = epsilon + matches_0_10_inverse_range_prior_sigma;
  const Scalar _tmp629 = matches_0_10_weight / _tmp628;
  const Scalar _tmp630 = landmarks_11_ - matches_0_11_inverse_range_prior;
  const Scalar _tmp631 = epsilon + matches_0_11_inverse_range_prior_sigma;
  const Scalar _tmp632 = matches_0_11_weight / _tmp631;
  const Scalar _tmp633 = landmarks_12_ - matches_0_12_inverse_range_prior;
  const Scalar _tmp634 = epsilon + matches_0_12_inverse_range_prior_sigma;
  const Scalar _tmp635 = matches_0_12_weight / _tmp634;
  const Scalar _tmp636 = landmarks_13_ - matches_0_13_inverse_range_prior;
  const Scalar _tmp637 = epsilon + matches_0_13_inverse_range_prior_sigma;
  const Scalar _tmp638 = matches_0_13_weight / _tmp637;
  const Scalar _tmp639 = landmarks_14_ - matches_0_14_inverse_range_prior;
  const Scalar _tmp640 = epsilon + matches_0_14_inverse_range_prior_sigma;
  const Scalar _tmp641 = matches_0_14_weight / _tmp640;
  const Scalar _tmp642 = landmarks_15_ - matches_0_15_inverse_range_prior;
  const Scalar _tmp643 = epsilon + matches_0_15_inverse_range_prior_sigma;
  const Scalar _tmp644 = matches_0_15_weight / _tmp643;
  const Scalar _tmp645 = landmarks_16_ - matches_0_16_inverse_range_prior;
  const Scalar _tmp646 = epsilon + matches_0_16_inverse_range_prior_sigma;
  const Scalar _tmp647 = matches_0_16_weight / _tmp646;
  const Scalar _tmp648 = landmarks_17_ - matches_0_17_inverse_range_prior;
  const Scalar _tmp649 = epsilon + matches_0_17_inverse_range_prior_sigma;
  const Scalar _tmp650 = matches_0_17_weight / _tmp649;
  const Scalar _tmp651 = landmarks_18_ - matches_0_18_inverse_range_prior;
  const Scalar _tmp652 = epsilon + matches_0_18_inverse_range_prior_sigma;
  const Scalar _tmp653 = matches_0_18_weight / _tmp652;
  const Scalar _tmp654 = landmarks_19_ - matches_0_19_inverse_range_prior;
  const Scalar _tmp655 = epsilon + matches_0_19_inverse_range_prior_sigma;
  const Scalar _tmp656 = matches_0_19_weight / _tmp655;
  const Scalar _tmp657 = _tmp16 + _tmp17 + _tmp18 + _tmp19;
  const Scalar _tmp658 = _priors_1_0_target_T_src[1] * _tmp657;
  const Scalar _tmp659 = _tmp114 + _tmp118 + _tmp658;
  const Scalar _tmp660 = _priors_1_0_target_T_src[3] * _tmp657;
  const Scalar _tmp661 = _tmp103 + _tmp106;
  const Scalar _tmp662 = _tmp104 + _tmp660 + _tmp661;
  const Scalar _tmp663 = std::fabs(_tmp662);
  const Scalar _tmp664 = epsilon - 1;
  const Scalar _tmp665 = -_tmp664;
  const Scalar _tmp666 = std::min<Scalar>(_tmp663, _tmp665);
  const Scalar _tmp667 = std::pow(_tmp666, Scalar(2)) - 1;
  const Scalar _tmp668 = -_tmp667;
  const Scalar _tmp669 = (((_tmp662) > 0) - ((_tmp662) < 0));
  const Scalar _tmp670 = std::min<Scalar>(0, _tmp669) + Scalar(1) / Scalar(2);
  const Scalar _tmp671 = _tmp670 * std::acos(_tmp666);
  const Scalar _tmp672 = _tmp671 / std::sqrt(_tmp668);
  const Scalar _tmp673 = _tmp132 * _tmp672;
  const Scalar _tmp674 = _priors_1_0_target_T_src[2] * _tmp657;
  const Scalar _tmp675 = -_tmp100 + _tmp98;
  const Scalar _tmp676 = 2 * _tmp672;
  const Scalar _tmp677 = _tmp676 * (_tmp674 + _tmp675 + _tmp96);
  const Scalar _tmp678 = _priors_1_0_target_T_src[0] * _tmp657;
  const Scalar _tmp679 = -_tmp123;
  const Scalar _tmp680 = _tmp122 - _tmp124;
  const Scalar _tmp681 = _tmp669 * ((((_tmp663 + _tmp664) > 0) - ((_tmp663 + _tmp664) < 0)) - 1);
  const Scalar _tmp682 = _tmp681 * (_tmp678 + _tmp679 + _tmp680);
  const Scalar _tmp683 = _tmp682 * priors_1_0_sqrt_info(5, 0);
  const Scalar _tmp684 = -_tmp678;
  const Scalar _tmp685 = _tmp122 + _tmp124 + _tmp679 + _tmp684;
  const Scalar _tmp686 = _tmp666 * _tmp671 / (_tmp668 * std::sqrt(_tmp668));
  const Scalar _tmp687 = _tmp685 * _tmp686;
  const Scalar _tmp688 = -_tmp658;
  const Scalar _tmp689 = _tmp681 * (_tmp119 + _tmp688);
  const Scalar _tmp690 = _tmp687 * _tmp689;
  const Scalar _tmp691 = _tmp670 / _tmp667;
  const Scalar _tmp692 = _tmp685 * _tmp691;
  const Scalar _tmp693 = _tmp689 * _tmp692;
  const Scalar _tmp694 = -_tmp660;
  const Scalar _tmp695 = _tmp676 * (_tmp103 + _tmp104 + _tmp107 + _tmp694);
  const Scalar _tmp696 = -_tmp674;
  const Scalar _tmp697 = _tmp681 * (_tmp102 + _tmp696);
  const Scalar _tmp698 = _tmp692 * _tmp697;
  const Scalar _tmp699 = _tmp80 - _tmp82;
  const Scalar _tmp700 = 2 * _tmp699;
  const Scalar _tmp701 = _tmp700 * _views_0_pose[5];
  const Scalar _tmp702 = _tmp700 * _views_1_pose[5];
  const Scalar _tmp703 = _tmp64 + _tmp66;
  const Scalar _tmp704 = 2 * _views_1_pose[4];
  const Scalar _tmp705 = _tmp703 * _tmp704;
  const Scalar _tmp706 = 2 * _views_0_pose[4];
  const Scalar _tmp707 = _tmp703 * _tmp706;
  const Scalar _tmp708 = std::pow(_views_1_pose[3], Scalar(2));
  const Scalar _tmp709 = -_tmp708;
  const Scalar _tmp710 = -_tmp74;
  const Scalar _tmp711 = _tmp76 + _tmp86;
  const Scalar _tmp712 = _tmp709 + _tmp710 + _tmp711;
  const Scalar _tmp713 = _tmp712 * _views_1_pose[6];
  const Scalar _tmp714 = _tmp712 * _views_0_pose[6];
  const Scalar _tmp715 = -_tmp701 + _tmp702 - _tmp705 + _tmp707 + _tmp713 - _tmp714;
  const Scalar _tmp716 = _tmp80 + _tmp82;
  const Scalar _tmp717 = 2 * _views_0_pose[6];
  const Scalar _tmp718 = _tmp716 * _tmp717;
  const Scalar _tmp719 = 2 * _views_1_pose[6];
  const Scalar _tmp720 = _tmp716 * _tmp719;
  const Scalar _tmp721 = _tmp69 - _tmp71;
  const Scalar _tmp722 = _tmp704 * _tmp721;
  const Scalar _tmp723 = _tmp706 * _tmp721;
  const Scalar _tmp724 = -_tmp76 + _tmp86;
  const Scalar _tmp725 = _tmp709 + _tmp724 + _tmp74;
  const Scalar _tmp726 = _tmp725 * _views_1_pose[5];
  const Scalar _tmp727 = _tmp725 * _views_0_pose[5];
  const Scalar _tmp728 = -_tmp718 + _tmp720 + _tmp722 - _tmp723 - _tmp726 + _tmp727;
  const Scalar _tmp729 = _tmp687 * _tmp697;
  const Scalar _tmp730 =
      -_tmp659 * _tmp673 + _tmp677 * priors_1_0_sqrt_info(5, 1) + _tmp683 * _tmp687 +
      _tmp683 * _tmp692 - _tmp690 * priors_1_0_sqrt_info(5, 1) -
      _tmp693 * priors_1_0_sqrt_info(5, 1) + _tmp695 * priors_1_0_sqrt_info(5, 0) -
      _tmp698 * priors_1_0_sqrt_info(5, 2) + _tmp715 * priors_1_0_sqrt_info(5, 4) +
      _tmp728 * priors_1_0_sqrt_info(5, 5) - _tmp729 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp731 = _tmp74 + Scalar(-1) / Scalar(2);
  const Scalar _tmp732 = _tmp731 + _tmp86;
  const Scalar _tmp733 = _tmp10 - _tmp12;
  const Scalar _tmp734 = 2 * _tmp733;
  const Scalar _tmp735 = _tmp5 + _tmp7 + Scalar(-1) / Scalar(2);
  const Scalar _tmp736 = 2 * _tmp144;
  const Scalar _tmp737 = _tmp735 * _tmp736;
  const Scalar _tmp738 = _tmp0 + _tmp2;
  const Scalar _tmp739 = 2 * _tmp141;
  const Scalar _tmp740 = _tmp738 * _tmp739;
  const Scalar _tmp741 = _tmp489 * _tmp734 - _tmp490 * _tmp737 + _tmp492 * _tmp740 + _tmp494;
  const Scalar _tmp742 = _tmp42 + Scalar(-1) / Scalar(2);
  const Scalar _tmp743 = _tmp5 + _tmp742;
  const Scalar _tmp744 = 2 * _tmp743;
  const Scalar _tmp745 = _tmp10 + _tmp12;
  const Scalar _tmp746 = _tmp736 * _tmp745;
  const Scalar _tmp747 = _tmp45 - _tmp47;
  const Scalar _tmp748 = _tmp739 * _tmp747;
  const Scalar _tmp749 = -_tmp489 * _tmp744 + _tmp490 * _tmp746 + _tmp491 + _tmp492 * _tmp748;
  const Scalar _tmp750 = _tmp716 * _tmp749;
  const Scalar _tmp751 = _tmp45 + _tmp47;
  const Scalar _tmp752 = 2 * _tmp751;
  const Scalar _tmp753 = _tmp7 + _tmp742;
  const Scalar _tmp754 = _tmp739 * _tmp753;
  const Scalar _tmp755 = _tmp0 - _tmp2;
  const Scalar _tmp756 = _tmp736 * _tmp755;
  const Scalar _tmp757 = _tmp489 * _tmp752 - _tmp490 * _tmp756 - _tmp492 * _tmp754 + _tmp496;
  const Scalar _tmp758 = _tmp721 * _tmp757;
  const Scalar _tmp759 = _tmp732 * _tmp741 - _tmp750 - _tmp758;
  const Scalar _tmp760 = _tmp699 * _tmp741;
  const Scalar _tmp761 = _tmp711 + Scalar(-1) / Scalar(2);
  const Scalar _tmp762 = _tmp703 * _tmp757;
  const Scalar _tmp763 = _tmp749 * _tmp761 + _tmp760 - _tmp762;
  const Scalar _tmp764 = 2 * std::fabs(_tmp763);
  const Scalar _tmp765 = std::max<Scalar>(_tmp764, epsilon);
  const Scalar _tmp766 = Scalar(1.0) / (_tmp765);
  const Scalar _tmp767 = _tmp766 * views_1_calibration(1, 0);
  const Scalar _tmp768 = _tmp503 - 2 * _tmp759 * _tmp767;
  const Scalar _tmp769 = 2 * _tmp760;
  const Scalar _tmp770 = _tmp712 * _tmp749;
  const Scalar _tmp771 = 2 * _tmp762;
  const Scalar _tmp772 = _tmp725 * _tmp741;
  const Scalar _tmp773 = 2 * _tmp750;
  const Scalar _tmp774 = 2 * _tmp758;
  const Scalar _tmp775 = _tmp772 - _tmp773 - _tmp774;
  const Scalar _tmp776 = (((_tmp763) > 0) - ((_tmp763) < 0));
  const Scalar _tmp777 = _tmp776 * ((((-_tmp764 + epsilon) > 0) - ((-_tmp764 + epsilon) < 0)) - 1) /
                         std::pow(_tmp765, Scalar(2));
  const Scalar _tmp778 = _tmp759 * _tmp777;
  const Scalar _tmp779 = _tmp778 * views_1_calibration(1, 0);
  const Scalar _tmp780 = _tmp767 * (-_tmp769 - _tmp770 + _tmp771) + _tmp775 * _tmp779;
  const Scalar _tmp781 = _tmp69 + _tmp71;
  const Scalar _tmp782 = _tmp741 * _tmp781;
  const Scalar _tmp783 = _tmp64 - _tmp66;
  const Scalar _tmp784 = _tmp749 * _tmp783;
  const Scalar _tmp785 = _tmp731 + _tmp76;
  const Scalar _tmp786 = -_tmp757 * _tmp785 + _tmp782 + _tmp784;
  const Scalar _tmp787 = _tmp766 * views_1_calibration(0, 0);
  const Scalar _tmp788 = _tmp500 + 2 * _tmp786 * _tmp787;
  const Scalar _tmp789 = _tmp777 * _tmp786;
  const Scalar _tmp790 = _tmp789 * views_1_calibration(0, 0);
  const Scalar _tmp791 = _tmp775 * _tmp790;
  const Scalar _tmp792 = _tmp768 * _tmp780 - _tmp788 * _tmp791;
  const Scalar _tmp793 = std::pow(_tmp768, Scalar(2)) + std::pow(_tmp788, Scalar(2)) + epsilon;
  const Scalar _tmp794 = Scalar(1.0) / (_tmp37 + costs_reprojection_error_gnc_mu - 1);
  const Scalar _tmp795 = epsilon + std::fabs(_tmp794);
  const Scalar _tmp796 = _tmp168 / _tmp795;
  const Scalar _tmp797 = _tmp793 * _tmp796 + 1;
  const Scalar _tmp798 = _tmp794 + 2;
  const Scalar _tmp799 = _tmp798 + 2 * epsilon *
                                       (std::min<Scalar>(0, (((_tmp798) > 0) - ((_tmp798) < 0))) +
                                        Scalar(1) / Scalar(2));
  const Scalar _tmp800 = (Scalar(1) / Scalar(2)) * _tmp799;
  const Scalar _tmp801 = 2 * _tmp795 / _tmp799;
  const Scalar _tmp802 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp797, _tmp800) - 1)));
  const Scalar _tmp803 = std::max<Scalar>(0, -_tmp776);
  const Scalar _tmp804 = _tmp502 * _tmp802 * _tmp803;
  const Scalar _tmp805 = _tmp804 / (_tmp793 * std::sqrt(_tmp793));
  const Scalar _tmp806 = _tmp768 * _tmp805;
  const Scalar _tmp807 = std::pow(_tmp793, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp808 = _tmp804 * _tmp807;
  const Scalar _tmp809 = (Scalar(1) / Scalar(2)) * _tmp799 - 1;
  const Scalar _tmp810 =
      _tmp168 * _tmp502 * std::pow(_tmp797, _tmp809) * _tmp803 * _tmp807 / _tmp802;
  const Scalar _tmp811 = _tmp768 * _tmp810;
  const Scalar _tmp812 = -_tmp780 * _tmp808 + _tmp792 * _tmp806 - _tmp792 * _tmp811;
  const Scalar _tmp813 = -_tmp379 * _tmp744 + _tmp380 + _tmp381 * _tmp746 + _tmp382 * _tmp748;
  const Scalar _tmp814 = _tmp783 * _tmp813;
  const Scalar _tmp815 = _tmp379 * _tmp734 - _tmp381 * _tmp737 + _tmp382 * _tmp740 + _tmp386;
  const Scalar _tmp816 = _tmp781 * _tmp815;
  const Scalar _tmp817 = _tmp379 * _tmp752 - _tmp381 * _tmp756 - _tmp382 * _tmp754 + _tmp384;
  const Scalar _tmp818 = -_tmp785 * _tmp817 + _tmp814 + _tmp816;
  const Scalar _tmp819 = _tmp699 * _tmp815;
  const Scalar _tmp820 = _tmp703 * _tmp817;
  const Scalar _tmp821 = _tmp761 * _tmp813 + _tmp819 - _tmp820;
  const Scalar _tmp822 = 2 * std::fabs(_tmp821);
  const Scalar _tmp823 = std::max<Scalar>(_tmp822, epsilon);
  const Scalar _tmp824 = Scalar(1.0) / (_tmp823);
  const Scalar _tmp825 = _tmp824 * views_1_calibration(0, 0);
  const Scalar _tmp826 = _tmp390 + 2 * _tmp818 * _tmp825;
  const Scalar _tmp827 = _tmp716 * _tmp813;
  const Scalar _tmp828 = 2 * _tmp827;
  const Scalar _tmp829 = _tmp725 * _tmp815;
  const Scalar _tmp830 = _tmp721 * _tmp817;
  const Scalar _tmp831 = 2 * _tmp830;
  const Scalar _tmp832 = -_tmp828 + _tmp829 - _tmp831;
  const Scalar _tmp833 = (((_tmp821) > 0) - ((_tmp821) < 0));
  const Scalar _tmp834 = _tmp833 * ((((-_tmp822 + epsilon) > 0) - ((-_tmp822 + epsilon) < 0)) - 1) /
                         std::pow(_tmp823, Scalar(2));
  const Scalar _tmp835 = _tmp818 * _tmp834;
  const Scalar _tmp836 = _tmp835 * views_1_calibration(0, 0);
  const Scalar _tmp837 = _tmp832 * _tmp836;
  const Scalar _tmp838 = -_tmp732 * _tmp815 + _tmp827 + _tmp830;
  const Scalar _tmp839 = _tmp834 * _tmp838;
  const Scalar _tmp840 = _tmp839 * views_1_calibration(1, 0);
  const Scalar _tmp841 = _tmp712 * _tmp813;
  const Scalar _tmp842 = 2 * _tmp819;
  const Scalar _tmp843 = 2 * _tmp820;
  const Scalar _tmp844 = _tmp824 * views_1_calibration(1, 0);
  const Scalar _tmp845 = _tmp832 * _tmp840 - _tmp844 * (-_tmp841 - _tmp842 + _tmp843);
  const Scalar _tmp846 = _tmp393 + 2 * _tmp838 * _tmp844;
  const Scalar _tmp847 = _tmp826 * _tmp837 + _tmp845 * _tmp846;
  const Scalar _tmp848 = std::pow(_tmp826, Scalar(2)) + std::pow(_tmp846, Scalar(2)) + epsilon;
  const Scalar _tmp849 = std::max<Scalar>(0, -_tmp833);
  const Scalar _tmp850 = _tmp796 * _tmp848 + 1;
  const Scalar _tmp851 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp850, _tmp800) - 1)));
  const Scalar _tmp852 = _tmp392 * _tmp849 * _tmp851;
  const Scalar _tmp853 = _tmp852 / (_tmp848 * std::sqrt(_tmp848));
  const Scalar _tmp854 = _tmp826 * _tmp853;
  const Scalar _tmp855 = std::pow(_tmp848, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp856 =
      _tmp168 * _tmp392 * _tmp849 * std::pow(_tmp850, _tmp809) * _tmp855 / _tmp851;
  const Scalar _tmp857 = _tmp826 * _tmp856;
  const Scalar _tmp858 = _tmp852 * _tmp855;
  const Scalar _tmp859 = -_tmp837 * _tmp858 + _tmp847 * _tmp854 - _tmp847 * _tmp857;
  const Scalar _tmp860 = _tmp140 * _tmp734 + _tmp143 * _tmp740 - _tmp146 * _tmp737 + _tmp153;
  const Scalar _tmp861 = _tmp140 * _tmp752 - _tmp143 * _tmp754 - _tmp146 * _tmp756 + _tmp148;
  const Scalar _tmp862 = _tmp721 * _tmp861;
  const Scalar _tmp863 = -_tmp140 * _tmp744 + _tmp143 * _tmp748 + _tmp146 * _tmp746 + _tmp158;
  const Scalar _tmp864 = _tmp716 * _tmp863;
  const Scalar _tmp865 = _tmp732 * _tmp860 - _tmp862 - _tmp864;
  const Scalar _tmp866 = _tmp699 * _tmp860;
  const Scalar _tmp867 = _tmp703 * _tmp861;
  const Scalar _tmp868 = _tmp761 * _tmp863 + _tmp866 - _tmp867;
  const Scalar _tmp869 = 2 * std::fabs(_tmp868);
  const Scalar _tmp870 = std::max<Scalar>(_tmp869, epsilon);
  const Scalar _tmp871 = Scalar(1.0) / (_tmp870);
  const Scalar _tmp872 = _tmp871 * views_1_calibration(1, 0);
  const Scalar _tmp873 = _tmp165 - 2 * _tmp865 * _tmp872;
  const Scalar _tmp874 = 2 * _tmp866;
  const Scalar _tmp875 = 2 * _tmp867;
  const Scalar _tmp876 = _tmp712 * _tmp863;
  const Scalar _tmp877 = _tmp725 * _tmp860;
  const Scalar _tmp878 = 2 * _tmp862;
  const Scalar _tmp879 = 2 * _tmp864;
  const Scalar _tmp880 = (((_tmp868) > 0) - ((_tmp868) < 0));
  const Scalar _tmp881 = _tmp880 * ((((_tmp37 + _tmp869) > 0) - ((_tmp37 + _tmp869) < 0)) + 1) /
                         std::pow(_tmp870, Scalar(2));
  const Scalar _tmp882 = _tmp881 * (_tmp877 - _tmp878 - _tmp879);
  const Scalar _tmp883 = _tmp865 * views_1_calibration(1, 0);
  const Scalar _tmp884 = _tmp872 * (-_tmp874 + _tmp875 - _tmp876) - _tmp882 * _tmp883;
  const Scalar _tmp885 = _tmp781 * _tmp860;
  const Scalar _tmp886 = _tmp783 * _tmp863;
  const Scalar _tmp887 = -_tmp785 * _tmp861 + _tmp885 + _tmp886;
  const Scalar _tmp888 = _tmp871 * views_1_calibration(0, 0);
  const Scalar _tmp889 = _tmp162 + 2 * _tmp887 * _tmp888;
  const Scalar _tmp890 = _tmp882 * _tmp887 * views_1_calibration(0, 0);
  const Scalar _tmp891 = _tmp873 * _tmp884 + _tmp889 * _tmp890;
  const Scalar _tmp892 = std::max<Scalar>(0, -_tmp880);
  const Scalar _tmp893 = std::pow(_tmp873, Scalar(2)) + std::pow(_tmp889, Scalar(2)) + epsilon;
  const Scalar _tmp894 = std::pow(_tmp893, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp895 = _tmp796 * _tmp893 + 1;
  const Scalar _tmp896 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp895, _tmp800) - 1)));
  const Scalar _tmp897 =
      _tmp164 * _tmp168 * _tmp892 * _tmp894 * std::pow(_tmp895, _tmp809) / _tmp896;
  const Scalar _tmp898 = _tmp889 * _tmp897;
  const Scalar _tmp899 = _tmp164 * _tmp892 * _tmp896;
  const Scalar _tmp900 = _tmp899 / (_tmp893 * std::sqrt(_tmp893));
  const Scalar _tmp901 = _tmp889 * _tmp900;
  const Scalar _tmp902 = _tmp894 * _tmp899;
  const Scalar _tmp903 = _tmp890 * _tmp902 + _tmp891 * _tmp898 - _tmp891 * _tmp901;
  const Scalar _tmp904 = _tmp846 * _tmp853;
  const Scalar _tmp905 = _tmp846 * _tmp856;
  const Scalar _tmp906 = _tmp845 * _tmp858 - _tmp847 * _tmp904 + _tmp847 * _tmp905;
  const Scalar _tmp907 = _tmp401 * _tmp752 - _tmp402 * _tmp754 - _tmp404 * _tmp756 + _tmp408;
  const Scalar _tmp908 = _tmp703 * _tmp907;
  const Scalar _tmp909 = 2 * _tmp908;
  const Scalar _tmp910 = -_tmp401 * _tmp744 + _tmp402 * _tmp748 + _tmp403 + _tmp404 * _tmp746;
  const Scalar _tmp911 = _tmp712 * _tmp910;
  const Scalar _tmp912 = _tmp401 * _tmp734 + _tmp402 * _tmp740 - _tmp404 * _tmp737 + _tmp406;
  const Scalar _tmp913 = _tmp699 * _tmp912;
  const Scalar _tmp914 = 2 * _tmp913;
  const Scalar _tmp915 = -_tmp761 * _tmp910 + _tmp908 - _tmp913;
  const Scalar _tmp916 = 2 * std::fabs(_tmp915);
  const Scalar _tmp917 = std::max<Scalar>(_tmp916, epsilon);
  const Scalar _tmp918 = Scalar(1.0) / (_tmp917);
  const Scalar _tmp919 = _tmp918 * views_1_calibration(1, 0);
  const Scalar _tmp920 = _tmp721 * _tmp907;
  const Scalar _tmp921 = 2 * _tmp920;
  const Scalar _tmp922 = _tmp716 * _tmp910;
  const Scalar _tmp923 = 2 * _tmp922;
  const Scalar _tmp924 = _tmp725 * _tmp912;
  const Scalar _tmp925 = -_tmp921 - _tmp923 + _tmp924;
  const Scalar _tmp926 = -_tmp732 * _tmp912 + _tmp920 + _tmp922;
  const Scalar _tmp927 = (((_tmp915) > 0) - ((_tmp915) < 0));
  const Scalar _tmp928 = _tmp927 * ((((-_tmp916 + epsilon) > 0) - ((-_tmp916 + epsilon) < 0)) - 1) /
                         std::pow(_tmp917, Scalar(2));
  const Scalar _tmp929 = _tmp926 * _tmp928;
  const Scalar _tmp930 = _tmp929 * views_1_calibration(1, 0);
  const Scalar _tmp931 = _tmp919 * (_tmp909 - _tmp911 - _tmp914) + _tmp925 * _tmp930;
  const Scalar _tmp932 = _tmp783 * _tmp910;
  const Scalar _tmp933 = _tmp781 * _tmp912;
  const Scalar _tmp934 = _tmp785 * _tmp907 - _tmp932 - _tmp933;
  const Scalar _tmp935 = _tmp918 * views_1_calibration(0, 0);
  const Scalar _tmp936 = _tmp412 - 2 * _tmp934 * _tmp935;
  const Scalar _tmp937 = _tmp415 + 2 * _tmp919 * _tmp926;
  const Scalar _tmp938 = std::pow(_tmp936, Scalar(2)) + std::pow(_tmp937, Scalar(2)) + epsilon;
  const Scalar _tmp939 = std::pow(_tmp938, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp940 = _tmp796 * _tmp938 + 1;
  const Scalar _tmp941 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp940, _tmp800) - 1)));
  const Scalar _tmp942 = std::max<Scalar>(0, _tmp927);
  const Scalar _tmp943 = _tmp414 * _tmp941 * _tmp942;
  const Scalar _tmp944 = _tmp939 * _tmp943;
  const Scalar _tmp945 = _tmp928 * _tmp934;
  const Scalar _tmp946 = _tmp945 * views_1_calibration(0, 0);
  const Scalar _tmp947 = _tmp925 * _tmp946;
  const Scalar _tmp948 = -_tmp931 * _tmp937 + _tmp936 * _tmp947;
  const Scalar _tmp949 = _tmp943 / (_tmp938 * std::sqrt(_tmp938));
  const Scalar _tmp950 = _tmp937 * _tmp949;
  const Scalar _tmp951 =
      _tmp168 * _tmp414 * _tmp939 * std::pow(_tmp940, _tmp809) * _tmp942 / _tmp941;
  const Scalar _tmp952 = _tmp937 * _tmp951;
  const Scalar _tmp953 = _tmp931 * _tmp944 + _tmp948 * _tmp950 - _tmp948 * _tmp952;
  const Scalar _tmp954 = -_tmp555 * _tmp744 + _tmp556 * _tmp746 + _tmp557 + _tmp558 * _tmp748;
  const Scalar _tmp955 = _tmp783 * _tmp954;
  const Scalar _tmp956 = _tmp555 * _tmp734 - _tmp556 * _tmp737 + _tmp558 * _tmp740 + _tmp560;
  const Scalar _tmp957 = _tmp781 * _tmp956;
  const Scalar _tmp958 = _tmp555 * _tmp752 - _tmp556 * _tmp756 - _tmp558 * _tmp754 + _tmp562;
  const Scalar _tmp959 = -_tmp785 * _tmp958 + _tmp955 + _tmp957;
  const Scalar _tmp960 = _tmp699 * _tmp956;
  const Scalar _tmp961 = _tmp703 * _tmp958;
  const Scalar _tmp962 = _tmp761 * _tmp954 + _tmp960 - _tmp961;
  const Scalar _tmp963 = 2 * std::fabs(_tmp962);
  const Scalar _tmp964 = std::max<Scalar>(_tmp963, epsilon);
  const Scalar _tmp965 = Scalar(1.0) / (_tmp964);
  const Scalar _tmp966 = _tmp965 * views_1_calibration(0, 0);
  const Scalar _tmp967 = _tmp566 + 2 * _tmp959 * _tmp966;
  const Scalar _tmp968 = _tmp716 * _tmp954;
  const Scalar _tmp969 = _tmp721 * _tmp958;
  const Scalar _tmp970 = -_tmp732 * _tmp956 + _tmp968 + _tmp969;
  const Scalar _tmp971 = _tmp965 * views_1_calibration(1, 0);
  const Scalar _tmp972 = _tmp569 + 2 * _tmp970 * _tmp971;
  const Scalar _tmp973 = std::pow(_tmp967, Scalar(2)) + std::pow(_tmp972, Scalar(2)) + epsilon;
  const Scalar _tmp974 = std::pow(_tmp973, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp975 = (((_tmp962) > 0) - ((_tmp962) < 0));
  const Scalar _tmp976 = std::max<Scalar>(0, -_tmp975);
  const Scalar _tmp977 = _tmp796 * _tmp973 + 1;
  const Scalar _tmp978 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp977, _tmp800) - 1)));
  const Scalar _tmp979 = _tmp568 * _tmp976 * _tmp978;
  const Scalar _tmp980 = _tmp974 * _tmp979;
  const Scalar _tmp981 = 2 * _tmp968;
  const Scalar _tmp982 = _tmp725 * _tmp956;
  const Scalar _tmp983 = 2 * _tmp969;
  const Scalar _tmp984 = _tmp975 * ((((-_tmp963 + epsilon) > 0) - ((-_tmp963 + epsilon) < 0)) - 1) /
                         std::pow(_tmp964, Scalar(2));
  const Scalar _tmp985 = _tmp984 * (-_tmp981 + _tmp982 - _tmp983);
  const Scalar _tmp986 = _tmp959 * _tmp985 * views_1_calibration(0, 0);
  const Scalar _tmp987 = _tmp712 * _tmp954;
  const Scalar _tmp988 = 2 * _tmp960;
  const Scalar _tmp989 = 2 * _tmp961;
  const Scalar _tmp990 = _tmp970 * views_1_calibration(1, 0);
  const Scalar _tmp991 = _tmp971 * (-_tmp987 - _tmp988 + _tmp989) - _tmp985 * _tmp990;
  const Scalar _tmp992 = _tmp967 * _tmp986 - _tmp972 * _tmp991;
  const Scalar _tmp993 =
      _tmp168 * _tmp568 * _tmp974 * _tmp976 * std::pow(_tmp977, _tmp809) / _tmp978;
  const Scalar _tmp994 = _tmp967 * _tmp993;
  const Scalar _tmp995 = _tmp979 / (_tmp973 * std::sqrt(_tmp973));
  const Scalar _tmp996 = _tmp967 * _tmp995;
  const Scalar _tmp997 = _tmp980 * _tmp986 + _tmp992 * _tmp994 - _tmp992 * _tmp996;
  const Scalar _tmp998 = _tmp182 * _tmp736;
  const Scalar _tmp999 = _tmp181 * _tmp734 + _tmp183 * _tmp740 + _tmp186 - _tmp735 * _tmp998;
  const Scalar _tmp1000 = _tmp781 * _tmp999;
  const Scalar _tmp1001 = _tmp181 * _tmp752 - _tmp183 * _tmp754 + _tmp184 - _tmp755 * _tmp998;
  const Scalar _tmp1002 = -_tmp181 * _tmp744 + _tmp183 * _tmp748 + _tmp188 + _tmp745 * _tmp998;
  const Scalar _tmp1003 = _tmp1002 * _tmp783;
  const Scalar _tmp1004 = _tmp1000 - _tmp1001 * _tmp785 + _tmp1003;
  const Scalar _tmp1005 = _tmp699 * _tmp999;
  const Scalar _tmp1006 = _tmp1001 * _tmp703;
  const Scalar _tmp1007 = _tmp1002 * _tmp761 + _tmp1005 - _tmp1006;
  const Scalar _tmp1008 = 2 * std::fabs(_tmp1007);
  const Scalar _tmp1009 = std::max<Scalar>(_tmp1008, epsilon);
  const Scalar _tmp1010 = Scalar(1.0) / (_tmp1009);
  const Scalar _tmp1011 = _tmp1010 * views_1_calibration(0, 0);
  const Scalar _tmp1012 = 2 * _tmp1004 * _tmp1011 + _tmp192;
  const Scalar _tmp1013 = _tmp725 * _tmp999;
  const Scalar _tmp1014 = _tmp1001 * _tmp721;
  const Scalar _tmp1015 = 2 * _tmp1014;
  const Scalar _tmp1016 = _tmp1002 * _tmp716;
  const Scalar _tmp1017 = 2 * _tmp1016;
  const Scalar _tmp1018 = _tmp1013 - _tmp1015 - _tmp1017;
  const Scalar _tmp1019 = (((_tmp1007) > 0) - ((_tmp1007) < 0));
  const Scalar _tmp1020 = _tmp1019 * ((((_tmp1008 + _tmp37) > 0) - ((_tmp1008 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1009, Scalar(2));
  const Scalar _tmp1021 = _tmp1004 * _tmp1020;
  const Scalar _tmp1022 = _tmp1021 * views_1_calibration(0, 0);
  const Scalar _tmp1023 = _tmp1018 * _tmp1022;
  const Scalar _tmp1024 = -_tmp1014 - _tmp1016 + _tmp732 * _tmp999;
  const Scalar _tmp1025 = _tmp1010 * views_1_calibration(1, 0);
  const Scalar _tmp1026 = -2 * _tmp1024 * _tmp1025 + _tmp195;
  const Scalar _tmp1027 = _tmp1020 * _tmp1024;
  const Scalar _tmp1028 = _tmp1027 * views_1_calibration(1, 0);
  const Scalar _tmp1029 = 2 * _tmp1005;
  const Scalar _tmp1030 = 2 * _tmp1006;
  const Scalar _tmp1031 = _tmp1002 * _tmp712;
  const Scalar _tmp1032 = _tmp1018 * _tmp1028 - _tmp1025 * (-_tmp1029 + _tmp1030 - _tmp1031);
  const Scalar _tmp1033 = _tmp1012 * _tmp1023 - _tmp1026 * _tmp1032;
  const Scalar _tmp1034 = std::pow(_tmp1012, Scalar(2)) + std::pow(_tmp1026, Scalar(2)) + epsilon;
  const Scalar _tmp1035 = std::pow(_tmp1034, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1036 = std::max<Scalar>(0, -_tmp1019);
  const Scalar _tmp1037 = _tmp1034 * _tmp796 + 1;
  const Scalar _tmp1038 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1037, _tmp800) - 1)));
  const Scalar _tmp1039 =
      _tmp1035 * _tmp1036 * std::pow(_tmp1037, _tmp809) * _tmp168 * _tmp194 / _tmp1038;
  const Scalar _tmp1040 = _tmp1026 * _tmp1039;
  const Scalar _tmp1041 = _tmp1036 * _tmp1038 * _tmp194;
  const Scalar _tmp1042 = _tmp1041 / (_tmp1034 * std::sqrt(_tmp1034));
  const Scalar _tmp1043 = _tmp1026 * _tmp1042;
  const Scalar _tmp1044 = _tmp1035 * _tmp1041;
  const Scalar _tmp1045 = -_tmp1032 * _tmp1044 + _tmp1033 * _tmp1040 - _tmp1033 * _tmp1043;
  const Scalar _tmp1046 = _tmp335 * _tmp734 + _tmp336 * _tmp740 - _tmp337 * _tmp737 + _tmp340;
  const Scalar _tmp1047 = _tmp335 * _tmp752 - _tmp336 * _tmp754 - _tmp337 * _tmp756 + _tmp342;
  const Scalar _tmp1048 = _tmp1047 * _tmp721;
  const Scalar _tmp1049 = -_tmp335 * _tmp744 + _tmp336 * _tmp748 + _tmp337 * _tmp746 + _tmp338;
  const Scalar _tmp1050 = _tmp1049 * _tmp716;
  const Scalar _tmp1051 = _tmp1046 * _tmp732 - _tmp1048 - _tmp1050;
  const Scalar _tmp1052 = _tmp1046 * _tmp699;
  const Scalar _tmp1053 = _tmp1047 * _tmp703;
  const Scalar _tmp1054 = _tmp1049 * _tmp761 + _tmp1052 - _tmp1053;
  const Scalar _tmp1055 = 2 * std::fabs(_tmp1054);
  const Scalar _tmp1056 = std::max<Scalar>(_tmp1055, epsilon);
  const Scalar _tmp1057 = Scalar(1.0) / (_tmp1056);
  const Scalar _tmp1058 = _tmp1057 * views_1_calibration(1, 0);
  const Scalar _tmp1059 = -2 * _tmp1051 * _tmp1058 + _tmp349;
  const Scalar _tmp1060 = _tmp1046 * _tmp725;
  const Scalar _tmp1061 = 2 * _tmp1048;
  const Scalar _tmp1062 = 2 * _tmp1050;
  const Scalar _tmp1063 = _tmp1060 - _tmp1061 - _tmp1062;
  const Scalar _tmp1064 = (((_tmp1054) > 0) - ((_tmp1054) < 0));
  const Scalar _tmp1065 = _tmp1064 *
                          ((((-_tmp1055 + epsilon) > 0) - ((-_tmp1055 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1056, Scalar(2));
  const Scalar _tmp1066 = _tmp1051 * _tmp1065;
  const Scalar _tmp1067 = _tmp1066 * views_1_calibration(1, 0);
  const Scalar _tmp1068 = 2 * _tmp1052;
  const Scalar _tmp1069 = 2 * _tmp1053;
  const Scalar _tmp1070 = _tmp1049 * _tmp712;
  const Scalar _tmp1071 = _tmp1058 * (-_tmp1068 + _tmp1069 - _tmp1070) + _tmp1063 * _tmp1067;
  const Scalar _tmp1072 = _tmp1046 * _tmp781;
  const Scalar _tmp1073 = _tmp1049 * _tmp783;
  const Scalar _tmp1074 = -_tmp1047 * _tmp785 + _tmp1072 + _tmp1073;
  const Scalar _tmp1075 = _tmp1057 * views_1_calibration(0, 0);
  const Scalar _tmp1076 = 2 * _tmp1074 * _tmp1075 + _tmp346;
  const Scalar _tmp1077 = _tmp1074 * views_1_calibration(0, 0);
  const Scalar _tmp1078 = _tmp1065 * _tmp1077;
  const Scalar _tmp1079 = _tmp1063 * _tmp1078;
  const Scalar _tmp1080 = _tmp1059 * _tmp1071 - _tmp1076 * _tmp1079;
  const Scalar _tmp1081 = std::pow(_tmp1059, Scalar(2)) + std::pow(_tmp1076, Scalar(2)) + epsilon;
  const Scalar _tmp1082 = _tmp1081 * _tmp796 + 1;
  const Scalar _tmp1083 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1082, _tmp800) - 1)));
  const Scalar _tmp1084 = std::max<Scalar>(0, -_tmp1064);
  const Scalar _tmp1085 = _tmp1083 * _tmp1084 * _tmp348;
  const Scalar _tmp1086 = _tmp1085 / (_tmp1081 * std::sqrt(_tmp1081));
  const Scalar _tmp1087 = _tmp1059 * _tmp1086;
  const Scalar _tmp1088 = std::pow(_tmp1081, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1089 = _tmp1085 * _tmp1088;
  const Scalar _tmp1090 =
      std::pow(_tmp1082, _tmp809) * _tmp1084 * _tmp1088 * _tmp168 * _tmp348 / _tmp1083;
  const Scalar _tmp1091 = _tmp1059 * _tmp1090;
  const Scalar _tmp1092 = -_tmp1071 * _tmp1089 + _tmp1080 * _tmp1087 - _tmp1080 * _tmp1091;
  const Scalar _tmp1093 = -_tmp445 * _tmp744 + _tmp447 * _tmp748 + _tmp448 * _tmp746 + _tmp450;
  const Scalar _tmp1094 = _tmp1093 * _tmp716;
  const Scalar _tmp1095 = _tmp445 * _tmp734 + _tmp447 * _tmp740 - _tmp448 * _tmp737 + _tmp452;
  const Scalar _tmp1096 = _tmp445 * _tmp752 + _tmp446 - _tmp447 * _tmp754 - _tmp448 * _tmp756;
  const Scalar _tmp1097 = _tmp1096 * _tmp721;
  const Scalar _tmp1098 = _tmp1094 - _tmp1095 * _tmp732 + _tmp1097;
  const Scalar _tmp1099 = _tmp1095 * _tmp699;
  const Scalar _tmp1100 = _tmp1096 * _tmp703;
  const Scalar _tmp1101 = _tmp1093 * _tmp761 + _tmp1099 - _tmp1100;
  const Scalar _tmp1102 = 2 * std::fabs(_tmp1101);
  const Scalar _tmp1103 = std::max<Scalar>(_tmp1102, epsilon);
  const Scalar _tmp1104 = Scalar(1.0) / (_tmp1103);
  const Scalar _tmp1105 = _tmp1104 * views_1_calibration(1, 0);
  const Scalar _tmp1106 = 2 * _tmp1098 * _tmp1105 + _tmp459;
  const Scalar _tmp1107 = _tmp1093 * _tmp712;
  const Scalar _tmp1108 = 2 * _tmp1099;
  const Scalar _tmp1109 = 2 * _tmp1100;
  const Scalar _tmp1110 = 2 * _tmp1094;
  const Scalar _tmp1111 = _tmp1095 * _tmp725;
  const Scalar _tmp1112 = 2 * _tmp1097;
  const Scalar _tmp1113 = -_tmp1110 + _tmp1111 - _tmp1112;
  const Scalar _tmp1114 = (((_tmp1101) > 0) - ((_tmp1101) < 0));
  const Scalar _tmp1115 = _tmp1114 * ((((_tmp1102 + _tmp37) > 0) - ((_tmp1102 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1103, Scalar(2));
  const Scalar _tmp1116 = _tmp1098 * _tmp1115;
  const Scalar _tmp1117 = _tmp1116 * views_1_calibration(1, 0);
  const Scalar _tmp1118 = _tmp1105 * (-_tmp1107 - _tmp1108 + _tmp1109) + _tmp1113 * _tmp1117;
  const Scalar _tmp1119 = _tmp1093 * _tmp783;
  const Scalar _tmp1120 = _tmp1095 * _tmp781;
  const Scalar _tmp1121 = -_tmp1096 * _tmp785 + _tmp1119 + _tmp1120;
  const Scalar _tmp1122 = _tmp1104 * views_1_calibration(0, 0);
  const Scalar _tmp1123 = 2 * _tmp1121 * _tmp1122 + _tmp456;
  const Scalar _tmp1124 = _tmp1121 * views_1_calibration(0, 0);
  const Scalar _tmp1125 = _tmp1115 * _tmp1124;
  const Scalar _tmp1126 = _tmp1113 * _tmp1125;
  const Scalar _tmp1127 = _tmp1106 * _tmp1118 + _tmp1123 * _tmp1126;
  const Scalar _tmp1128 = std::pow(_tmp1106, Scalar(2)) + std::pow(_tmp1123, Scalar(2)) + epsilon;
  const Scalar _tmp1129 = std::max<Scalar>(0, -_tmp1114);
  const Scalar _tmp1130 = _tmp1128 * _tmp796 + 1;
  const Scalar _tmp1131 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1130, _tmp800) - 1)));
  const Scalar _tmp1132 = _tmp1129 * _tmp1131 * _tmp458;
  const Scalar _tmp1133 = _tmp1132 / (_tmp1128 * std::sqrt(_tmp1128));
  const Scalar _tmp1134 = _tmp1123 * _tmp1133;
  const Scalar _tmp1135 = std::pow(_tmp1128, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1136 =
      _tmp1129 * std::pow(_tmp1130, _tmp809) * _tmp1135 * _tmp168 * _tmp458 / _tmp1131;
  const Scalar _tmp1137 = _tmp1123 * _tmp1136;
  const Scalar _tmp1138 = _tmp1132 * _tmp1135;
  const Scalar _tmp1139 = -_tmp1126 * _tmp1138 + _tmp1127 * _tmp1134 - _tmp1127 * _tmp1137;
  const Scalar _tmp1140 = _tmp269 * _tmp734 + _tmp270 * _tmp740 - _tmp271 * _tmp737 + _tmp272;
  const Scalar _tmp1141 = _tmp1140 * _tmp781;
  const Scalar _tmp1142 = -_tmp269 * _tmp744 + _tmp270 * _tmp748 + _tmp271 * _tmp746 + _tmp274;
  const Scalar _tmp1143 = _tmp1142 * _tmp783;
  const Scalar _tmp1144 = _tmp269 * _tmp752 - _tmp270 * _tmp754 - _tmp271 * _tmp756 + _tmp276;
  const Scalar _tmp1145 = _tmp1141 + _tmp1143 - _tmp1144 * _tmp785;
  const Scalar _tmp1146 = _tmp1140 * _tmp699;
  const Scalar _tmp1147 = _tmp1144 * _tmp703;
  const Scalar _tmp1148 = _tmp1142 * _tmp761 + _tmp1146 - _tmp1147;
  const Scalar _tmp1149 = 2 * std::fabs(_tmp1148);
  const Scalar _tmp1150 = std::max<Scalar>(_tmp1149, epsilon);
  const Scalar _tmp1151 = Scalar(1.0) / (_tmp1150);
  const Scalar _tmp1152 = _tmp1151 * views_1_calibration(0, 0);
  const Scalar _tmp1153 = 2 * _tmp1145 * _tmp1152 + _tmp280;
  const Scalar _tmp1154 = _tmp1140 * _tmp725;
  const Scalar _tmp1155 = _tmp1142 * _tmp716;
  const Scalar _tmp1156 = 2 * _tmp1155;
  const Scalar _tmp1157 = _tmp1144 * _tmp721;
  const Scalar _tmp1158 = 2 * _tmp1157;
  const Scalar _tmp1159 = _tmp1154 - _tmp1156 - _tmp1158;
  const Scalar _tmp1160 = (((_tmp1148) > 0) - ((_tmp1148) < 0));
  const Scalar _tmp1161 = _tmp1160 *
                          ((((-_tmp1149 + epsilon) > 0) - ((-_tmp1149 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1150, Scalar(2));
  const Scalar _tmp1162 = _tmp1145 * _tmp1161;
  const Scalar _tmp1163 = _tmp1162 * views_1_calibration(0, 0);
  const Scalar _tmp1164 = _tmp1159 * _tmp1163;
  const Scalar _tmp1165 = 2 * _tmp1146;
  const Scalar _tmp1166 = _tmp1142 * _tmp712;
  const Scalar _tmp1167 = 2 * _tmp1147;
  const Scalar _tmp1168 = _tmp1151 * views_1_calibration(1, 0);
  const Scalar _tmp1169 = _tmp1140 * _tmp732 - _tmp1155 - _tmp1157;
  const Scalar _tmp1170 = _tmp1161 * _tmp1169;
  const Scalar _tmp1171 = _tmp1170 * views_1_calibration(1, 0);
  const Scalar _tmp1172 = _tmp1159 * _tmp1171 + _tmp1168 * (-_tmp1165 - _tmp1166 + _tmp1167);
  const Scalar _tmp1173 = -2 * _tmp1168 * _tmp1169 + _tmp283;
  const Scalar _tmp1174 = _tmp1153 * _tmp1164 - _tmp1172 * _tmp1173;
  const Scalar _tmp1175 = std::max<Scalar>(0, -_tmp1160);
  const Scalar _tmp1176 = std::pow(_tmp1153, Scalar(2)) + std::pow(_tmp1173, Scalar(2)) + epsilon;
  const Scalar _tmp1177 = std::pow(_tmp1176, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1178 = _tmp1176 * _tmp796 + 1;
  const Scalar _tmp1179 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1178, _tmp800) - 1)));
  const Scalar _tmp1180 =
      _tmp1175 * _tmp1177 * std::pow(_tmp1178, _tmp809) * _tmp168 * _tmp282 / _tmp1179;
  const Scalar _tmp1181 = _tmp1153 * _tmp1180;
  const Scalar _tmp1182 = _tmp1175 * _tmp1179 * _tmp282;
  const Scalar _tmp1183 = _tmp1182 / (_tmp1176 * std::sqrt(_tmp1176));
  const Scalar _tmp1184 = _tmp1153 * _tmp1183;
  const Scalar _tmp1185 = _tmp1177 * _tmp1182;
  const Scalar _tmp1186 = _tmp1164 * _tmp1185 + _tmp1174 * _tmp1181 - _tmp1174 * _tmp1184;
  const Scalar _tmp1187 = _tmp313 * _tmp734 + _tmp314 * _tmp740 - _tmp315 * _tmp737 + _tmp318;
  const Scalar _tmp1188 = _tmp1187 * _tmp781;
  const Scalar _tmp1189 = -_tmp313 * _tmp744 + _tmp314 * _tmp748 + _tmp315 * _tmp746 + _tmp320;
  const Scalar _tmp1190 = _tmp1189 * _tmp783;
  const Scalar _tmp1191 = _tmp313 * _tmp752 - _tmp314 * _tmp754 - _tmp315 * _tmp756 + _tmp316;
  const Scalar _tmp1192 = _tmp1188 + _tmp1190 - _tmp1191 * _tmp785;
  const Scalar _tmp1193 = _tmp1187 * _tmp699;
  const Scalar _tmp1194 = _tmp1191 * _tmp703;
  const Scalar _tmp1195 = _tmp1189 * _tmp761 + _tmp1193 - _tmp1194;
  const Scalar _tmp1196 = 2 * std::fabs(_tmp1195);
  const Scalar _tmp1197 = std::max<Scalar>(_tmp1196, epsilon);
  const Scalar _tmp1198 = Scalar(1.0) / (_tmp1197);
  const Scalar _tmp1199 = _tmp1198 * views_1_calibration(0, 0);
  const Scalar _tmp1200 = 2 * _tmp1192 * _tmp1199 + _tmp324;
  const Scalar _tmp1201 = _tmp1187 * _tmp725;
  const Scalar _tmp1202 = _tmp1191 * _tmp721;
  const Scalar _tmp1203 = 2 * _tmp1202;
  const Scalar _tmp1204 = _tmp1189 * _tmp716;
  const Scalar _tmp1205 = 2 * _tmp1204;
  const Scalar _tmp1206 = _tmp1201 - _tmp1203 - _tmp1205;
  const Scalar _tmp1207 = (((_tmp1195) > 0) - ((_tmp1195) < 0));
  const Scalar _tmp1208 = _tmp1207 *
                          ((((-_tmp1196 + epsilon) > 0) - ((-_tmp1196 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1197, Scalar(2));
  const Scalar _tmp1209 = _tmp1192 * _tmp1208;
  const Scalar _tmp1210 = _tmp1209 * views_1_calibration(0, 0);
  const Scalar _tmp1211 = _tmp1206 * _tmp1210;
  const Scalar _tmp1212 = 2 * _tmp1193;
  const Scalar _tmp1213 = 2 * _tmp1194;
  const Scalar _tmp1214 = _tmp1189 * _tmp712;
  const Scalar _tmp1215 = _tmp1198 * views_1_calibration(1, 0);
  const Scalar _tmp1216 = _tmp1187 * _tmp732 - _tmp1202 - _tmp1204;
  const Scalar _tmp1217 = _tmp1208 * _tmp1216;
  const Scalar _tmp1218 = _tmp1217 * views_1_calibration(1, 0);
  const Scalar _tmp1219 = _tmp1206 * _tmp1218 + _tmp1215 * (-_tmp1212 + _tmp1213 - _tmp1214);
  const Scalar _tmp1220 = -2 * _tmp1215 * _tmp1216 + _tmp327;
  const Scalar _tmp1221 = _tmp1200 * _tmp1211 - _tmp1219 * _tmp1220;
  const Scalar _tmp1222 = std::pow(_tmp1200, Scalar(2)) + std::pow(_tmp1220, Scalar(2)) + epsilon;
  const Scalar _tmp1223 = _tmp1222 * _tmp796 + 1;
  const Scalar _tmp1224 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1223, _tmp800) - 1)));
  const Scalar _tmp1225 = std::max<Scalar>(0, -_tmp1207);
  const Scalar _tmp1226 = _tmp1224 * _tmp1225 * _tmp326;
  const Scalar _tmp1227 = _tmp1226 / (_tmp1222 * std::sqrt(_tmp1222));
  const Scalar _tmp1228 = _tmp1220 * _tmp1227;
  const Scalar _tmp1229 = std::pow(_tmp1222, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1230 =
      std::pow(_tmp1223, _tmp809) * _tmp1225 * _tmp1229 * _tmp168 * _tmp326 / _tmp1224;
  const Scalar _tmp1231 = _tmp1220 * _tmp1230;
  const Scalar _tmp1232 = _tmp1226 * _tmp1229;
  const Scalar _tmp1233 = _tmp1219 * _tmp1232 + _tmp1221 * _tmp1228 - _tmp1221 * _tmp1231;
  const Scalar _tmp1234 = _tmp659 * _tmp676;
  const Scalar _tmp1235 = _tmp682 * _tmp687;
  const Scalar _tmp1236 = _tmp682 * _tmp692;
  const Scalar _tmp1237 =
      -_tmp1234 * priors_1_0_sqrt_info(1, 2) + _tmp1235 * priors_1_0_sqrt_info(1, 0) +
      _tmp1236 * priors_1_0_sqrt_info(1, 0) + _tmp677 * priors_1_0_sqrt_info(1, 1) -
      _tmp690 * priors_1_0_sqrt_info(1, 1) - _tmp693 * priors_1_0_sqrt_info(1, 1) +
      _tmp695 * priors_1_0_sqrt_info(1, 0) - _tmp698 * priors_1_0_sqrt_info(1, 2) +
      _tmp715 * priors_1_0_sqrt_info(1, 4) + _tmp728 * priors_1_0_sqrt_info(1, 5) -
      _tmp729 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp1238 = -_tmp357 * _tmp744 + _tmp358 * _tmp748 + _tmp359 * _tmp746 + _tmp364;
  const Scalar _tmp1239 = _tmp1238 * _tmp783;
  const Scalar _tmp1240 = _tmp357 * _tmp734 + _tmp358 * _tmp740 - _tmp359 * _tmp737 + _tmp362;
  const Scalar _tmp1241 = _tmp1240 * _tmp781;
  const Scalar _tmp1242 = _tmp357 * _tmp752 - _tmp358 * _tmp754 - _tmp359 * _tmp756 + _tmp360;
  const Scalar _tmp1243 = _tmp1239 + _tmp1241 - _tmp1242 * _tmp785;
  const Scalar _tmp1244 = _tmp1240 * _tmp699;
  const Scalar _tmp1245 = _tmp1242 * _tmp703;
  const Scalar _tmp1246 = _tmp1238 * _tmp761 + _tmp1244 - _tmp1245;
  const Scalar _tmp1247 = 2 * std::fabs(_tmp1246);
  const Scalar _tmp1248 = std::max<Scalar>(_tmp1247, epsilon);
  const Scalar _tmp1249 = Scalar(1.0) / (_tmp1248);
  const Scalar _tmp1250 = _tmp1249 * views_1_calibration(0, 0);
  const Scalar _tmp1251 = 2 * _tmp1243 * _tmp1250 + _tmp368;
  const Scalar _tmp1252 = _tmp1238 * _tmp716;
  const Scalar _tmp1253 = 2 * _tmp1252;
  const Scalar _tmp1254 = _tmp1240 * _tmp725;
  const Scalar _tmp1255 = _tmp1242 * _tmp721;
  const Scalar _tmp1256 = 2 * _tmp1255;
  const Scalar _tmp1257 = (((_tmp1246) > 0) - ((_tmp1246) < 0));
  const Scalar _tmp1258 = _tmp1257 * ((((_tmp1247 + _tmp37) > 0) - ((_tmp1247 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1248, Scalar(2));
  const Scalar _tmp1259 = _tmp1258 * (-_tmp1253 + _tmp1254 - _tmp1256);
  const Scalar _tmp1260 = _tmp1243 * _tmp1259 * views_1_calibration(0, 0);
  const Scalar _tmp1261 = _tmp1238 * _tmp712;
  const Scalar _tmp1262 = 2 * _tmp1244;
  const Scalar _tmp1263 = 2 * _tmp1245;
  const Scalar _tmp1264 = _tmp1249 * views_1_calibration(1, 0);
  const Scalar _tmp1265 = -_tmp1240 * _tmp732 + _tmp1252 + _tmp1255;
  const Scalar _tmp1266 = _tmp1265 * views_1_calibration(1, 0);
  const Scalar _tmp1267 = _tmp1259 * _tmp1266 + _tmp1264 * (-_tmp1261 - _tmp1262 + _tmp1263);
  const Scalar _tmp1268 = 2 * _tmp1264 * _tmp1265 + _tmp371;
  const Scalar _tmp1269 = _tmp1251 * _tmp1260 + _tmp1267 * _tmp1268;
  const Scalar _tmp1270 = std::pow(_tmp1251, Scalar(2)) + std::pow(_tmp1268, Scalar(2)) + epsilon;
  const Scalar _tmp1271 = _tmp1270 * _tmp796 + 1;
  const Scalar _tmp1272 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1271, _tmp800) - 1)));
  const Scalar _tmp1273 = std::max<Scalar>(0, -_tmp1257);
  const Scalar _tmp1274 = _tmp1272 * _tmp1273 * _tmp370;
  const Scalar _tmp1275 = _tmp1274 / (_tmp1270 * std::sqrt(_tmp1270));
  const Scalar _tmp1276 = _tmp1251 * _tmp1275;
  const Scalar _tmp1277 = std::pow(_tmp1270, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1278 =
      std::pow(_tmp1271, _tmp809) * _tmp1273 * _tmp1277 * _tmp168 * _tmp370 / _tmp1272;
  const Scalar _tmp1279 = _tmp1251 * _tmp1278;
  const Scalar _tmp1280 = _tmp1274 * _tmp1277;
  const Scalar _tmp1281 = -_tmp1260 * _tmp1280 + _tmp1269 * _tmp1276 - _tmp1269 * _tmp1279;
  const Scalar _tmp1282 = _tmp203 * _tmp752 - _tmp204 * _tmp756 - _tmp205 * _tmp754 + _tmp206;
  const Scalar _tmp1283 = -_tmp203 * _tmp744 + _tmp204 * _tmp746 + _tmp205 * _tmp748 + _tmp210;
  const Scalar _tmp1284 = _tmp1283 * _tmp783;
  const Scalar _tmp1285 = _tmp203 * _tmp734 - _tmp204 * _tmp737 + _tmp205 * _tmp740 + _tmp208;
  const Scalar _tmp1286 = _tmp1285 * _tmp781;
  const Scalar _tmp1287 = _tmp1282 * _tmp785 - _tmp1284 - _tmp1286;
  const Scalar _tmp1288 = _tmp1282 * _tmp703;
  const Scalar _tmp1289 = _tmp1285 * _tmp699;
  const Scalar _tmp1290 = -_tmp1283 * _tmp761 + _tmp1288 - _tmp1289;
  const Scalar _tmp1291 = 2 * std::fabs(_tmp1290);
  const Scalar _tmp1292 = std::max<Scalar>(_tmp1291, epsilon);
  const Scalar _tmp1293 = Scalar(1.0) / (_tmp1292);
  const Scalar _tmp1294 = _tmp1293 * views_1_calibration(0, 0);
  const Scalar _tmp1295 = -2 * _tmp1287 * _tmp1294 + _tmp214;
  const Scalar _tmp1296 = _tmp1282 * _tmp721;
  const Scalar _tmp1297 = 2 * _tmp1296;
  const Scalar _tmp1298 = _tmp1283 * _tmp716;
  const Scalar _tmp1299 = 2 * _tmp1298;
  const Scalar _tmp1300 = _tmp1285 * _tmp725;
  const Scalar _tmp1301 = -_tmp1297 - _tmp1299 + _tmp1300;
  const Scalar _tmp1302 = (((_tmp1290) > 0) - ((_tmp1290) < 0));
  const Scalar _tmp1303 = _tmp1302 *
                          ((((-_tmp1291 + epsilon) > 0) - ((-_tmp1291 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1292, Scalar(2));
  const Scalar _tmp1304 = _tmp1287 * _tmp1303;
  const Scalar _tmp1305 = _tmp1304 * views_1_calibration(0, 0);
  const Scalar _tmp1306 = _tmp1301 * _tmp1305;
  const Scalar _tmp1307 = -_tmp1285 * _tmp732 + _tmp1296 + _tmp1298;
  const Scalar _tmp1308 = _tmp1293 * views_1_calibration(1, 0);
  const Scalar _tmp1309 = 2 * _tmp1307 * _tmp1308 + _tmp217;
  const Scalar _tmp1310 = _tmp1303 * _tmp1307;
  const Scalar _tmp1311 = _tmp1310 * views_1_calibration(1, 0);
  const Scalar _tmp1312 = 2 * _tmp1288;
  const Scalar _tmp1313 = _tmp1283 * _tmp712;
  const Scalar _tmp1314 = 2 * _tmp1289;
  const Scalar _tmp1315 = _tmp1301 * _tmp1311 + _tmp1308 * (_tmp1312 - _tmp1313 - _tmp1314);
  const Scalar _tmp1316 = _tmp1295 * _tmp1306 - _tmp1309 * _tmp1315;
  const Scalar _tmp1317 = std::pow(_tmp1295, Scalar(2)) + std::pow(_tmp1309, Scalar(2)) + epsilon;
  const Scalar _tmp1318 = _tmp1317 * _tmp796 + 1;
  const Scalar _tmp1319 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1318, _tmp800) - 1)));
  const Scalar _tmp1320 = std::max<Scalar>(0, _tmp1302);
  const Scalar _tmp1321 = _tmp1319 * _tmp1320 * _tmp216;
  const Scalar _tmp1322 = _tmp1321 / (_tmp1317 * std::sqrt(_tmp1317));
  const Scalar _tmp1323 = _tmp1309 * _tmp1322;
  const Scalar _tmp1324 = std::pow(_tmp1317, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1325 =
      std::pow(_tmp1318, _tmp809) * _tmp1320 * _tmp1324 * _tmp168 * _tmp216 / _tmp1319;
  const Scalar _tmp1326 = _tmp1309 * _tmp1325;
  const Scalar _tmp1327 = _tmp1321 * _tmp1324;
  const Scalar _tmp1328 = _tmp1315 * _tmp1327 + _tmp1316 * _tmp1323 - _tmp1316 * _tmp1326;
  const Scalar _tmp1329 = -_tmp423 * _tmp744 + _tmp425 * _tmp748 + _tmp426 * _tmp746 + _tmp428;
  const Scalar _tmp1330 = _tmp1329 * _tmp783;
  const Scalar _tmp1331 = _tmp423 * _tmp752 - _tmp425 * _tmp754 - _tmp426 * _tmp756 + _tmp430;
  const Scalar _tmp1332 = _tmp423 * _tmp734 + _tmp424 + _tmp425 * _tmp740 - _tmp426 * _tmp737;
  const Scalar _tmp1333 = _tmp1332 * _tmp781;
  const Scalar _tmp1334 = _tmp1330 - _tmp1331 * _tmp785 + _tmp1333;
  const Scalar _tmp1335 = _tmp1331 * _tmp703;
  const Scalar _tmp1336 = _tmp1332 * _tmp699;
  const Scalar _tmp1337 = _tmp1329 * _tmp761 - _tmp1335 + _tmp1336;
  const Scalar _tmp1338 = 2 * std::fabs(_tmp1337);
  const Scalar _tmp1339 = std::max<Scalar>(_tmp1338, epsilon);
  const Scalar _tmp1340 = Scalar(1.0) / (_tmp1339);
  const Scalar _tmp1341 = _tmp1340 * views_1_calibration(0, 0);
  const Scalar _tmp1342 = 2 * _tmp1334 * _tmp1341 + _tmp434;
  const Scalar _tmp1343 = _tmp1329 * _tmp716;
  const Scalar _tmp1344 = _tmp1331 * _tmp721;
  const Scalar _tmp1345 = -_tmp1332 * _tmp732 + _tmp1343 + _tmp1344;
  const Scalar _tmp1346 = _tmp1340 * views_1_calibration(1, 0);
  const Scalar _tmp1347 = 2 * _tmp1345 * _tmp1346 + _tmp436;
  const Scalar _tmp1348 = std::pow(_tmp1342, Scalar(2)) + std::pow(_tmp1347, Scalar(2)) + epsilon;
  const Scalar _tmp1349 = std::pow(_tmp1348, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1350 = _tmp1348 * _tmp796 + 1;
  const Scalar _tmp1351 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1350, _tmp800) - 1)));
  const Scalar _tmp1352 = (((_tmp1337) > 0) - ((_tmp1337) < 0));
  const Scalar _tmp1353 = std::max<Scalar>(0, -_tmp1352);
  const Scalar _tmp1354 = _tmp1351 * _tmp1353 * _tmp439;
  const Scalar _tmp1355 = _tmp1349 * _tmp1354;
  const Scalar _tmp1356 = 2 * _tmp1343;
  const Scalar _tmp1357 = 2 * _tmp1344;
  const Scalar _tmp1358 = _tmp1332 * _tmp725;
  const Scalar _tmp1359 = -_tmp1356 - _tmp1357 + _tmp1358;
  const Scalar _tmp1360 = _tmp1352 * ((((_tmp1338 + _tmp37) > 0) - ((_tmp1338 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1339, Scalar(2));
  const Scalar _tmp1361 = _tmp1334 * _tmp1360;
  const Scalar _tmp1362 = _tmp1361 * views_1_calibration(0, 0);
  const Scalar _tmp1363 = _tmp1359 * _tmp1362;
  const Scalar _tmp1364 = _tmp1329 * _tmp712;
  const Scalar _tmp1365 = 2 * _tmp1335;
  const Scalar _tmp1366 = 2 * _tmp1336;
  const Scalar _tmp1367 = _tmp1345 * _tmp1360;
  const Scalar _tmp1368 = _tmp1367 * views_1_calibration(1, 0);
  const Scalar _tmp1369 = _tmp1346 * (-_tmp1364 + _tmp1365 - _tmp1366) + _tmp1359 * _tmp1368;
  const Scalar _tmp1370 = _tmp1342 * _tmp1363 + _tmp1347 * _tmp1369;
  const Scalar _tmp1371 = _tmp1354 / (_tmp1348 * std::sqrt(_tmp1348));
  const Scalar _tmp1372 = _tmp1342 * _tmp1371;
  const Scalar _tmp1373 =
      _tmp1349 * std::pow(_tmp1350, _tmp809) * _tmp1353 * _tmp168 * _tmp439 / _tmp1351;
  const Scalar _tmp1374 = _tmp1342 * _tmp1373;
  const Scalar _tmp1375 = _tmp1355 * _tmp1363 - _tmp1370 * _tmp1372 + _tmp1370 * _tmp1374;
  const Scalar _tmp1376 = _tmp936 * _tmp949;
  const Scalar _tmp1377 = _tmp936 * _tmp951;
  const Scalar _tmp1378 = _tmp1376 * _tmp948 - _tmp1377 * _tmp948 - _tmp944 * _tmp947;
  const Scalar _tmp1379 = _tmp1012 * _tmp1042;
  const Scalar _tmp1380 = _tmp1012 * _tmp1039;
  const Scalar _tmp1381 = -_tmp1023 * _tmp1044 + _tmp1033 * _tmp1379 - _tmp1033 * _tmp1380;
  const Scalar _tmp1382 = _tmp467 * _tmp752 - _tmp469 * _tmp756 - _tmp470 * _tmp754 + _tmp474;
  const Scalar _tmp1383 = -_tmp467 * _tmp744 + _tmp468 + _tmp469 * _tmp746 + _tmp470 * _tmp748;
  const Scalar _tmp1384 = _tmp1383 * _tmp783;
  const Scalar _tmp1385 = _tmp467 * _tmp734 - _tmp469 * _tmp737 + _tmp470 * _tmp740 + _tmp472;
  const Scalar _tmp1386 = _tmp1385 * _tmp781;
  const Scalar _tmp1387 = _tmp1382 * _tmp785 - _tmp1384 - _tmp1386;
  const Scalar _tmp1388 = _tmp1382 * _tmp703;
  const Scalar _tmp1389 = _tmp1385 * _tmp699;
  const Scalar _tmp1390 = -_tmp1383 * _tmp761 + _tmp1388 - _tmp1389;
  const Scalar _tmp1391 = 2 * std::fabs(_tmp1390);
  const Scalar _tmp1392 = std::max<Scalar>(_tmp1391, epsilon);
  const Scalar _tmp1393 = Scalar(1.0) / (_tmp1392);
  const Scalar _tmp1394 = _tmp1393 * views_1_calibration(0, 0);
  const Scalar _tmp1395 = -2 * _tmp1387 * _tmp1394 + _tmp478;
  const Scalar _tmp1396 = _tmp1382 * _tmp721;
  const Scalar _tmp1397 = 2 * _tmp1396;
  const Scalar _tmp1398 = _tmp1383 * _tmp716;
  const Scalar _tmp1399 = 2 * _tmp1398;
  const Scalar _tmp1400 = _tmp1385 * _tmp725;
  const Scalar _tmp1401 = -_tmp1397 - _tmp1399 + _tmp1400;
  const Scalar _tmp1402 = (((_tmp1390) > 0) - ((_tmp1390) < 0));
  const Scalar _tmp1403 = _tmp1402 * ((((_tmp1391 + _tmp37) > 0) - ((_tmp1391 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1392, Scalar(2));
  const Scalar _tmp1404 = _tmp1387 * _tmp1403;
  const Scalar _tmp1405 = _tmp1404 * views_1_calibration(0, 0);
  const Scalar _tmp1406 = _tmp1401 * _tmp1405;
  const Scalar _tmp1407 = -_tmp1385 * _tmp732 + _tmp1396 + _tmp1398;
  const Scalar _tmp1408 = _tmp1403 * _tmp1407;
  const Scalar _tmp1409 = _tmp1408 * views_1_calibration(1, 0);
  const Scalar _tmp1410 = 2 * _tmp1388;
  const Scalar _tmp1411 = _tmp1383 * _tmp712;
  const Scalar _tmp1412 = 2 * _tmp1389;
  const Scalar _tmp1413 = _tmp1393 * views_1_calibration(1, 0);
  const Scalar _tmp1414 = _tmp1401 * _tmp1409 - _tmp1413 * (_tmp1410 - _tmp1411 - _tmp1412);
  const Scalar _tmp1415 = 2 * _tmp1407 * _tmp1413 + _tmp481;
  const Scalar _tmp1416 = _tmp1395 * _tmp1406 - _tmp1414 * _tmp1415;
  const Scalar _tmp1417 = _tmp1395 * _tmp1416;
  const Scalar _tmp1418 = std::max<Scalar>(0, _tmp1402);
  const Scalar _tmp1419 = std::pow(_tmp1395, Scalar(2)) + std::pow(_tmp1415, Scalar(2)) + epsilon;
  const Scalar _tmp1420 = std::pow(_tmp1419, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1421 = _tmp1419 * _tmp796 + 1;
  const Scalar _tmp1422 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1421, _tmp800) - 1)));
  const Scalar _tmp1423 =
      _tmp1418 * _tmp1420 * std::pow(_tmp1421, _tmp809) * _tmp168 * _tmp480 / _tmp1422;
  const Scalar _tmp1424 = _tmp1418 * _tmp1422 * _tmp480;
  const Scalar _tmp1425 = _tmp1424 / (_tmp1419 * std::sqrt(_tmp1419));
  const Scalar _tmp1426 = _tmp1420 * _tmp1424;
  const Scalar _tmp1427 = _tmp1406 * _tmp1426 + _tmp1417 * _tmp1423 - _tmp1417 * _tmp1425;
  const Scalar _tmp1428 = -_tmp533 * _tmp744 + _tmp535 * _tmp748 + _tmp536 * _tmp746 + _tmp540;
  const Scalar _tmp1429 = _tmp1428 * _tmp716;
  const Scalar _tmp1430 = 2 * _tmp1429;
  const Scalar _tmp1431 = _tmp533 * _tmp752 + _tmp534 - _tmp535 * _tmp754 - _tmp536 * _tmp756;
  const Scalar _tmp1432 = _tmp1431 * _tmp721;
  const Scalar _tmp1433 = 2 * _tmp1432;
  const Scalar _tmp1434 = _tmp533 * _tmp734 + _tmp535 * _tmp740 - _tmp536 * _tmp737 + _tmp538;
  const Scalar _tmp1435 = _tmp1434 * _tmp725;
  const Scalar _tmp1436 = -_tmp1430 - _tmp1433 + _tmp1435;
  const Scalar _tmp1437 = _tmp1429 + _tmp1432 - _tmp1434 * _tmp732;
  const Scalar _tmp1438 = _tmp1431 * _tmp703;
  const Scalar _tmp1439 = _tmp1434 * _tmp699;
  const Scalar _tmp1440 = _tmp1428 * _tmp761 - _tmp1438 + _tmp1439;
  const Scalar _tmp1441 = 2 * std::fabs(_tmp1440);
  const Scalar _tmp1442 = (((_tmp1440) > 0) - ((_tmp1440) < 0));
  const Scalar _tmp1443 = std::max<Scalar>(_tmp1441, epsilon);
  const Scalar _tmp1444 = _tmp1442 *
                          ((((-_tmp1441 + epsilon) > 0) - ((-_tmp1441 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1443, Scalar(2));
  const Scalar _tmp1445 = _tmp1437 * _tmp1444;
  const Scalar _tmp1446 = _tmp1445 * views_1_calibration(1, 0);
  const Scalar _tmp1447 = _tmp1428 * _tmp712;
  const Scalar _tmp1448 = 2 * _tmp1438;
  const Scalar _tmp1449 = 2 * _tmp1439;
  const Scalar _tmp1450 = Scalar(1.0) / (_tmp1443);
  const Scalar _tmp1451 = _tmp1450 * views_1_calibration(1, 0);
  const Scalar _tmp1452 = _tmp1436 * _tmp1446 - _tmp1451 * (-_tmp1447 + _tmp1448 - _tmp1449);
  const Scalar _tmp1453 = 2 * _tmp1437 * _tmp1451 + _tmp547;
  const Scalar _tmp1454 = _tmp1428 * _tmp783;
  const Scalar _tmp1455 = _tmp1434 * _tmp781;
  const Scalar _tmp1456 = -_tmp1431 * _tmp785 + _tmp1454 + _tmp1455;
  const Scalar _tmp1457 = _tmp1450 * views_1_calibration(0, 0);
  const Scalar _tmp1458 = 2 * _tmp1456 * _tmp1457 + _tmp544;
  const Scalar _tmp1459 = _tmp1444 * _tmp1456;
  const Scalar _tmp1460 = _tmp1459 * views_1_calibration(0, 0);
  const Scalar _tmp1461 = _tmp1436 * _tmp1460;
  const Scalar _tmp1462 = _tmp1452 * _tmp1453 + _tmp1458 * _tmp1461;
  const Scalar _tmp1463 = std::pow(_tmp1453, Scalar(2)) + std::pow(_tmp1458, Scalar(2)) + epsilon;
  const Scalar _tmp1464 = _tmp1463 * _tmp796 + 1;
  const Scalar _tmp1465 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1464, _tmp800) - 1)));
  const Scalar _tmp1466 = std::max<Scalar>(0, -_tmp1442);
  const Scalar _tmp1467 = _tmp1465 * _tmp1466 * _tmp546;
  const Scalar _tmp1468 = _tmp1467 / (_tmp1463 * std::sqrt(_tmp1463));
  const Scalar _tmp1469 = _tmp1453 * _tmp1468;
  const Scalar _tmp1470 = std::pow(_tmp1463, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1471 = _tmp1467 * _tmp1470;
  const Scalar _tmp1472 =
      std::pow(_tmp1464, _tmp809) * _tmp1466 * _tmp1470 * _tmp168 * _tmp546 / _tmp1465;
  const Scalar _tmp1473 = _tmp1453 * _tmp1472;
  const Scalar _tmp1474 = -_tmp1452 * _tmp1471 + _tmp1462 * _tmp1469 - _tmp1462 * _tmp1473;
  const Scalar _tmp1475 =
      -_priors_0_1_target_T_src[0] * _tmp94 + _priors_0_1_target_T_src[1] * _tmp99 +
      _priors_0_1_target_T_src[2] * _tmp657 + _priors_0_1_target_T_src[3] * _tmp97;
  const Scalar _tmp1476 =
      _priors_0_1_target_T_src[0] * _tmp657 - _priors_0_1_target_T_src[1] * _tmp97 +
      _priors_0_1_target_T_src[2] * _tmp94 + _priors_0_1_target_T_src[3] * _tmp99;
  const Scalar _tmp1477 = _tmp1475 * _tmp1476;
  const Scalar _tmp1478 = _priors_0_1_target_T_src[0] * _tmp99 +
                          _priors_0_1_target_T_src[1] * _tmp94 +
                          _priors_0_1_target_T_src[2] * _tmp97;
  const Scalar _tmp1479 = -_priors_0_1_target_T_src[3] * _tmp657;
  const Scalar _tmp1480 =
      std::min<Scalar>(0, -(((_tmp1478 + _tmp1479) > 0) - ((_tmp1478 + _tmp1479) < 0))) +
      Scalar(1) / Scalar(2);
  const Scalar _tmp1481 = _tmp1478 + _tmp1479;
  const Scalar _tmp1482 = std::fabs(_tmp1481);
  const Scalar _tmp1483 = std::min<Scalar>(_tmp1482, _tmp665);
  const Scalar _tmp1484 = std::acos(_tmp1483);
  const Scalar _tmp1485 = std::pow(_tmp1483, Scalar(2)) - 1;
  const Scalar _tmp1486 = -_tmp1485;
  const Scalar _tmp1487 = ((((_tmp1482 + _tmp664) > 0) - ((_tmp1482 + _tmp664) < 0)) - 1) *
                          (((_tmp1481) > 0) - ((_tmp1481) < 0));
  const Scalar _tmp1488 = _tmp1483 * _tmp1484 * _tmp1487 / (_tmp1486 * std::sqrt(_tmp1486));
  const Scalar _tmp1489 = _tmp1480 * _tmp1488;
  const Scalar _tmp1490 = _tmp1477 * _tmp1489;
  const Scalar _tmp1491 = _tmp1487 / _tmp1485;
  const Scalar _tmp1492 = _tmp1480 * _tmp1491;
  const Scalar _tmp1493 = _tmp1477 * _tmp1492;
  const Scalar _tmp1494 = 2 * _tmp1484 / std::sqrt(_tmp1486);
  const Scalar _tmp1495 = _tmp1480 * _tmp1494;
  const Scalar _tmp1496 = _tmp1475 * _tmp1495;
  const Scalar _tmp1497 = _tmp1481 * _tmp1495;
  const Scalar _tmp1498 =
      -_priors_0_1_target_T_src[0] * _tmp97 - _priors_0_1_target_T_src[1] * _tmp657 +
      _priors_0_1_target_T_src[2] * _tmp99 - _priors_0_1_target_T_src[3] * _tmp94;
  const Scalar _tmp1499 = _tmp1476 * _tmp1498;
  const Scalar _tmp1500 = _tmp1492 * _tmp1499;
  const Scalar _tmp1501 = _tmp1495 * _tmp1498;
  const Scalar _tmp1502 = std::pow(_tmp1476, Scalar(2));
  const Scalar _tmp1503 = _tmp1492 * _tmp1502;
  const Scalar _tmp1504 = _tmp1489 * _tmp1499;
  const Scalar _tmp1505 = _tmp1489 * _tmp1502;
  const Scalar _tmp1506 =
      -_tmp1490 * priors_0_1_sqrt_info(5, 2) - _tmp1493 * priors_0_1_sqrt_info(5, 2) -
      _tmp1496 * priors_0_1_sqrt_info(5, 1) - _tmp1497 * priors_0_1_sqrt_info(5, 0) +
      _tmp1500 * priors_0_1_sqrt_info(5, 1) - _tmp1501 * priors_0_1_sqrt_info(5, 2) -
      _tmp1503 * priors_0_1_sqrt_info(5, 0) + _tmp1504 * priors_0_1_sqrt_info(5, 1) -
      _tmp1505 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp1507 = _tmp511 * _tmp734 - _tmp512 * _tmp737 + _tmp514 * _tmp740 + _tmp518;
  const Scalar _tmp1508 = _tmp1507 * _tmp725;
  const Scalar _tmp1509 = _tmp511 * _tmp752 - _tmp512 * _tmp756 + _tmp513 - _tmp514 * _tmp754;
  const Scalar _tmp1510 = _tmp1509 * _tmp721;
  const Scalar _tmp1511 = 2 * _tmp1510;
  const Scalar _tmp1512 = -_tmp511 * _tmp744 + _tmp512 * _tmp746 + _tmp514 * _tmp748 + _tmp516;
  const Scalar _tmp1513 = _tmp1512 * _tmp716;
  const Scalar _tmp1514 = 2 * _tmp1513;
  const Scalar _tmp1515 = _tmp1508 - _tmp1511 - _tmp1514;
  const Scalar _tmp1516 = _tmp1507 * _tmp732 - _tmp1510 - _tmp1513;
  const Scalar _tmp1517 = _tmp1507 * _tmp699;
  const Scalar _tmp1518 = _tmp1509 * _tmp703;
  const Scalar _tmp1519 = _tmp1512 * _tmp761 + _tmp1517 - _tmp1518;
  const Scalar _tmp1520 = 2 * std::fabs(_tmp1519);
  const Scalar _tmp1521 = std::max<Scalar>(_tmp1520, epsilon);
  const Scalar _tmp1522 = (((_tmp1519) > 0) - ((_tmp1519) < 0));
  const Scalar _tmp1523 = _tmp1522 * ((((_tmp1520 + _tmp37) > 0) - ((_tmp1520 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1521, Scalar(2));
  const Scalar _tmp1524 = _tmp1516 * _tmp1523;
  const Scalar _tmp1525 = _tmp1524 * views_1_calibration(1, 0);
  const Scalar _tmp1526 = 2 * _tmp1517;
  const Scalar _tmp1527 = 2 * _tmp1518;
  const Scalar _tmp1528 = _tmp1512 * _tmp712;
  const Scalar _tmp1529 = Scalar(1.0) / (_tmp1521);
  const Scalar _tmp1530 = _tmp1529 * views_1_calibration(1, 0);
  const Scalar _tmp1531 = _tmp1515 * _tmp1525 - _tmp1530 * (-_tmp1526 + _tmp1527 - _tmp1528);
  const Scalar _tmp1532 = _tmp1507 * _tmp781;
  const Scalar _tmp1533 = _tmp1512 * _tmp783;
  const Scalar _tmp1534 = -_tmp1509 * _tmp785 + _tmp1532 + _tmp1533;
  const Scalar _tmp1535 = _tmp1529 * views_1_calibration(0, 0);
  const Scalar _tmp1536 = 2 * _tmp1534 * _tmp1535 + _tmp522;
  const Scalar _tmp1537 = -2 * _tmp1516 * _tmp1530 + _tmp525;
  const Scalar _tmp1538 = std::pow(_tmp1536, Scalar(2)) + std::pow(_tmp1537, Scalar(2)) + epsilon;
  const Scalar _tmp1539 = std::pow(_tmp1538, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1540 = std::max<Scalar>(0, -_tmp1522);
  const Scalar _tmp1541 = _tmp1538 * _tmp796 + 1;
  const Scalar _tmp1542 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1541, _tmp800) - 1)));
  const Scalar _tmp1543 = _tmp1540 * _tmp1542 * _tmp524;
  const Scalar _tmp1544 = _tmp1539 * _tmp1543;
  const Scalar _tmp1545 = _tmp1523 * _tmp1534;
  const Scalar _tmp1546 = _tmp1545 * views_1_calibration(0, 0);
  const Scalar _tmp1547 = _tmp1515 * _tmp1546;
  const Scalar _tmp1548 = _tmp1531 * _tmp1537 - _tmp1536 * _tmp1547;
  const Scalar _tmp1549 =
      _tmp1539 * _tmp1540 * std::pow(_tmp1541, _tmp809) * _tmp168 * _tmp524 / _tmp1542;
  const Scalar _tmp1550 = _tmp1537 * _tmp1549;
  const Scalar _tmp1551 = _tmp1543 / (_tmp1538 * std::sqrt(_tmp1538));
  const Scalar _tmp1552 = _tmp1537 * _tmp1551;
  const Scalar _tmp1553 = _tmp1531 * _tmp1544 + _tmp1548 * _tmp1550 - _tmp1548 * _tmp1552;
  const Scalar _tmp1554 = _tmp225 * _tmp734 - _tmp226 * _tmp737 + _tmp227 * _tmp740 + _tmp232;
  const Scalar _tmp1555 = _tmp225 * _tmp752 - _tmp226 * _tmp756 - _tmp227 * _tmp754 + _tmp230;
  const Scalar _tmp1556 = _tmp1555 * _tmp721;
  const Scalar _tmp1557 = -_tmp225 * _tmp744 + _tmp226 * _tmp746 + _tmp227 * _tmp748 + _tmp228;
  const Scalar _tmp1558 = _tmp1557 * _tmp716;
  const Scalar _tmp1559 = _tmp1554 * _tmp732 - _tmp1556 - _tmp1558;
  const Scalar _tmp1560 = _tmp1554 * _tmp699;
  const Scalar _tmp1561 = _tmp1555 * _tmp703;
  const Scalar _tmp1562 = _tmp1557 * _tmp761 + _tmp1560 - _tmp1561;
  const Scalar _tmp1563 = 2 * std::fabs(_tmp1562);
  const Scalar _tmp1564 = std::max<Scalar>(_tmp1563, epsilon);
  const Scalar _tmp1565 = Scalar(1.0) / (_tmp1564);
  const Scalar _tmp1566 = _tmp1565 * views_1_calibration(1, 0);
  const Scalar _tmp1567 = -2 * _tmp1559 * _tmp1566 + _tmp239;
  const Scalar _tmp1568 = 2 * _tmp1560;
  const Scalar _tmp1569 = 2 * _tmp1561;
  const Scalar _tmp1570 = _tmp1557 * _tmp712;
  const Scalar _tmp1571 = _tmp1554 * _tmp725;
  const Scalar _tmp1572 = 2 * _tmp1556;
  const Scalar _tmp1573 = 2 * _tmp1558;
  const Scalar _tmp1574 = _tmp1571 - _tmp1572 - _tmp1573;
  const Scalar _tmp1575 = (((_tmp1562) > 0) - ((_tmp1562) < 0));
  const Scalar _tmp1576 = _tmp1575 *
                          ((((-_tmp1563 + epsilon) > 0) - ((-_tmp1563 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1564, Scalar(2));
  const Scalar _tmp1577 = _tmp1559 * _tmp1576;
  const Scalar _tmp1578 = _tmp1577 * views_1_calibration(1, 0);
  const Scalar _tmp1579 = _tmp1566 * (-_tmp1568 + _tmp1569 - _tmp1570) + _tmp1574 * _tmp1578;
  const Scalar _tmp1580 = _tmp1554 * _tmp781;
  const Scalar _tmp1581 = _tmp1557 * _tmp783;
  const Scalar _tmp1582 = -_tmp1555 * _tmp785 + _tmp1580 + _tmp1581;
  const Scalar _tmp1583 = _tmp1565 * views_1_calibration(0, 0);
  const Scalar _tmp1584 = 2 * _tmp1582 * _tmp1583 + _tmp236;
  const Scalar _tmp1585 = _tmp1576 * _tmp1582;
  const Scalar _tmp1586 = _tmp1585 * views_1_calibration(0, 0);
  const Scalar _tmp1587 = _tmp1574 * _tmp1586;
  const Scalar _tmp1588 = _tmp1567 * _tmp1579 - _tmp1584 * _tmp1587;
  const Scalar _tmp1589 = std::max<Scalar>(0, -_tmp1575);
  const Scalar _tmp1590 = std::pow(_tmp1567, Scalar(2)) + std::pow(_tmp1584, Scalar(2)) + epsilon;
  const Scalar _tmp1591 = std::pow(_tmp1590, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1592 = _tmp1590 * _tmp796 + 1;
  const Scalar _tmp1593 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1592, _tmp800) - 1)));
  const Scalar _tmp1594 =
      _tmp1589 * _tmp1591 * std::pow(_tmp1592, _tmp809) * _tmp168 * _tmp238 / _tmp1593;
  const Scalar _tmp1595 = _tmp1584 * _tmp1594;
  const Scalar _tmp1596 = _tmp1589 * _tmp1593 * _tmp238;
  const Scalar _tmp1597 = _tmp1596 / (_tmp1590 * std::sqrt(_tmp1590));
  const Scalar _tmp1598 = _tmp1584 * _tmp1597;
  const Scalar _tmp1599 = _tmp1591 * _tmp1596;
  const Scalar _tmp1600 = -_tmp1587 * _tmp1599 + _tmp1588 * _tmp1595 - _tmp1588 * _tmp1598;
  const Scalar _tmp1601 = _tmp1458 * _tmp1462;
  const Scalar _tmp1602 = _tmp1461 * _tmp1471 - _tmp1468 * _tmp1601 + _tmp1472 * _tmp1601;
  const Scalar _tmp1603 = -_tmp577 * _tmp744 + _tmp578 * _tmp746 + _tmp579 + _tmp580 * _tmp748;
  const Scalar _tmp1604 = _tmp1603 * _tmp716;
  const Scalar _tmp1605 = 2 * _tmp1604;
  const Scalar _tmp1606 = _tmp577 * _tmp752 - _tmp578 * _tmp756 - _tmp580 * _tmp754 + _tmp584;
  const Scalar _tmp1607 = _tmp1606 * _tmp721;
  const Scalar _tmp1608 = 2 * _tmp1607;
  const Scalar _tmp1609 = _tmp577 * _tmp734 - _tmp578 * _tmp737 + _tmp580 * _tmp740 + _tmp582;
  const Scalar _tmp1610 = _tmp1609 * _tmp725;
  const Scalar _tmp1611 = -_tmp1605 - _tmp1608 + _tmp1610;
  const Scalar _tmp1612 = _tmp1604 + _tmp1607 - _tmp1609 * _tmp732;
  const Scalar _tmp1613 = _tmp1606 * _tmp703;
  const Scalar _tmp1614 = _tmp1609 * _tmp699;
  const Scalar _tmp1615 = _tmp1603 * _tmp761 - _tmp1613 + _tmp1614;
  const Scalar _tmp1616 = 2 * std::fabs(_tmp1615);
  const Scalar _tmp1617 = (((_tmp1615) > 0) - ((_tmp1615) < 0));
  const Scalar _tmp1618 = std::max<Scalar>(_tmp1616, epsilon);
  const Scalar _tmp1619 = _tmp1617 * ((((_tmp1616 + _tmp37) > 0) - ((_tmp1616 + _tmp37) < 0)) + 1) /
                          std::pow(_tmp1618, Scalar(2));
  const Scalar _tmp1620 = _tmp1612 * _tmp1619;
  const Scalar _tmp1621 = _tmp1620 * views_1_calibration(1, 0);
  const Scalar _tmp1622 = _tmp1603 * _tmp712;
  const Scalar _tmp1623 = 2 * _tmp1613;
  const Scalar _tmp1624 = 2 * _tmp1614;
  const Scalar _tmp1625 = Scalar(1.0) / (_tmp1618);
  const Scalar _tmp1626 = _tmp1625 * views_1_calibration(1, 0);
  const Scalar _tmp1627 = _tmp1611 * _tmp1621 + _tmp1626 * (-_tmp1622 + _tmp1623 - _tmp1624);
  const Scalar _tmp1628 = _tmp1603 * _tmp783;
  const Scalar _tmp1629 = _tmp1609 * _tmp781;
  const Scalar _tmp1630 = -_tmp1606 * _tmp785 + _tmp1628 + _tmp1629;
  const Scalar _tmp1631 = _tmp1625 * views_1_calibration(0, 0);
  const Scalar _tmp1632 = 2 * _tmp1630 * _tmp1631 + _tmp588;
  const Scalar _tmp1633 = 2 * _tmp1612 * _tmp1626 + _tmp591;
  const Scalar _tmp1634 = std::pow(_tmp1632, Scalar(2)) + std::pow(_tmp1633, Scalar(2)) + epsilon;
  const Scalar _tmp1635 = std::pow(_tmp1634, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1636 = std::max<Scalar>(0, -_tmp1617);
  const Scalar _tmp1637 = _tmp1634 * _tmp796 + 1;
  const Scalar _tmp1638 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1637, _tmp800) - 1)));
  const Scalar _tmp1639 = _tmp1636 * _tmp1638 * _tmp590;
  const Scalar _tmp1640 = _tmp1635 * _tmp1639;
  const Scalar _tmp1641 = _tmp1619 * _tmp1630;
  const Scalar _tmp1642 = _tmp1641 * views_1_calibration(0, 0);
  const Scalar _tmp1643 = _tmp1611 * _tmp1642;
  const Scalar _tmp1644 = _tmp1627 * _tmp1633 + _tmp1632 * _tmp1643;
  const Scalar _tmp1645 =
      _tmp1635 * _tmp1636 * std::pow(_tmp1637, _tmp809) * _tmp168 * _tmp590 / _tmp1638;
  const Scalar _tmp1646 = _tmp1633 * _tmp1645;
  const Scalar _tmp1647 = _tmp1639 / (_tmp1634 * std::sqrt(_tmp1634));
  const Scalar _tmp1648 = _tmp1633 * _tmp1647;
  const Scalar _tmp1649 = _tmp1627 * _tmp1640 + _tmp1644 * _tmp1646 - _tmp1644 * _tmp1648;
  const Scalar _tmp1650 =
      -_tmp1490 * priors_0_1_sqrt_info(4, 2) - _tmp1493 * priors_0_1_sqrt_info(4, 2) -
      _tmp1496 * priors_0_1_sqrt_info(4, 1) - _tmp1497 * priors_0_1_sqrt_info(4, 0) +
      _tmp1500 * priors_0_1_sqrt_info(4, 1) - _tmp1501 * priors_0_1_sqrt_info(4, 2) -
      _tmp1503 * priors_0_1_sqrt_info(4, 0) + _tmp1504 * priors_0_1_sqrt_info(4, 1) -
      _tmp1505 * priors_0_1_sqrt_info(4, 0);
  const Scalar _tmp1651 = _tmp1567 * _tmp1594;
  const Scalar _tmp1652 = _tmp1567 * _tmp1597;
  const Scalar _tmp1653 = _tmp1579 * _tmp1599 + _tmp1588 * _tmp1651 - _tmp1588 * _tmp1652;
  const Scalar _tmp1654 = _tmp1268 * _tmp1278;
  const Scalar _tmp1655 = _tmp1268 * _tmp1275;
  const Scalar _tmp1656 = _tmp1267 * _tmp1280 + _tmp1269 * _tmp1654 - _tmp1269 * _tmp1655;
  const Scalar _tmp1657 = _tmp247 * _tmp752 - _tmp248 * _tmp754 - _tmp249 * _tmp756 + _tmp252;
  const Scalar _tmp1658 = _tmp1657 * _tmp721;
  const Scalar _tmp1659 = _tmp247 * _tmp734 + _tmp248 * _tmp740 - _tmp249 * _tmp737 + _tmp250;
  const Scalar _tmp1660 = -_tmp247 * _tmp744 + _tmp248 * _tmp748 + _tmp249 * _tmp746 + _tmp254;
  const Scalar _tmp1661 = _tmp1660 * _tmp716;
  const Scalar _tmp1662 = _tmp1658 - _tmp1659 * _tmp732 + _tmp1661;
  const Scalar _tmp1663 = _tmp1657 * _tmp703;
  const Scalar _tmp1664 = _tmp1659 * _tmp699;
  const Scalar _tmp1665 = -_tmp1660 * _tmp761 + _tmp1663 - _tmp1664;
  const Scalar _tmp1666 = 2 * std::fabs(_tmp1665);
  const Scalar _tmp1667 = std::max<Scalar>(_tmp1666, epsilon);
  const Scalar _tmp1668 = Scalar(1.0) / (_tmp1667);
  const Scalar _tmp1669 = _tmp1668 * views_1_calibration(1, 0);
  const Scalar _tmp1670 = 2 * _tmp1662 * _tmp1669 + _tmp261;
  const Scalar _tmp1671 = _tmp1659 * _tmp781;
  const Scalar _tmp1672 = _tmp1660 * _tmp783;
  const Scalar _tmp1673 = _tmp1657 * _tmp785 - _tmp1671 - _tmp1672;
  const Scalar _tmp1674 = _tmp1668 * views_1_calibration(0, 0);
  const Scalar _tmp1675 = -2 * _tmp1673 * _tmp1674 + _tmp258;
  const Scalar _tmp1676 = std::pow(_tmp1670, Scalar(2)) + std::pow(_tmp1675, Scalar(2)) + epsilon;
  const Scalar _tmp1677 = std::pow(_tmp1676, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1678 = _tmp1676 * _tmp796 + 1;
  const Scalar _tmp1679 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1678, _tmp800) - 1)));
  const Scalar _tmp1680 = (((_tmp1665) > 0) - ((_tmp1665) < 0));
  const Scalar _tmp1681 = std::max<Scalar>(0, _tmp1680);
  const Scalar _tmp1682 = _tmp1679 * _tmp1681 * _tmp260;
  const Scalar _tmp1683 = _tmp1677 * _tmp1682;
  const Scalar _tmp1684 = 2 * _tmp1658;
  const Scalar _tmp1685 = _tmp1659 * _tmp725;
  const Scalar _tmp1686 = 2 * _tmp1661;
  const Scalar _tmp1687 = -_tmp1684 + _tmp1685 - _tmp1686;
  const Scalar _tmp1688 = _tmp1680 *
                          ((((-_tmp1666 + epsilon) > 0) - ((-_tmp1666 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1667, Scalar(2));
  const Scalar _tmp1689 = _tmp1673 * _tmp1688;
  const Scalar _tmp1690 = _tmp1689 * views_1_calibration(0, 0);
  const Scalar _tmp1691 = _tmp1687 * _tmp1690;
  const Scalar _tmp1692 = 2 * _tmp1663;
  const Scalar _tmp1693 = 2 * _tmp1664;
  const Scalar _tmp1694 = _tmp1660 * _tmp712;
  const Scalar _tmp1695 = _tmp1662 * _tmp1688;
  const Scalar _tmp1696 = _tmp1695 * views_1_calibration(1, 0);
  const Scalar _tmp1697 = _tmp1669 * (_tmp1692 - _tmp1693 - _tmp1694) + _tmp1687 * _tmp1696;
  const Scalar _tmp1698 = -_tmp1670 * _tmp1697 + _tmp1675 * _tmp1691;
  const Scalar _tmp1699 =
      _tmp1677 * std::pow(_tmp1678, _tmp809) * _tmp168 * _tmp1681 * _tmp260 / _tmp1679;
  const Scalar _tmp1700 = _tmp1675 * _tmp1699;
  const Scalar _tmp1701 = _tmp1682 / (_tmp1676 * std::sqrt(_tmp1676));
  const Scalar _tmp1702 = _tmp1675 * _tmp1701;
  const Scalar _tmp1703 = _tmp1683 * _tmp1691 + _tmp1698 * _tmp1700 - _tmp1698 * _tmp1702;
  const Scalar _tmp1704 = _tmp682 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1705 =
      -_tmp1234 * priors_1_0_sqrt_info(4, 2) + _tmp1704 * _tmp687 + _tmp1704 * _tmp692 +
      _tmp677 * priors_1_0_sqrt_info(4, 1) - _tmp690 * priors_1_0_sqrt_info(4, 1) -
      _tmp693 * priors_1_0_sqrt_info(4, 1) + _tmp695 * priors_1_0_sqrt_info(4, 0) -
      _tmp698 * priors_1_0_sqrt_info(4, 2) + _tmp715 * priors_1_0_sqrt_info(4, 4) +
      _tmp728 * priors_1_0_sqrt_info(4, 5) - _tmp729 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp1706 = _tmp1076 * _tmp1090;
  const Scalar _tmp1707 = _tmp1076 * _tmp1086;
  const Scalar _tmp1708 = -_tmp1079 * _tmp1089 + _tmp1080 * _tmp1706 - _tmp1080 * _tmp1707;
  const Scalar _tmp1709 =
      -_tmp1490 * priors_0_1_sqrt_info(3, 2) - _tmp1493 * priors_0_1_sqrt_info(3, 2) -
      _tmp1496 * priors_0_1_sqrt_info(3, 1) - _tmp1497 * priors_0_1_sqrt_info(3, 0) +
      _tmp1500 * priors_0_1_sqrt_info(3, 1) - _tmp1501 * priors_0_1_sqrt_info(3, 2) -
      _tmp1503 * priors_0_1_sqrt_info(3, 0) + _tmp1504 * priors_0_1_sqrt_info(3, 1) -
      _tmp1505 * priors_0_1_sqrt_info(3, 0);
  const Scalar _tmp1710 = _tmp1415 * _tmp1423;
  const Scalar _tmp1711 = _tmp1415 * _tmp1425;
  const Scalar _tmp1712 = -_tmp1414 * _tmp1426 + _tmp1416 * _tmp1710 - _tmp1416 * _tmp1711;
  const Scalar _tmp1713 = _tmp682 * priors_1_0_sqrt_info(2, 0);
  const Scalar _tmp1714 =
      -_tmp1234 * priors_1_0_sqrt_info(2, 2) + _tmp1713 * _tmp687 + _tmp1713 * _tmp692 +
      _tmp677 * priors_1_0_sqrt_info(2, 1) - _tmp690 * priors_1_0_sqrt_info(2, 1) -
      _tmp693 * priors_1_0_sqrt_info(2, 1) + _tmp695 * priors_1_0_sqrt_info(2, 0) -
      _tmp698 * priors_1_0_sqrt_info(2, 2) + _tmp715 * priors_1_0_sqrt_info(2, 4) +
      _tmp728 * priors_1_0_sqrt_info(2, 5) - _tmp729 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp1715 = _tmp1632 * _tmp1645;
  const Scalar _tmp1716 = _tmp1632 * _tmp1647;
  const Scalar _tmp1717 = _tmp1640 * _tmp1643 + _tmp1644 * _tmp1715 - _tmp1644 * _tmp1716;
  const Scalar _tmp1718 =
      -_tmp1490 * priors_0_1_sqrt_info(1, 2) - _tmp1493 * priors_0_1_sqrt_info(1, 2) -
      _tmp1496 * priors_0_1_sqrt_info(1, 1) - _tmp1497 * priors_0_1_sqrt_info(1, 0) +
      _tmp1500 * priors_0_1_sqrt_info(1, 1) - _tmp1501 * priors_0_1_sqrt_info(1, 2) -
      _tmp1503 * priors_0_1_sqrt_info(1, 0) + _tmp1504 * priors_0_1_sqrt_info(1, 1) -
      _tmp1505 * priors_0_1_sqrt_info(1, 0);
  const Scalar _tmp1719 = _tmp1200 * _tmp1230;
  const Scalar _tmp1720 = _tmp1200 * _tmp1227;
  const Scalar _tmp1721 = _tmp1211 * _tmp1232 + _tmp1221 * _tmp1719 - _tmp1221 * _tmp1720;
  const Scalar _tmp1722 = _tmp1347 * _tmp1373;
  const Scalar _tmp1723 = _tmp1347 * _tmp1371;
  const Scalar _tmp1724 = _tmp1355 * _tmp1369 + _tmp1370 * _tmp1722 - _tmp1370 * _tmp1723;
  const Scalar _tmp1725 = _tmp1536 * _tmp1549;
  const Scalar _tmp1726 = _tmp1536 * _tmp1551;
  const Scalar _tmp1727 = _tmp1544 * _tmp1547 - _tmp1548 * _tmp1725 + _tmp1548 * _tmp1726;
  const Scalar _tmp1728 = _tmp873 * _tmp900;
  const Scalar _tmp1729 = _tmp873 * _tmp897;
  const Scalar _tmp1730 = _tmp1728 * _tmp891 - _tmp1729 * _tmp891 - _tmp884 * _tmp902;
  const Scalar _tmp1731 = _tmp1106 * _tmp1136;
  const Scalar _tmp1732 = _tmp1106 * _tmp1133;
  const Scalar _tmp1733 = _tmp1118 * _tmp1138 + _tmp1127 * _tmp1731 - _tmp1127 * _tmp1732;
  const Scalar _tmp1734 = _tmp1173 * _tmp1183;
  const Scalar _tmp1735 = _tmp1173 * _tmp1180;
  const Scalar _tmp1736 = _tmp1172 * _tmp1185 + _tmp1174 * _tmp1734 - _tmp1174 * _tmp1735;
  const Scalar _tmp1737 = _tmp788 * _tmp805;
  const Scalar _tmp1738 = _tmp788 * _tmp810;
  const Scalar _tmp1739 = _tmp1737 * _tmp792 - _tmp1738 * _tmp792 + _tmp791 * _tmp808;
  const Scalar _tmp1740 = _tmp1295 * _tmp1325;
  const Scalar _tmp1741 = _tmp1295 * _tmp1322;
  const Scalar _tmp1742 = _tmp1306 * _tmp1327 + _tmp1316 * _tmp1740 - _tmp1316 * _tmp1741;
  const Scalar _tmp1743 =
      -_tmp1490 * priors_0_1_sqrt_info(2, 2) - _tmp1493 * priors_0_1_sqrt_info(2, 2) -
      _tmp1496 * priors_0_1_sqrt_info(2, 1) - _tmp1497 * priors_0_1_sqrt_info(2, 0) +
      _tmp1500 * priors_0_1_sqrt_info(2, 1) - _tmp1501 * priors_0_1_sqrt_info(2, 2) -
      _tmp1503 * priors_0_1_sqrt_info(2, 0) + _tmp1504 * priors_0_1_sqrt_info(2, 1) -
      _tmp1505 * priors_0_1_sqrt_info(2, 0);
  const Scalar _tmp1744 = _tmp697 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp1745 = _tmp682 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp1746 =
      -_tmp1234 * priors_1_0_sqrt_info(3, 2) + _tmp1236 * priors_1_0_sqrt_info(3, 0) -
      _tmp1744 * _tmp687 + _tmp1745 * _tmp687 + _tmp677 * priors_1_0_sqrt_info(3, 1) -
      _tmp690 * priors_1_0_sqrt_info(3, 1) - _tmp693 * priors_1_0_sqrt_info(3, 1) +
      _tmp695 * priors_1_0_sqrt_info(3, 0) - _tmp698 * priors_1_0_sqrt_info(3, 2) +
      _tmp715 * priors_1_0_sqrt_info(3, 4) + _tmp728 * priors_1_0_sqrt_info(3, 5);
  const Scalar _tmp1747 =
      -_tmp1234 * priors_1_0_sqrt_info(0, 2) + _tmp1235 * priors_1_0_sqrt_info(0, 0) +
      _tmp1236 * priors_1_0_sqrt_info(0, 0) + _tmp677 * priors_1_0_sqrt_info(0, 1) -
      _tmp690 * priors_1_0_sqrt_info(0, 1) - _tmp693 * priors_1_0_sqrt_info(0, 1) +
      _tmp695 * priors_1_0_sqrt_info(0, 0) - _tmp698 * priors_1_0_sqrt_info(0, 2) +
      _tmp715 * priors_1_0_sqrt_info(0, 4) + _tmp728 * priors_1_0_sqrt_info(0, 5) -
      _tmp729 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp1748 = _tmp291 * _tmp752 - _tmp292 * _tmp754 - _tmp293 * _tmp756 + _tmp294;
  const Scalar _tmp1749 = _tmp291 * _tmp734 + _tmp292 * _tmp740 - _tmp293 * _tmp737 + _tmp298;
  const Scalar _tmp1750 = _tmp1749 * _tmp781;
  const Scalar _tmp1751 = -_tmp291 * _tmp744 + _tmp292 * _tmp748 + _tmp293 * _tmp746 + _tmp296;
  const Scalar _tmp1752 = _tmp1751 * _tmp783;
  const Scalar _tmp1753 = _tmp1748 * _tmp785 - _tmp1750 - _tmp1752;
  const Scalar _tmp1754 = _tmp1748 * _tmp703;
  const Scalar _tmp1755 = _tmp1749 * _tmp699;
  const Scalar _tmp1756 = -_tmp1751 * _tmp761 + _tmp1754 - _tmp1755;
  const Scalar _tmp1757 = 2 * std::fabs(_tmp1756);
  const Scalar _tmp1758 = std::max<Scalar>(_tmp1757, epsilon);
  const Scalar _tmp1759 = Scalar(1.0) / (_tmp1758);
  const Scalar _tmp1760 = _tmp1759 * views_1_calibration(0, 0);
  const Scalar _tmp1761 = -2 * _tmp1753 * _tmp1760 + _tmp302;
  const Scalar _tmp1762 = _tmp1748 * _tmp721;
  const Scalar _tmp1763 = 2 * _tmp1762;
  const Scalar _tmp1764 = _tmp1749 * _tmp725;
  const Scalar _tmp1765 = _tmp1751 * _tmp716;
  const Scalar _tmp1766 = 2 * _tmp1765;
  const Scalar _tmp1767 = -_tmp1763 + _tmp1764 - _tmp1766;
  const Scalar _tmp1768 = (((_tmp1756) > 0) - ((_tmp1756) < 0));
  const Scalar _tmp1769 = _tmp1768 *
                          ((((-_tmp1757 + epsilon) > 0) - ((-_tmp1757 + epsilon) < 0)) - 1) /
                          std::pow(_tmp1758, Scalar(2));
  const Scalar _tmp1770 = _tmp1753 * _tmp1769;
  const Scalar _tmp1771 = _tmp1770 * views_1_calibration(0, 0);
  const Scalar _tmp1772 = _tmp1767 * _tmp1771;
  const Scalar _tmp1773 = -_tmp1749 * _tmp732 + _tmp1762 + _tmp1765;
  const Scalar _tmp1774 = _tmp1769 * _tmp1773;
  const Scalar _tmp1775 = _tmp1774 * views_1_calibration(1, 0);
  const Scalar _tmp1776 = 2 * _tmp1754;
  const Scalar _tmp1777 = 2 * _tmp1755;
  const Scalar _tmp1778 = _tmp1751 * _tmp712;
  const Scalar _tmp1779 = _tmp1759 * views_1_calibration(1, 0);
  const Scalar _tmp1780 = _tmp1767 * _tmp1775 + _tmp1779 * (_tmp1776 - _tmp1777 - _tmp1778);
  const Scalar _tmp1781 = 2 * _tmp1773 * _tmp1779 + _tmp305;
  const Scalar _tmp1782 = _tmp1761 * _tmp1772 - _tmp1780 * _tmp1781;
  const Scalar _tmp1783 = std::pow(_tmp1761, Scalar(2)) + std::pow(_tmp1781, Scalar(2)) + epsilon;
  const Scalar _tmp1784 = _tmp1783 * _tmp796 + 1;
  const Scalar _tmp1785 = std::sqrt(Scalar(_tmp801 * (std::pow(_tmp1784, _tmp800) - 1)));
  const Scalar _tmp1786 = std::max<Scalar>(0, _tmp1768);
  const Scalar _tmp1787 = _tmp1785 * _tmp1786 * _tmp304;
  const Scalar _tmp1788 = _tmp1787 / (_tmp1783 * std::sqrt(_tmp1783));
  const Scalar _tmp1789 = _tmp1781 * _tmp1788;
  const Scalar _tmp1790 = std::pow(_tmp1783, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp1791 = _tmp1787 * _tmp1790;
  const Scalar _tmp1792 =
      _tmp168 * std::pow(_tmp1784, _tmp809) * _tmp1786 * _tmp1790 * _tmp304 / _tmp1785;
  const Scalar _tmp1793 = _tmp1781 * _tmp1792;
  const Scalar _tmp1794 = _tmp1780 * _tmp1791 + _tmp1782 * _tmp1789 - _tmp1782 * _tmp1793;
  const Scalar _tmp1795 = _tmp972 * _tmp993;
  const Scalar _tmp1796 = _tmp972 * _tmp995;
  const Scalar _tmp1797 = _tmp1795 * _tmp992 - _tmp1796 * _tmp992 - _tmp980 * _tmp991;
  const Scalar _tmp1798 = _tmp1670 * _tmp1701;
  const Scalar _tmp1799 = _tmp1670 * _tmp1699;
  const Scalar _tmp1800 = _tmp1683 * _tmp1697 + _tmp1698 * _tmp1798 - _tmp1698 * _tmp1799;
  const Scalar _tmp1801 = _tmp1480 * priors_0_1_sqrt_info(0, 2);
  const Scalar _tmp1802 = _tmp1488 * _tmp1801;
  const Scalar _tmp1803 = _tmp1498 * _tmp1801;
  const Scalar _tmp1804 = _tmp1495 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1805 = _tmp1491 * _tmp1801;
  const Scalar _tmp1806 =
      -_tmp1477 * _tmp1802 - _tmp1477 * _tmp1805 - _tmp1481 * _tmp1804 - _tmp1494 * _tmp1803 -
      _tmp1496 * priors_0_1_sqrt_info(0, 1) + _tmp1500 * priors_0_1_sqrt_info(0, 1) -
      _tmp1503 * priors_0_1_sqrt_info(0, 0) + _tmp1504 * priors_0_1_sqrt_info(0, 1) -
      _tmp1505 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp1807 = _tmp1761 * _tmp1792;
  const Scalar _tmp1808 = _tmp1761 * _tmp1788;
  const Scalar _tmp1809 = _tmp1772 * _tmp1791 + _tmp1782 * _tmp1807 - _tmp1782 * _tmp1808;
  const Scalar _tmp1810 = 2 * _tmp1141;
  const Scalar _tmp1811 = 2 * _tmp1143;
  const Scalar _tmp1812 = _tmp708 + _tmp710 + _tmp724;
  const Scalar _tmp1813 = _tmp1144 * _tmp1812;
  const Scalar _tmp1814 = _tmp1810 + _tmp1811 + _tmp1813;
  const Scalar _tmp1815 = _tmp1152 * (_tmp1165 + _tmp1166 - _tmp1167) - _tmp1163 * _tmp1814;
  const Scalar _tmp1816 = _tmp1171 * _tmp1814;
  const Scalar _tmp1817 = _tmp1153 * _tmp1815 + _tmp1173 * _tmp1816;
  const Scalar _tmp1818 = _tmp1180 * _tmp1817;
  const Scalar _tmp1819 = _tmp1153 * _tmp1818 - _tmp1184 * _tmp1817 + _tmp1185 * _tmp1815;
  const Scalar _tmp1820 = _tmp1476 * _tmp1495;
  const Scalar _tmp1821 = _tmp1475 * _tmp1498;
  const Scalar _tmp1822 = _tmp1492 * _tmp1821;
  const Scalar _tmp1823 = std::pow(_tmp1498, Scalar(2));
  const Scalar _tmp1824 = _tmp1489 * _tmp1823;
  const Scalar _tmp1825 = _tmp1489 * _tmp1821;
  const Scalar _tmp1826 = _tmp1492 * _tmp1823;
  const Scalar _tmp1827 =
      _tmp1496 * priors_0_1_sqrt_info(2, 0) - _tmp1497 * priors_0_1_sqrt_info(2, 1) +
      _tmp1500 * priors_0_1_sqrt_info(2, 0) + _tmp1504 * priors_0_1_sqrt_info(2, 0) -
      _tmp1820 * priors_0_1_sqrt_info(2, 2) + _tmp1822 * priors_0_1_sqrt_info(2, 2) -
      _tmp1824 * priors_0_1_sqrt_info(2, 1) + _tmp1825 * priors_0_1_sqrt_info(2, 2) -
      _tmp1826 * priors_0_1_sqrt_info(2, 1);
  const Scalar _tmp1828 = 2 * _tmp782;
  const Scalar _tmp1829 = 2 * _tmp784;
  const Scalar _tmp1830 = _tmp1812 * _tmp757;
  const Scalar _tmp1831 = _tmp1828 + _tmp1829 + _tmp1830;
  const Scalar _tmp1832 = _tmp1831 * _tmp779;
  const Scalar _tmp1833 = -_tmp1831 * _tmp790 + _tmp787 * (_tmp769 + _tmp770 - _tmp771);
  const Scalar _tmp1834 = _tmp1832 * _tmp768 + _tmp1833 * _tmp788;
  const Scalar _tmp1835 = _tmp1832 * _tmp808 - _tmp1834 * _tmp806 + _tmp1834 * _tmp811;
  const Scalar _tmp1836 = _tmp116 - _tmp117;
  const Scalar _tmp1837 = _tmp115 + _tmp1836 + _tmp658;
  const Scalar _tmp1838 = _tmp1837 * _tmp691;
  const Scalar _tmp1839 = _tmp1838 * _tmp689;
  const Scalar _tmp1840 = _tmp123 + _tmp680 + _tmp684;
  const Scalar _tmp1841 = _tmp1840 * _tmp676;
  const Scalar _tmp1842 = _tmp1837 * _tmp697;
  const Scalar _tmp1843 = _tmp1842 * _tmp686;
  const Scalar _tmp1844 = _tmp676 * (_tmp101 + _tmp674 + _tmp95);
  const Scalar _tmp1845 = _tmp1837 * _tmp686;
  const Scalar _tmp1846 = _tmp701 - _tmp702 + _tmp705 - _tmp707 - _tmp713 + _tmp714;
  const Scalar _tmp1847 = _tmp717 * _tmp783;
  const Scalar _tmp1848 = _tmp719 * _tmp783;
  const Scalar _tmp1849 = 2 * _tmp781;
  const Scalar _tmp1850 = _tmp1849 * _views_0_pose[5];
  const Scalar _tmp1851 = _tmp1849 * _views_1_pose[5];
  const Scalar _tmp1852 = _tmp1812 * _views_1_pose[4];
  const Scalar _tmp1853 = _tmp1812 * _views_0_pose[4];
  const Scalar _tmp1854 = _tmp1847 - _tmp1848 + _tmp1850 - _tmp1851 - _tmp1852 + _tmp1853;
  const Scalar _tmp1855 = _tmp1845 * _tmp689;
  const Scalar _tmp1856 = _tmp676 * (_tmp105 + _tmp661 + _tmp694);
  const Scalar _tmp1857 = _tmp1842 * _tmp691;
  const Scalar _tmp1858 = _tmp1838 * _tmp682;
  const Scalar _tmp1859 =
      -_tmp1704 * _tmp1845 + _tmp1839 * priors_1_0_sqrt_info(4, 1) -
      _tmp1841 * priors_1_0_sqrt_info(4, 2) + _tmp1843 * priors_1_0_sqrt_info(4, 2) -
      _tmp1844 * priors_1_0_sqrt_info(4, 0) + _tmp1846 * priors_1_0_sqrt_info(4, 3) +
      _tmp1854 * priors_1_0_sqrt_info(4, 5) + _tmp1855 * priors_1_0_sqrt_info(4, 1) +
      _tmp1856 * priors_1_0_sqrt_info(4, 1) + _tmp1857 * priors_1_0_sqrt_info(4, 2) -
      _tmp1858 * priors_1_0_sqrt_info(4, 0);
  const Scalar _tmp1860 = _tmp1173 * _tmp1818 + _tmp1185 * _tmp1816 - _tmp1734 * _tmp1817;
  const Scalar _tmp1861 = 2 * _tmp1532;
  const Scalar _tmp1862 = _tmp1509 * _tmp1812;
  const Scalar _tmp1863 = 2 * _tmp1533;
  const Scalar _tmp1864 = _tmp1861 + _tmp1862 + _tmp1863;
  const Scalar _tmp1865 = _tmp1535 * (_tmp1526 - _tmp1527 + _tmp1528) + _tmp1546 * _tmp1864;
  const Scalar _tmp1866 = _tmp1525 * _tmp1864;
  const Scalar _tmp1867 = _tmp1536 * _tmp1865 - _tmp1537 * _tmp1866;
  const Scalar _tmp1868 = -_tmp1544 * _tmp1866 + _tmp1550 * _tmp1867 - _tmp1552 * _tmp1867;
  const Scalar _tmp1869 = _tmp1657 * _tmp1812;
  const Scalar _tmp1870 = 2 * _tmp1671;
  const Scalar _tmp1871 = 2 * _tmp1672;
  const Scalar _tmp1872 = _tmp1869 + _tmp1870 + _tmp1871;
  const Scalar _tmp1873 = -_tmp1674 * (-_tmp1692 + _tmp1693 + _tmp1694) + _tmp1690 * _tmp1872;
  const Scalar _tmp1874 = _tmp1696 * _tmp1872;
  const Scalar _tmp1875 = -_tmp1670 * _tmp1874 + _tmp1675 * _tmp1873;
  const Scalar _tmp1876 = _tmp1683 * _tmp1873 + _tmp1700 * _tmp1875 - _tmp1702 * _tmp1875;
  const Scalar _tmp1877 = 2 * _tmp1072;
  const Scalar _tmp1878 = _tmp1047 * _tmp1812;
  const Scalar _tmp1879 = 2 * _tmp1073;
  const Scalar _tmp1880 = _tmp1065 * (_tmp1877 + _tmp1878 + _tmp1879);
  const Scalar _tmp1881 = _tmp1075 * (_tmp1068 - _tmp1069 + _tmp1070) - _tmp1077 * _tmp1880;
  const Scalar _tmp1882 = _tmp1051 * _tmp1880 * views_1_calibration(1, 0);
  const Scalar _tmp1883 = _tmp1059 * _tmp1882 + _tmp1076 * _tmp1881;
  const Scalar _tmp1884 = _tmp1090 * _tmp1883;
  const Scalar _tmp1885 = -_tmp1076 * _tmp1884 - _tmp1089 * _tmp1881 + _tmp1707 * _tmp1883;
  const Scalar _tmp1886 = _tmp1683 * _tmp1874 + _tmp1798 * _tmp1875 - _tmp1799 * _tmp1875;
  const Scalar _tmp1887 = _tmp1282 * _tmp1812;
  const Scalar _tmp1888 = 2 * _tmp1284;
  const Scalar _tmp1889 = 2 * _tmp1286;
  const Scalar _tmp1890 = _tmp1887 + _tmp1888 + _tmp1889;
  const Scalar _tmp1891 = -_tmp1294 * (-_tmp1312 + _tmp1313 + _tmp1314) + _tmp1305 * _tmp1890;
  const Scalar _tmp1892 = _tmp1311 * _tmp1890;
  const Scalar _tmp1893 = _tmp1295 * _tmp1891 - _tmp1309 * _tmp1892;
  const Scalar _tmp1894 = _tmp1327 * _tmp1891 + _tmp1740 * _tmp1893 - _tmp1741 * _tmp1893;
  const Scalar _tmp1895 = _tmp1845 * _tmp682;
  const Scalar _tmp1896 =
      _tmp1839 * priors_1_0_sqrt_info(1, 1) - _tmp1841 * priors_1_0_sqrt_info(1, 2) +
      _tmp1843 * priors_1_0_sqrt_info(1, 2) - _tmp1844 * priors_1_0_sqrt_info(1, 0) +
      _tmp1846 * priors_1_0_sqrt_info(1, 3) + _tmp1854 * priors_1_0_sqrt_info(1, 5) +
      _tmp1855 * priors_1_0_sqrt_info(1, 1) + _tmp1856 * priors_1_0_sqrt_info(1, 1) +
      _tmp1857 * priors_1_0_sqrt_info(1, 2) - _tmp1858 * priors_1_0_sqrt_info(1, 0) -
      _tmp1895 * priors_1_0_sqrt_info(1, 0);
  const Scalar _tmp1897 =
      _tmp1496 * priors_0_1_sqrt_info(4, 0) - _tmp1497 * priors_0_1_sqrt_info(4, 1) +
      _tmp1500 * priors_0_1_sqrt_info(4, 0) + _tmp1504 * priors_0_1_sqrt_info(4, 0) -
      _tmp1820 * priors_0_1_sqrt_info(4, 2) + _tmp1822 * priors_0_1_sqrt_info(4, 2) -
      _tmp1824 * priors_0_1_sqrt_info(4, 1) + _tmp1825 * priors_0_1_sqrt_info(4, 2) -
      _tmp1826 * priors_0_1_sqrt_info(4, 1);
  const Scalar _tmp1898 = 2 * _tmp814;
  const Scalar _tmp1899 = 2 * _tmp816;
  const Scalar _tmp1900 = _tmp1812 * _tmp817;
  const Scalar _tmp1901 = _tmp1898 + _tmp1899 + _tmp1900;
  const Scalar _tmp1902 = -_tmp1901 * _tmp836 + _tmp825 * (_tmp841 + _tmp842 - _tmp843);
  const Scalar _tmp1903 = _tmp1901 * _tmp840;
  const Scalar _tmp1904 = _tmp1902 * _tmp826 - _tmp1903 * _tmp846;
  const Scalar _tmp1905 = _tmp1903 * _tmp858 + _tmp1904 * _tmp904 - _tmp1904 * _tmp905;
  const Scalar _tmp1906 = _tmp1748 * _tmp1812;
  const Scalar _tmp1907 = 2 * _tmp1750;
  const Scalar _tmp1908 = 2 * _tmp1752;
  const Scalar _tmp1909 = _tmp1906 + _tmp1907 + _tmp1908;
  const Scalar _tmp1910 = _tmp1760 * (-_tmp1776 + _tmp1777 + _tmp1778) - _tmp1771 * _tmp1909;
  const Scalar _tmp1911 = _tmp1775 * _tmp1909;
  const Scalar _tmp1912 = _tmp1761 * _tmp1910 + _tmp1781 * _tmp1911;
  const Scalar _tmp1913 = -_tmp1789 * _tmp1912 + _tmp1791 * _tmp1911 + _tmp1793 * _tmp1912;
  const Scalar _tmp1914 = 2 * _tmp1454;
  const Scalar _tmp1915 = _tmp1431 * _tmp1812;
  const Scalar _tmp1916 = 2 * _tmp1455;
  const Scalar _tmp1917 = _tmp1914 + _tmp1915 + _tmp1916;
  const Scalar _tmp1918 = -_tmp1457 * (_tmp1447 - _tmp1448 + _tmp1449) + _tmp1460 * _tmp1917;
  const Scalar _tmp1919 = _tmp1446 * _tmp1917;
  const Scalar _tmp1920 = _tmp1453 * _tmp1919 + _tmp1458 * _tmp1918;
  const Scalar _tmp1921 = _tmp1458 * _tmp1472;
  const Scalar _tmp1922 = _tmp1458 * _tmp1468;
  const Scalar _tmp1923 = _tmp1471 * _tmp1918 + _tmp1920 * _tmp1921 - _tmp1920 * _tmp1922;
  const Scalar _tmp1924 = 2 * _tmp885;
  const Scalar _tmp1925 = _tmp1812 * _tmp861;
  const Scalar _tmp1926 = 2 * _tmp886;
  const Scalar _tmp1927 = _tmp1924 + _tmp1925 + _tmp1926;
  const Scalar _tmp1928 = _tmp881 * _tmp887;
  const Scalar _tmp1929 = _tmp1928 * views_1_calibration(0, 0);
  const Scalar _tmp1930 = _tmp1927 * _tmp1929 + _tmp888 * (_tmp874 - _tmp875 + _tmp876);
  const Scalar _tmp1931 = _tmp881 * _tmp883;
  const Scalar _tmp1932 = _tmp1927 * _tmp1931;
  const Scalar _tmp1933 = _tmp1930 * _tmp889 - _tmp1932 * _tmp873;
  const Scalar _tmp1934 = -_tmp1930 * _tmp902 - _tmp1933 * _tmp898 + _tmp1933 * _tmp901;
  const Scalar _tmp1935 = 2 * _tmp1239;
  const Scalar _tmp1936 = 2 * _tmp1241;
  const Scalar _tmp1937 = _tmp1242 * _tmp1812;
  const Scalar _tmp1938 = _tmp1935 + _tmp1936 + _tmp1937;
  const Scalar _tmp1939 = _tmp1258 * _tmp1266;
  const Scalar _tmp1940 = _tmp1938 * _tmp1939;
  const Scalar _tmp1941 = _tmp1243 * _tmp1258;
  const Scalar _tmp1942 = _tmp1941 * views_1_calibration(0, 0);
  const Scalar _tmp1943 = _tmp1250 * (_tmp1261 + _tmp1262 - _tmp1263) + _tmp1938 * _tmp1942;
  const Scalar _tmp1944 = _tmp1251 * _tmp1943 + _tmp1268 * _tmp1940;
  const Scalar _tmp1945 = _tmp1280 * _tmp1940 + _tmp1654 * _tmp1944 - _tmp1655 * _tmp1944;
  const Scalar _tmp1946 = _tmp1834 * _tmp788;
  const Scalar _tmp1947 = _tmp1833 * _tmp808 - _tmp1946 * _tmp805 + _tmp1946 * _tmp810;
  const Scalar _tmp1948 = -_tmp1276 * _tmp1944 + _tmp1279 * _tmp1944 + _tmp1280 * _tmp1943;
  const Scalar _tmp1949 = 2 * _tmp1000;
  const Scalar _tmp1950 = _tmp1001 * _tmp1812;
  const Scalar _tmp1951 = 2 * _tmp1003;
  const Scalar _tmp1952 = _tmp1949 + _tmp1950 + _tmp1951;
  const Scalar _tmp1953 = _tmp1028 * _tmp1952;
  const Scalar _tmp1954 = _tmp1011 * (_tmp1029 - _tmp1030 + _tmp1031) + _tmp1022 * _tmp1952;
  const Scalar _tmp1955 = -_tmp1012 * _tmp1954 + _tmp1026 * _tmp1953;
  const Scalar _tmp1956 = -_tmp1040 * _tmp1955 + _tmp1043 * _tmp1955 - _tmp1044 * _tmp1953;
  const Scalar _tmp1957 = _tmp1382 * _tmp1812;
  const Scalar _tmp1958 = 2 * _tmp1384;
  const Scalar _tmp1959 = 2 * _tmp1386;
  const Scalar _tmp1960 = _tmp1957 + _tmp1958 + _tmp1959;
  const Scalar _tmp1961 = _tmp1394 * (-_tmp1410 + _tmp1411 + _tmp1412) + _tmp1405 * _tmp1960;
  const Scalar _tmp1962 = _tmp1409 * _tmp1960;
  const Scalar _tmp1963 = _tmp1395 * _tmp1961 - _tmp1415 * _tmp1962;
  const Scalar _tmp1964 = _tmp1395 * _tmp1423;
  const Scalar _tmp1965 = _tmp1395 * _tmp1425;
  const Scalar _tmp1966 = _tmp1426 * _tmp1961 + _tmp1963 * _tmp1964 - _tmp1963 * _tmp1965;
  const Scalar _tmp1967 = _tmp1728 * _tmp1933 - _tmp1729 * _tmp1933 + _tmp1932 * _tmp902;
  const Scalar _tmp1968 = 2 * _tmp1628;
  const Scalar _tmp1969 = _tmp1606 * _tmp1812;
  const Scalar _tmp1970 = 2 * _tmp1629;
  const Scalar _tmp1971 = _tmp1968 + _tmp1969 + _tmp1970;
  const Scalar _tmp1972 = _tmp1621 * _tmp1971;
  const Scalar _tmp1973 = _tmp1631 * (_tmp1622 - _tmp1623 + _tmp1624) + _tmp1642 * _tmp1971;
  const Scalar _tmp1974 = _tmp1632 * _tmp1973 + _tmp1633 * _tmp1972;
  const Scalar _tmp1975 = _tmp1640 * _tmp1972 + _tmp1646 * _tmp1974 - _tmp1648 * _tmp1974;
  const Scalar _tmp1976 = 2 * _tmp1580;
  const Scalar _tmp1977 = _tmp1555 * _tmp1812;
  const Scalar _tmp1978 = 2 * _tmp1581;
  const Scalar _tmp1979 = _tmp1976 + _tmp1977 + _tmp1978;
  const Scalar _tmp1980 = _tmp1578 * _tmp1979;
  const Scalar _tmp1981 = _tmp1583 * (_tmp1568 - _tmp1569 + _tmp1570) - _tmp1586 * _tmp1979;
  const Scalar _tmp1982 = _tmp1567 * _tmp1980 + _tmp1584 * _tmp1981;
  const Scalar _tmp1983 = -_tmp1599 * _tmp1980 - _tmp1651 * _tmp1982 + _tmp1652 * _tmp1982;
  const Scalar _tmp1984 = _tmp1059 * _tmp1884 - _tmp1087 * _tmp1883 + _tmp1089 * _tmp1882;
  const Scalar _tmp1985 = _tmp1812 * _tmp907;
  const Scalar _tmp1986 = 2 * _tmp932;
  const Scalar _tmp1987 = 2 * _tmp933;
  const Scalar _tmp1988 = _tmp1985 + _tmp1986 + _tmp1987;
  const Scalar _tmp1989 = -_tmp1988 * _tmp946 + _tmp935 * (-_tmp909 + _tmp911 + _tmp914);
  const Scalar _tmp1990 = _tmp1988 * _tmp930;
  const Scalar _tmp1991 = _tmp1989 * _tmp936 + _tmp1990 * _tmp937;
  const Scalar _tmp1992 = _tmp1376 * _tmp1991 - _tmp1377 * _tmp1991 - _tmp1989 * _tmp944;
  const Scalar _tmp1993 =
      _tmp1496 * priors_0_1_sqrt_info(1, 0) - _tmp1497 * priors_0_1_sqrt_info(1, 1) +
      _tmp1500 * priors_0_1_sqrt_info(1, 0) + _tmp1504 * priors_0_1_sqrt_info(1, 0) -
      _tmp1820 * priors_0_1_sqrt_info(1, 2) + _tmp1822 * priors_0_1_sqrt_info(1, 2) -
      _tmp1824 * priors_0_1_sqrt_info(1, 1) + _tmp1825 * priors_0_1_sqrt_info(1, 2) -
      _tmp1826 * priors_0_1_sqrt_info(1, 1);
  const Scalar _tmp1994 = 2 * _tmp1330;
  const Scalar _tmp1995 = _tmp1331 * _tmp1812;
  const Scalar _tmp1996 = 2 * _tmp1333;
  const Scalar _tmp1997 = _tmp1994 + _tmp1995 + _tmp1996;
  const Scalar _tmp1998 = _tmp1341 * (_tmp1364 - _tmp1365 + _tmp1366) + _tmp1362 * _tmp1997;
  const Scalar _tmp1999 = _tmp1368 * _tmp1997;
  const Scalar _tmp2000 = _tmp1342 * _tmp1998 + _tmp1347 * _tmp1999;
  const Scalar _tmp2001 = -_tmp1355 * _tmp1998 + _tmp1372 * _tmp2000 - _tmp1374 * _tmp2000;
  const Scalar _tmp2002 = _tmp1761 * _tmp1912;
  const Scalar _tmp2003 = -_tmp1788 * _tmp2002 + _tmp1791 * _tmp1910 + _tmp1792 * _tmp2002;
  const Scalar _tmp2004 = 2 * _tmp1119;
  const Scalar _tmp2005 = 2 * _tmp1120;
  const Scalar _tmp2006 = _tmp1096 * _tmp1812;
  const Scalar _tmp2007 = _tmp1115 * (_tmp2004 + _tmp2005 + _tmp2006);
  const Scalar _tmp2008 = _tmp1122 * (_tmp1107 + _tmp1108 - _tmp1109) + _tmp1124 * _tmp2007;
  const Scalar _tmp2009 = _tmp1098 * _tmp2007 * views_1_calibration(1, 0);
  const Scalar _tmp2010 = _tmp1106 * _tmp2009 + _tmp1123 * _tmp2008;
  const Scalar _tmp2011 = -_tmp1134 * _tmp2010 + _tmp1137 * _tmp2010 + _tmp1138 * _tmp2008;
  const Scalar _tmp2012 = _tmp1492 * priors_0_1_sqrt_info(5, 0);
  const Scalar _tmp2013 =
      _tmp1496 * priors_0_1_sqrt_info(5, 0) - _tmp1497 * priors_0_1_sqrt_info(5, 1) +
      _tmp1499 * _tmp2012 + _tmp1504 * priors_0_1_sqrt_info(5, 0) -
      _tmp1820 * priors_0_1_sqrt_info(5, 2) + _tmp1822 * priors_0_1_sqrt_info(5, 2) -
      _tmp1824 * priors_0_1_sqrt_info(5, 1) + _tmp1825 * priors_0_1_sqrt_info(5, 2) -
      _tmp1826 * priors_0_1_sqrt_info(5, 1);
  const Scalar _tmp2014 =
      _tmp1496 * priors_0_1_sqrt_info(3, 0) - _tmp1497 * priors_0_1_sqrt_info(3, 1) +
      _tmp1500 * priors_0_1_sqrt_info(3, 0) + _tmp1504 * priors_0_1_sqrt_info(3, 0) -
      _tmp1820 * priors_0_1_sqrt_info(3, 2) + _tmp1822 * priors_0_1_sqrt_info(3, 2) -
      _tmp1824 * priors_0_1_sqrt_info(3, 1) + _tmp1825 * priors_0_1_sqrt_info(3, 2) -
      _tmp1826 * priors_0_1_sqrt_info(3, 1);
  const Scalar _tmp2015 = _tmp1544 * _tmp1865 + _tmp1725 * _tmp1867 - _tmp1726 * _tmp1867;
  const Scalar _tmp2016 = 2 * _tmp1188;
  const Scalar _tmp2017 = _tmp1191 * _tmp1812;
  const Scalar _tmp2018 = 2 * _tmp1190;
  const Scalar _tmp2019 = _tmp2016 + _tmp2017 + _tmp2018;
  const Scalar _tmp2020 = _tmp1218 * _tmp2019;
  const Scalar _tmp2021 = _tmp1199 * (_tmp1212 - _tmp1213 + _tmp1214) - _tmp1210 * _tmp2019;
  const Scalar _tmp2022 = _tmp1200 * _tmp2021 + _tmp1220 * _tmp2020;
  const Scalar _tmp2023 = _tmp1228 * _tmp2022 - _tmp1231 * _tmp2022 - _tmp1232 * _tmp2020;
  const Scalar _tmp2024 = -_tmp1640 * _tmp1973 - _tmp1715 * _tmp1974 + _tmp1716 * _tmp1974;
  const Scalar _tmp2025 = -_tmp1426 * _tmp1962 + _tmp1710 * _tmp1963 - _tmp1711 * _tmp1963;
  const Scalar _tmp2026 = 2 * _tmp955;
  const Scalar _tmp2027 = 2 * _tmp957;
  const Scalar _tmp2028 = _tmp1812 * _tmp958;
  const Scalar _tmp2029 = _tmp2026 + _tmp2027 + _tmp2028;
  const Scalar _tmp2030 = _tmp959 * _tmp984;
  const Scalar _tmp2031 = _tmp2030 * views_1_calibration(0, 0);
  const Scalar _tmp2032 = -_tmp2029 * _tmp2031 + _tmp966 * (_tmp987 + _tmp988 - _tmp989);
  const Scalar _tmp2033 = _tmp984 * _tmp990;
  const Scalar _tmp2034 = _tmp2029 * _tmp2033;
  const Scalar _tmp2035 = _tmp2032 * _tmp967 - _tmp2034 * _tmp972;
  const Scalar _tmp2036 = _tmp2032 * _tmp980 + _tmp2035 * _tmp994 - _tmp2035 * _tmp996;
  const Scalar _tmp2037 = _tmp1475 * _tmp1803;
  const Scalar _tmp2038 = _tmp1492 * priors_0_1_sqrt_info(0, 0);
  const Scalar _tmp2039 = _tmp1494 * _tmp1801;
  const Scalar _tmp2040 = _tmp1475 * _tmp1804 - _tmp1476 * _tmp2039 + _tmp1488 * _tmp2037 +
                          _tmp1491 * _tmp2037 - _tmp1497 * priors_0_1_sqrt_info(0, 1) +
                          _tmp1499 * _tmp2038 + _tmp1504 * priors_0_1_sqrt_info(0, 0) -
                          _tmp1824 * priors_0_1_sqrt_info(0, 1) -
                          _tmp1826 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp2041 = _tmp1795 * _tmp2035 - _tmp1796 * _tmp2035 - _tmp2034 * _tmp980;
  const Scalar _tmp2042 =
      _tmp1839 * priors_1_0_sqrt_info(0, 1) - _tmp1841 * priors_1_0_sqrt_info(0, 2) +
      _tmp1843 * priors_1_0_sqrt_info(0, 2) - _tmp1844 * priors_1_0_sqrt_info(0, 0) +
      _tmp1846 * priors_1_0_sqrt_info(0, 3) + _tmp1854 * priors_1_0_sqrt_info(0, 5) +
      _tmp1855 * priors_1_0_sqrt_info(0, 1) + _tmp1856 * priors_1_0_sqrt_info(0, 1) +
      _tmp1857 * priors_1_0_sqrt_info(0, 2) - _tmp1858 * priors_1_0_sqrt_info(0, 0) -
      _tmp1895 * priors_1_0_sqrt_info(0, 0);
  const Scalar _tmp2043 =
      -_tmp1713 * _tmp1838 - _tmp1713 * _tmp1845 + _tmp1839 * priors_1_0_sqrt_info(2, 1) -
      _tmp1841 * priors_1_0_sqrt_info(2, 2) + _tmp1843 * priors_1_0_sqrt_info(2, 2) -
      _tmp1844 * priors_1_0_sqrt_info(2, 0) + _tmp1846 * priors_1_0_sqrt_info(2, 3) +
      _tmp1854 * priors_1_0_sqrt_info(2, 5) + _tmp1855 * priors_1_0_sqrt_info(2, 1) +
      _tmp1856 * priors_1_0_sqrt_info(2, 1) + _tmp1857 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp2044 = _tmp1138 * _tmp2009 + _tmp1731 * _tmp2010 - _tmp1732 * _tmp2010;
  const Scalar _tmp2045 = _tmp1309 * _tmp1893;
  const Scalar _tmp2046 = -_tmp1322 * _tmp2045 + _tmp1325 * _tmp2045 - _tmp1327 * _tmp1892;
  const Scalar _tmp2047 =
      -_tmp1745 * _tmp1845 + _tmp1839 * priors_1_0_sqrt_info(3, 1) -
      _tmp1841 * priors_1_0_sqrt_info(3, 2) + _tmp1843 * priors_1_0_sqrt_info(3, 2) -
      _tmp1844 * priors_1_0_sqrt_info(3, 0) + _tmp1846 * priors_1_0_sqrt_info(3, 3) +
      _tmp1854 * priors_1_0_sqrt_info(3, 5) + _tmp1855 * priors_1_0_sqrt_info(3, 1) +
      _tmp1856 * priors_1_0_sqrt_info(3, 1) + _tmp1857 * priors_1_0_sqrt_info(3, 2) -
      _tmp1858 * priors_1_0_sqrt_info(3, 0);
  const Scalar _tmp2048 = -_tmp1902 * _tmp858 + _tmp1904 * _tmp854 - _tmp1904 * _tmp857;
  const Scalar _tmp2049 = -_tmp1232 * _tmp2021 - _tmp1719 * _tmp2022 + _tmp1720 * _tmp2022;
  const Scalar _tmp2050 = _tmp1990 * _tmp944 - _tmp1991 * _tmp950 + _tmp1991 * _tmp952;
  const Scalar _tmp2051 = -_tmp1469 * _tmp1920 + _tmp1471 * _tmp1919 + _tmp1473 * _tmp1920;
  const Scalar _tmp2052 = _tmp1355 * _tmp1999 + _tmp1722 * _tmp2000 - _tmp1723 * _tmp2000;
  const Scalar _tmp2053 = _tmp1842 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp2054 =
      -_tmp1838 * _tmp683 + _tmp1839 * priors_1_0_sqrt_info(5, 1) - _tmp1840 * _tmp673 -
      _tmp1844 * priors_1_0_sqrt_info(5, 0) - _tmp1845 * _tmp683 +
      _tmp1846 * priors_1_0_sqrt_info(5, 3) + _tmp1854 * priors_1_0_sqrt_info(5, 5) +
      _tmp1855 * priors_1_0_sqrt_info(5, 1) + _tmp1856 * priors_1_0_sqrt_info(5, 1) +
      _tmp2053 * _tmp686 + _tmp2053 * _tmp691;
  const Scalar _tmp2055 = _tmp1595 * _tmp1982 - _tmp1598 * _tmp1982 + _tmp1599 * _tmp1981;
  const Scalar _tmp2056 = -_tmp1044 * _tmp1954 - _tmp1379 * _tmp1955 + _tmp1380 * _tmp1955;
  const Scalar _tmp2057 = _tmp1075 * (-_tmp1060 + _tmp1061 + _tmp1062);
  const Scalar _tmp2058 = _tmp1058 * (-_tmp1877 - _tmp1878 - _tmp1879);
  const Scalar _tmp2059 = _tmp1059 * _tmp2058 + _tmp1076 * _tmp2057;
  const Scalar _tmp2060 = _tmp1089 * _tmp2057 + _tmp1706 * _tmp2059 - _tmp1707 * _tmp2059;
  const Scalar _tmp2061 = std::pow(_tmp1475, Scalar(2));
  const Scalar _tmp2062 =
      -_tmp1477 * _tmp2038 - _tmp1481 * _tmp2039 - _tmp1490 * priors_0_1_sqrt_info(0, 0) +
      _tmp1498 * _tmp1804 - _tmp1802 * _tmp2061 - _tmp1805 * _tmp2061 +
      _tmp1820 * priors_0_1_sqrt_info(0, 1) + _tmp1822 * priors_0_1_sqrt_info(0, 1) +
      _tmp1825 * priors_0_1_sqrt_info(0, 1);
  const Scalar _tmp2063 = _tmp1451 * (-_tmp1914 - _tmp1915 - _tmp1916);
  const Scalar _tmp2064 = _tmp1457 * (_tmp1430 + _tmp1433 - _tmp1435);
  const Scalar _tmp2065 = _tmp1453 * _tmp2063 + _tmp1458 * _tmp2064;
  const Scalar _tmp2066 = -_tmp1469 * _tmp2065 + _tmp1471 * _tmp2063 + _tmp1473 * _tmp2065;
  const Scalar _tmp2067 = _tmp1264 * (-_tmp1935 - _tmp1936 - _tmp1937);
  const Scalar _tmp2068 = _tmp1250 * (_tmp1253 - _tmp1254 + _tmp1256);
  const Scalar _tmp2069 = _tmp1251 * _tmp2068 + _tmp1268 * _tmp2067;
  const Scalar _tmp2070 = _tmp1280 * _tmp2067 + _tmp1654 * _tmp2069 - _tmp1655 * _tmp2069;
  const Scalar _tmp2071 = _tmp1674 * (_tmp1684 - _tmp1685 + _tmp1686);
  const Scalar _tmp2072 = _tmp1669 * (-_tmp1869 - _tmp1870 - _tmp1871);
  const Scalar _tmp2073 = _tmp1670 * _tmp2072 + _tmp1675 * _tmp2071;
  const Scalar _tmp2074 = _tmp1683 * _tmp2071 + _tmp1700 * _tmp2073 - _tmp1702 * _tmp2073;
  const Scalar _tmp2075 = _tmp1122 * (_tmp1110 - _tmp1111 + _tmp1112);
  const Scalar _tmp2076 = _tmp1105 * (-_tmp2004 - _tmp2005 - _tmp2006);
  const Scalar _tmp2077 = _tmp1106 * _tmp2076 + _tmp1123 * _tmp2075;
  const Scalar _tmp2078 = -_tmp1134 * _tmp2077 + _tmp1137 * _tmp2077 + _tmp1138 * _tmp2075;
  const Scalar _tmp2079 = _tmp676 * (_tmp114 + _tmp1836 + _tmp688);
  const Scalar _tmp2080 = _tmp675 + _tmp696 + _tmp95;
  const Scalar _tmp2081 = _tmp2080 * _tmp691;
  const Scalar _tmp2082 = _tmp2081 * _tmp689;
  const Scalar _tmp2083 = _tmp2080 * _tmp686;
  const Scalar _tmp2084 = _tmp2083 * _tmp682;
  const Scalar _tmp2085 = _tmp676 * (_tmp122 + _tmp125 + _tmp678);
  const Scalar _tmp2086 = _tmp2081 * _tmp682;
  const Scalar _tmp2087 = _tmp2081 * _tmp697;
  const Scalar _tmp2088 = _tmp2083 * _tmp689;
  const Scalar _tmp2089 = -_tmp1847 + _tmp1848 - _tmp1850 + _tmp1851 + _tmp1852 - _tmp1853;
  const Scalar _tmp2090 = _tmp718 - _tmp720 - _tmp722 + _tmp723 + _tmp726 - _tmp727;
  const Scalar _tmp2091 = _tmp672 * (_tmp103 + _tmp108 + _tmp660);
  const Scalar _tmp2092 = 2 * _tmp2091;
  const Scalar _tmp2093 =
      -_tmp1744 * _tmp2083 - _tmp2079 * priors_1_0_sqrt_info(3, 0) -
      _tmp2082 * priors_1_0_sqrt_info(3, 1) + _tmp2084 * priors_1_0_sqrt_info(3, 0) -
      _tmp2085 * priors_1_0_sqrt_info(3, 1) + _tmp2086 * priors_1_0_sqrt_info(3, 0) -
      _tmp2087 * priors_1_0_sqrt_info(3, 2) - _tmp2088 * priors_1_0_sqrt_info(3, 1) +
      _tmp2089 * priors_1_0_sqrt_info(3, 4) + _tmp2090 * priors_1_0_sqrt_info(3, 3) -
      _tmp2092 * priors_1_0_sqrt_info(3, 2);
  const Scalar _tmp2094 = _tmp1631 * (_tmp1605 + _tmp1608 - _tmp1610);
  const Scalar _tmp2095 = _tmp1626 * (-_tmp1968 - _tmp1969 - _tmp1970);
  const Scalar _tmp2096 = _tmp1632 * _tmp2094 + _tmp1633 * _tmp2095;
  const Scalar _tmp2097 = -_tmp1640 * _tmp2095 - _tmp1646 * _tmp2096 + _tmp1648 * _tmp2096;
  const Scalar _tmp2098 = _tmp1106 * _tmp2077;
  const Scalar _tmp2099 = -_tmp1133 * _tmp2098 + _tmp1136 * _tmp2098 + _tmp1138 * _tmp2076;
  const Scalar _tmp2100 = _tmp1152 * (-_tmp1154 + _tmp1156 + _tmp1158);
  const Scalar _tmp2101 = _tmp1168 * (-_tmp1810 - _tmp1811 - _tmp1813);
  const Scalar _tmp2102 = _tmp1153 * _tmp2100 + _tmp1173 * _tmp2101;
  const Scalar _tmp2103 = _tmp1185 * _tmp2101 - _tmp1734 * _tmp2102 + _tmp1735 * _tmp2102;
  const Scalar _tmp2104 = _tmp844 * (-_tmp1898 - _tmp1899 - _tmp1900);
  const Scalar _tmp2105 = _tmp825 * (_tmp828 - _tmp829 + _tmp831);
  const Scalar _tmp2106 = _tmp2104 * _tmp846 + _tmp2105 * _tmp826;
  const Scalar _tmp2107 = _tmp2106 * _tmp826;
  const Scalar _tmp2108 = _tmp2105 * _tmp858 - _tmp2107 * _tmp853 + _tmp2107 * _tmp856;
  const Scalar _tmp2109 = _tmp1492 * _tmp2061;
  const Scalar _tmp2110 = _tmp1489 * _tmp2061;
  const Scalar _tmp2111 =
      -_tmp1490 * priors_0_1_sqrt_info(3, 0) - _tmp1493 * priors_0_1_sqrt_info(3, 0) -
      _tmp1497 * priors_0_1_sqrt_info(3, 2) + _tmp1501 * priors_0_1_sqrt_info(3, 0) +
      _tmp1820 * priors_0_1_sqrt_info(3, 1) + _tmp1822 * priors_0_1_sqrt_info(3, 1) +
      _tmp1825 * priors_0_1_sqrt_info(3, 1) - _tmp2109 * priors_0_1_sqrt_info(3, 2) -
      _tmp2110 * priors_0_1_sqrt_info(3, 2);
  const Scalar _tmp2112 = _tmp2083 * _tmp697;
  const Scalar _tmp2113 =
      _tmp1704 * _tmp2083 - _tmp2079 * priors_1_0_sqrt_info(4, 0) -
      _tmp2082 * priors_1_0_sqrt_info(4, 1) - _tmp2085 * priors_1_0_sqrt_info(4, 1) +
      _tmp2086 * priors_1_0_sqrt_info(4, 0) - _tmp2087 * priors_1_0_sqrt_info(4, 2) -
      _tmp2088 * priors_1_0_sqrt_info(4, 1) + _tmp2089 * priors_1_0_sqrt_info(4, 4) +
      _tmp2090 * priors_1_0_sqrt_info(4, 3) - _tmp2092 * priors_1_0_sqrt_info(4, 2) -
      _tmp2112 * priors_1_0_sqrt_info(4, 2);
  const Scalar _tmp2114 = _tmp1583 * (-_tmp1571 + _tmp1572 + _tmp1573);
  const Scalar _tmp2115 = _tmp1566 * (-_tmp1976 - _tmp1977 - _tmp1978);
  const Scalar _tmp2116 = _tmp1567 * _tmp2115 + _tmp1584 * _tmp2114;
  const Scalar _tmp2117 = _tmp1597 * _tmp2116;
  const Scalar _tmp2118 = -_tmp1567 * _tmp2117 + _tmp1599 * _tmp2115 + _tmp1651 * _tmp2116;
  const Scalar _tmp2119 = -_tmp2104 * _tmp858 + _tmp2106 * _tmp904 - _tmp2106 * _tmp905;
  const Scalar _tmp2120 = _tmp1011 * (-_tmp1013 + _tmp1015 + _tmp1017);
  const Scalar _tmp2121 = _tmp1025 * (-_tmp1949 - _tmp1950 - _tmp1951);
  const Scalar _tmp2122 = _tmp1012 * _tmp2120 + _tmp1026 * _tmp2121;
  const Scalar _tmp2123 = _tmp1026 * _tmp2122;
  const Scalar _tmp2124 = _tmp1039 * _tmp2123 - _tmp1042 * _tmp2123 + _tmp1044 * _tmp2121;
  const Scalar _tmp2125 =
      _tmp1713 * _tmp2083 - _tmp2079 * priors_1_0_sqrt_info(2, 0) -
      _tmp2082 * priors_1_0_sqrt_info(2, 1) - _tmp2085 * priors_1_0_sqrt_info(2, 1) +
      _tmp2086 * priors_1_0_sqrt_info(2, 0) - _tmp2087 * priors_1_0_sqrt_info(2, 2) -
      _tmp2088 * priors_1_0_sqrt_info(2, 1) + _tmp2089 * priors_1_0_sqrt_info(2, 4) +
      _tmp2090 * priors_1_0_sqrt_info(2, 3) - _tmp2092 * priors_1_0_sqrt_info(2, 2) -
      _tmp2112 * priors_1_0_sqrt_info(2, 2);
  const Scalar _tmp2126 = _tmp1471 * _tmp2064 + _tmp1921 * _tmp2065 - _tmp1922 * _tmp2065;
  const Scalar _tmp2127 = -_tmp1683 * _tmp2072 + _tmp1798 * _tmp2073 - _tmp1799 * _tmp2073;
  const Scalar _tmp2128 =
      -_tmp1490 * priors_0_1_sqrt_info(4, 0) - _tmp1493 * priors_0_1_sqrt_info(4, 0) -
      _tmp1497 * priors_0_1_sqrt_info(4, 2) + _tmp1501 * priors_0_1_sqrt_info(4, 0) +
      _tmp1820 * priors_0_1_sqrt_info(4, 1) + _tmp1822 * priors_0_1_sqrt_info(4, 1) +
      _tmp1825 * priors_0_1_sqrt_info(4, 1) - _tmp2109 * priors_0_1_sqrt_info(4, 2) -
      _tmp2110 * priors_0_1_sqrt_info(4, 2);
  const Scalar _tmp2129 =
      -_tmp1477 * _tmp2012 - _tmp1490 * priors_0_1_sqrt_info(5, 0) -
      _tmp1497 * priors_0_1_sqrt_info(5, 2) + _tmp1501 * priors_0_1_sqrt_info(5, 0) +
      _tmp1820 * priors_0_1_sqrt_info(5, 1) + _tmp1822 * priors_0_1_sqrt_info(5, 1) +
      _tmp1825 * priors_0_1_sqrt_info(5, 1) - _tmp2109 * priors_0_1_sqrt_info(5, 2) -
      _tmp2110 * priors_0_1_sqrt_info(5, 2);
  const Scalar _tmp2130 = _tmp1087 * _tmp2059 - _tmp1089 * _tmp2058 - _tmp1091 * _tmp2059;
  const Scalar _tmp2131 = _tmp1394 * (_tmp1397 + _tmp1399 - _tmp1400);
  const Scalar _tmp2132 = _tmp1413 * (-_tmp1957 - _tmp1958 - _tmp1959);
  const Scalar _tmp2133 = _tmp1395 * _tmp2131 + _tmp1415 * _tmp2132;
  const Scalar _tmp2134 = _tmp1426 * _tmp2131 + _tmp1964 * _tmp2133 - _tmp1965 * _tmp2133;
  const Scalar _tmp2135 = _tmp1760 * (_tmp1763 - _tmp1764 + _tmp1766);
  const Scalar _tmp2136 = _tmp1779 * (-_tmp1906 - _tmp1907 - _tmp1908);
  const Scalar _tmp2137 = _tmp1761 * _tmp2135 + _tmp1781 * _tmp2136;
  const Scalar _tmp2138 = -_tmp1791 * _tmp2135 - _tmp1807 * _tmp2137 + _tmp1808 * _tmp2137;
  const Scalar _tmp2139 = _tmp1530 * (-_tmp1861 - _tmp1862 - _tmp1863);
  const Scalar _tmp2140 = _tmp1535 * (-_tmp1508 + _tmp1511 + _tmp1514);
  const Scalar _tmp2141 = _tmp1536 * _tmp2140 + _tmp1537 * _tmp2139;
  const Scalar _tmp2142 = _tmp1544 * _tmp2140 + _tmp1725 * _tmp2141 - _tmp1726 * _tmp2141;
  const Scalar _tmp2143 = _tmp971 * (-_tmp2026 - _tmp2027 - _tmp2028);
  const Scalar _tmp2144 = _tmp966 * (_tmp981 - _tmp982 + _tmp983);
  const Scalar _tmp2145 = _tmp2143 * _tmp972 + _tmp2144 * _tmp967;
  const Scalar _tmp2146 = _tmp2144 * _tmp980 + _tmp2145 * _tmp994 - _tmp2145 * _tmp996;
  const Scalar _tmp2147 = _tmp787 * (-_tmp772 + _tmp773 + _tmp774);
  const Scalar _tmp2148 = _tmp767 * (-_tmp1828 - _tmp1829 - _tmp1830);
  const Scalar _tmp2149 = _tmp2147 * _tmp788 + _tmp2148 * _tmp768;
  const Scalar _tmp2150 = _tmp2148 * _tmp808 - _tmp2149 * _tmp806 + _tmp2149 * _tmp811;
  const Scalar _tmp2151 = _tmp1341 * (_tmp1356 + _tmp1357 - _tmp1358);
  const Scalar _tmp2152 = _tmp1346 * (-_tmp1994 - _tmp1995 - _tmp1996);
  const Scalar _tmp2153 = _tmp1342 * _tmp2151 + _tmp1347 * _tmp2152;
  const Scalar _tmp2154 = _tmp1355 * _tmp2151 - _tmp1372 * _tmp2153 + _tmp1374 * _tmp2153;
  const Scalar _tmp2155 = -_tmp1426 * _tmp2132 - _tmp1710 * _tmp2133 + _tmp1711 * _tmp2133;
  const Scalar _tmp2156 = _tmp1308 * (-_tmp1887 - _tmp1888 - _tmp1889);
  const Scalar _tmp2157 = _tmp1294 * (_tmp1297 + _tmp1299 - _tmp1300);
  const Scalar _tmp2158 = _tmp1295 * _tmp2157 + _tmp1309 * _tmp2156;
  const Scalar _tmp2159 = _tmp1325 * _tmp2158;
  const Scalar _tmp2160 = _tmp1309 * _tmp2159 - _tmp1323 * _tmp2158 + _tmp1327 * _tmp2156;
  const Scalar _tmp2161 = _tmp1795 * _tmp2145 - _tmp1796 * _tmp2145 + _tmp2143 * _tmp980;
  const Scalar _tmp2162 =
      -_tmp2079 * priors_1_0_sqrt_info(1, 0) - _tmp2082 * priors_1_0_sqrt_info(1, 1) +
      _tmp2084 * priors_1_0_sqrt_info(1, 0) - _tmp2085 * priors_1_0_sqrt_info(1, 1) +
      _tmp2086 * priors_1_0_sqrt_info(1, 0) - _tmp2087 * priors_1_0_sqrt_info(1, 2) -
      _tmp2088 * priors_1_0_sqrt_info(1, 1) + _tmp2089 * priors_1_0_sqrt_info(1, 4) +
      _tmp2090 * priors_1_0_sqrt_info(1, 3) - _tmp2092 * priors_1_0_sqrt_info(1, 2) -
      _tmp2112 * priors_1_0_sqrt_info(1, 2);
  const Scalar _tmp2163 = _tmp1544 * _tmp2139 + _tmp1550 * _tmp2141 - _tmp1552 * _tmp2141;
  const Scalar _tmp2164 =
      -_tmp132 * _tmp2091 - _tmp2079 * priors_1_0_sqrt_info(5, 0) + _tmp2081 * _tmp683 -
      _tmp2082 * priors_1_0_sqrt_info(5, 1) + _tmp2083 * _tmp683 -
      _tmp2085 * priors_1_0_sqrt_info(5, 1) - _tmp2087 * priors_1_0_sqrt_info(5, 2) -
      _tmp2088 * priors_1_0_sqrt_info(5, 1) + _tmp2089 * priors_1_0_sqrt_info(5, 4) +
      _tmp2090 * priors_1_0_sqrt_info(5, 3) - _tmp2112 * priors_1_0_sqrt_info(5, 2);
  const Scalar _tmp2165 = _tmp1199 * (-_tmp1201 + _tmp1203 + _tmp1205);
  const Scalar _tmp2166 = _tmp1215 * (-_tmp2016 - _tmp2017 - _tmp2018);
  const Scalar _tmp2167 = _tmp1200 * _tmp2165 + _tmp1220 * _tmp2166;
  const Scalar _tmp2168 = -_tmp1228 * _tmp2167 + _tmp1231 * _tmp2167 + _tmp1232 * _tmp2166;
  const Scalar _tmp2169 = _tmp935 * (_tmp921 + _tmp923 - _tmp924);
  const Scalar _tmp2170 = _tmp919 * (-_tmp1985 - _tmp1986 - _tmp1987);
  const Scalar _tmp2171 = _tmp2169 * _tmp936 + _tmp2170 * _tmp937;
  const Scalar _tmp2172 = -_tmp1376 * _tmp2171 + _tmp1377 * _tmp2171 + _tmp2169 * _tmp944;
  const Scalar _tmp2173 = _tmp1232 * _tmp2165 + _tmp1719 * _tmp2167 - _tmp1720 * _tmp2167;
  const Scalar _tmp2174 = _tmp1044 * _tmp2120 - _tmp1379 * _tmp2122 + _tmp1380 * _tmp2122;
  const Scalar _tmp2175 = _tmp888 * (-_tmp877 + _tmp878 + _tmp879);
  const Scalar _tmp2176 = _tmp872 * (-_tmp1924 - _tmp1925 - _tmp1926);
  const Scalar _tmp2177 = _tmp2175 * _tmp889 + _tmp2176 * _tmp873;
  const Scalar _tmp2178 = _tmp2177 * _tmp889;
  const Scalar _tmp2179 = _tmp2175 * _tmp902 + _tmp2178 * _tmp897 - _tmp2178 * _tmp900;
  const Scalar _tmp2180 = -_tmp1640 * _tmp2094 - _tmp1715 * _tmp2096 + _tmp1716 * _tmp2096;
  const Scalar _tmp2181 = _tmp1737 * _tmp2149 - _tmp1738 * _tmp2149 - _tmp2147 * _tmp808;
  const Scalar _tmp2182 = _tmp2171 * _tmp937;
  const Scalar _tmp2183 = _tmp2170 * _tmp944 - _tmp2182 * _tmp949 + _tmp2182 * _tmp951;
  const Scalar _tmp2184 = -_tmp1789 * _tmp2137 + _tmp1791 * _tmp2136 + _tmp1793 * _tmp2137;
  const Scalar _tmp2185 = _tmp1355 * _tmp2152 + _tmp1722 * _tmp2153 - _tmp1723 * _tmp2153;
  const Scalar _tmp2186 =
      -_tmp2079 * priors_1_0_sqrt_info(0, 0) - _tmp2082 * priors_1_0_sqrt_info(0, 1) +
      _tmp2084 * priors_1_0_sqrt_info(0, 0) - _tmp2085 * priors_1_0_sqrt_info(0, 1) +
      _tmp2086 * priors_1_0_sqrt_info(0, 0) - _tmp2087 * priors_1_0_sqrt_info(0, 2) -
      _tmp2088 * priors_1_0_sqrt_info(0, 1) + _tmp2089 * priors_1_0_sqrt_info(0, 4) +
      _tmp2090 * priors_1_0_sqrt_info(0, 3) - _tmp2092 * priors_1_0_sqrt_info(0, 2) -
      _tmp2112 * priors_1_0_sqrt_info(0, 2);
  const Scalar _tmp2187 = -_tmp1584 * _tmp2117 + _tmp1595 * _tmp2116 + _tmp1599 * _tmp2114;
  const Scalar _tmp2188 =
      -_tmp1490 * priors_0_1_sqrt_info(1, 0) - _tmp1493 * priors_0_1_sqrt_info(1, 0) -
      _tmp1497 * priors_0_1_sqrt_info(1, 2) + _tmp1501 * priors_0_1_sqrt_info(1, 0) +
      _tmp1820 * priors_0_1_sqrt_info(1, 1) + _tmp1822 * priors_0_1_sqrt_info(1, 1) +
      _tmp1825 * priors_0_1_sqrt_info(1, 1) - _tmp2109 * priors_0_1_sqrt_info(1, 2) -
      _tmp2110 * priors_0_1_sqrt_info(1, 2);
  const Scalar _tmp2189 = -_tmp1728 * _tmp2177 + _tmp1729 * _tmp2177 + _tmp2176 * _tmp902;
  const Scalar _tmp2190 =
      -_tmp1490 * priors_0_1_sqrt_info(2, 0) - _tmp1493 * priors_0_1_sqrt_info(2, 0) -
      _tmp1497 * priors_0_1_sqrt_info(2, 2) + _tmp1501 * priors_0_1_sqrt_info(2, 0) +
      _tmp1820 * priors_0_1_sqrt_info(2, 1) + _tmp1822 * priors_0_1_sqrt_info(2, 1) +
      _tmp1825 * priors_0_1_sqrt_info(2, 1) - _tmp2109 * priors_0_1_sqrt_info(2, 2) -
      _tmp2110 * priors_0_1_sqrt_info(2, 2);
  const Scalar _tmp2191 = _tmp1181 * _tmp2102 - _tmp1184 * _tmp2102 + _tmp1185 * _tmp2100;
  const Scalar _tmp2192 = -_tmp1276 * _tmp2069 + _tmp1279 * _tmp2069 + _tmp1280 * _tmp2068;
  const Scalar _tmp2193 = -_tmp1295 * _tmp2159 - _tmp1327 * _tmp2157 + _tmp1741 * _tmp2158;
  const Scalar _tmp2194 = _tmp872 * landmarks_0_;
  const Scalar _tmp2195 = _tmp1931 * landmarks_0_;
  const Scalar _tmp2196 = _tmp2194 * _tmp721 - _tmp2195 * _tmp703;
  const Scalar _tmp2197 = _tmp888 * landmarks_0_;
  const Scalar _tmp2198 = _tmp1929 * landmarks_0_;
  const Scalar _tmp2199 = _tmp2197 * _tmp785 - _tmp2198 * _tmp703;
  const Scalar _tmp2200 = _tmp2196 * _tmp873 - _tmp2199 * _tmp889;
  const Scalar _tmp2201 = _tmp1728 * _tmp2200 - _tmp1729 * _tmp2200 - _tmp2196 * _tmp902;
  const Scalar _tmp2202 = 2 * _tmp2201;
  const Scalar _tmp2203 = _tmp1075 * landmarks_8_;
  const Scalar _tmp2204 = _tmp1078 * landmarks_8_;
  const Scalar _tmp2205 = _tmp2203 * _tmp785 + _tmp2204 * _tmp703;
  const Scalar _tmp2206 = _tmp1058 * landmarks_8_;
  const Scalar _tmp2207 = _tmp1067 * landmarks_8_;
  const Scalar _tmp2208 = _tmp2206 * _tmp721 + _tmp2207 * _tmp703;
  const Scalar _tmp2209 = _tmp1059 * _tmp2208 - _tmp1076 * _tmp2205;
  const Scalar _tmp2210 = _tmp1089 * _tmp2205 - _tmp1706 * _tmp2209 + _tmp1707 * _tmp2209;
  const Scalar _tmp2211 = 2 * _tmp2210;
  const Scalar _tmp2212 = _tmp1250 * landmarks_9_;
  const Scalar _tmp2213 = _tmp1942 * landmarks_9_;
  const Scalar _tmp2214 = _tmp2212 * _tmp785 - _tmp2213 * _tmp703;
  const Scalar _tmp2215 = _tmp1939 * landmarks_9_;
  const Scalar _tmp2216 = _tmp1264 * landmarks_9_;
  const Scalar _tmp2217 = _tmp2215 * _tmp703 + _tmp2216 * _tmp721;
  const Scalar _tmp2218 = _tmp1251 * _tmp2214 - _tmp1268 * _tmp2217;
  const Scalar _tmp2219 = _tmp1280 * _tmp2217 - _tmp1654 * _tmp2218 + _tmp1655 * _tmp2218;
  const Scalar _tmp2220 = 2 * _tmp2219;
  const Scalar _tmp2221 = _tmp1125 * landmarks_13_;
  const Scalar _tmp2222 = _tmp1122 * landmarks_13_;
  const Scalar _tmp2223 = _tmp2221 * _tmp703 - _tmp2222 * _tmp785;
  const Scalar _tmp2224 = _tmp1105 * landmarks_13_;
  const Scalar _tmp2225 = _tmp1117 * landmarks_13_;
  const Scalar _tmp2226 = _tmp2224 * _tmp721 + _tmp2225 * _tmp703;
  const Scalar _tmp2227 = _tmp1106 * _tmp2226 + _tmp1123 * _tmp2223;
  const Scalar _tmp2228 = -_tmp1134 * _tmp2227 + _tmp1137 * _tmp2227 + _tmp1138 * _tmp2223;
  const Scalar _tmp2229 = 2 * _tmp2228;
  const Scalar _tmp2230 = _tmp1626 * landmarks_19_;
  const Scalar _tmp2231 = _tmp1621 * landmarks_19_;
  const Scalar _tmp2232 = _tmp2230 * _tmp721 + _tmp2231 * _tmp703;
  const Scalar _tmp2233 = _tmp1642 * landmarks_19_;
  const Scalar _tmp2234 = _tmp1631 * landmarks_19_;
  const Scalar _tmp2235 = _tmp2233 * _tmp703 - _tmp2234 * _tmp785;
  const Scalar _tmp2236 = _tmp1632 * _tmp2235 + _tmp1633 * _tmp2232;
  const Scalar _tmp2237 = -_tmp1640 * _tmp2232 - _tmp1646 * _tmp2236 + _tmp1648 * _tmp2236;
  const Scalar _tmp2238 = 2 * _tmp2237;
  const Scalar _tmp2239 = -_tmp751 * priors_0_1_sqrt_info(3, 5) +
                          _tmp753 * priors_0_1_sqrt_info(3, 3) +
                          _tmp755 * priors_0_1_sqrt_info(3, 4);
  const Scalar _tmp2240 = 2 * _tmp2239;
  const Scalar _tmp2241 = -_tmp751 * priors_0_1_sqrt_info(5, 5) +
                          _tmp753 * priors_0_1_sqrt_info(5, 3) +
                          _tmp755 * priors_0_1_sqrt_info(5, 4);
  const Scalar _tmp2242 = 2 * _tmp2241;
  const Scalar _tmp2243 = _tmp1163 * landmarks_5_;
  const Scalar _tmp2244 = _tmp1152 * landmarks_5_;
  const Scalar _tmp2245 = _tmp2243 * _tmp703 + _tmp2244 * _tmp785;
  const Scalar _tmp2246 = _tmp1171 * landmarks_5_;
  const Scalar _tmp2247 = _tmp1168 * landmarks_5_;
  const Scalar _tmp2248 = _tmp2246 * _tmp703 + _tmp2247 * _tmp721;
  const Scalar _tmp2249 = _tmp1153 * _tmp2245 - _tmp1173 * _tmp2248;
  const Scalar _tmp2250 = -_tmp1185 * _tmp2248 - _tmp1734 * _tmp2249 + _tmp1735 * _tmp2249;
  const Scalar _tmp2251 = 2 * _tmp2250;
  const Scalar _tmp2252 = -_tmp703 * priors_1_0_sqrt_info(4, 5) -
                          _tmp721 * priors_1_0_sqrt_info(4, 4) +
                          _tmp785 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp2253 = 2 * _tmp2252;
  const Scalar _tmp2254 = _tmp825 * landmarks_10_;
  const Scalar _tmp2255 = _tmp703 * landmarks_10_;
  const Scalar _tmp2256 = _tmp2254 * _tmp785 + _tmp2255 * _tmp836;
  const Scalar _tmp2257 = _tmp844 * landmarks_10_;
  const Scalar _tmp2258 = _tmp2255 * _tmp840 - _tmp2257 * _tmp721;
  const Scalar _tmp2259 = _tmp2256 * _tmp826 + _tmp2258 * _tmp846;
  const Scalar _tmp2260 = _tmp2258 * _tmp858 - _tmp2259 * _tmp904 + _tmp2259 * _tmp905;
  const Scalar _tmp2261 = 2 * _tmp2260;
  const Scalar _tmp2262 = _tmp1138 * _tmp2226 + _tmp1731 * _tmp2227 - _tmp1732 * _tmp2227;
  const Scalar _tmp2263 = 2 * _tmp2262;
  const Scalar _tmp2264 = _tmp779 * landmarks_15_;
  const Scalar _tmp2265 = _tmp767 * landmarks_15_;
  const Scalar _tmp2266 = _tmp2264 * _tmp703 + _tmp2265 * _tmp721;
  const Scalar _tmp2267 = _tmp790 * landmarks_15_;
  const Scalar _tmp2268 = _tmp787 * landmarks_15_;
  const Scalar _tmp2269 = _tmp2267 * _tmp703 + _tmp2268 * _tmp785;
  const Scalar _tmp2270 = -_tmp2266 * _tmp768 + _tmp2269 * _tmp788;
  const Scalar _tmp2271 = _tmp2266 * _tmp808 + _tmp2270 * _tmp806 - _tmp2270 * _tmp811;
  const Scalar _tmp2272 = 2 * _tmp2271;
  const Scalar _tmp2273 = _tmp1446 * landmarks_17_;
  const Scalar _tmp2274 = _tmp1451 * landmarks_17_;
  const Scalar _tmp2275 = _tmp2273 * _tmp703 - _tmp2274 * _tmp721;
  const Scalar _tmp2276 = _tmp1457 * landmarks_17_;
  const Scalar _tmp2277 = _tmp1460 * landmarks_17_;
  const Scalar _tmp2278 = _tmp2276 * _tmp785 + _tmp2277 * _tmp703;
  const Scalar _tmp2279 = _tmp1453 * _tmp2275 + _tmp1458 * _tmp2278;
  const Scalar _tmp2280 = _tmp1472 * _tmp2279;
  const Scalar _tmp2281 = -_tmp1453 * _tmp2280 + _tmp1469 * _tmp2279 - _tmp1471 * _tmp2275;
  const Scalar _tmp2282 = 2 * _tmp2281;
  const Scalar _tmp2283 = -_tmp751 * priors_0_1_sqrt_info(4, 5) +
                          _tmp753 * priors_0_1_sqrt_info(4, 3) +
                          _tmp755 * priors_0_1_sqrt_info(4, 4);
  const Scalar _tmp2284 = 2 * _tmp2283;
  const Scalar _tmp2285 = _tmp1690 * landmarks_4_;
  const Scalar _tmp2286 = _tmp1674 * landmarks_4_;
  const Scalar _tmp2287 = _tmp2285 * _tmp703 + _tmp2286 * _tmp785;
  const Scalar _tmp2288 = _tmp1669 * landmarks_4_;
  const Scalar _tmp2289 = _tmp1696 * landmarks_4_;
  const Scalar _tmp2290 = _tmp2288 * _tmp721 + _tmp2289 * _tmp703;
  const Scalar _tmp2291 = -_tmp1670 * _tmp2290 + _tmp1675 * _tmp2287;
  const Scalar _tmp2292 = -_tmp1683 * _tmp2290 - _tmp1798 * _tmp2291 + _tmp1799 * _tmp2291;
  const Scalar _tmp2293 = 2 * _tmp2292;
  const Scalar _tmp2294 = _tmp1311 * landmarks_2_;
  const Scalar _tmp2295 = _tmp1308 * landmarks_2_;
  const Scalar _tmp2296 = _tmp2294 * _tmp703 + _tmp2295 * _tmp721;
  const Scalar _tmp2297 = _tmp1294 * landmarks_2_;
  const Scalar _tmp2298 = _tmp1305 * landmarks_2_;
  const Scalar _tmp2299 = _tmp2297 * _tmp785 + _tmp2298 * _tmp703;
  const Scalar _tmp2300 = _tmp1295 * _tmp2299 - _tmp1309 * _tmp2296;
  const Scalar _tmp2301 = _tmp1323 * _tmp2300 - _tmp1326 * _tmp2300 + _tmp1327 * _tmp2296;
  const Scalar _tmp2302 = 2 * _tmp2301;
  const Scalar _tmp2303 = _tmp2031 * landmarks_18_;
  const Scalar _tmp2304 = _tmp966 * landmarks_18_;
  const Scalar _tmp2305 = _tmp2303 * _tmp703 + _tmp2304 * _tmp785;
  const Scalar _tmp2306 = _tmp2033 * landmarks_18_;
  const Scalar _tmp2307 = _tmp971 * landmarks_18_;
  const Scalar _tmp2308 = _tmp2306 * _tmp703 - _tmp2307 * _tmp721;
  const Scalar _tmp2309 = _tmp2305 * _tmp967 + _tmp2308 * _tmp972;
  const Scalar _tmp2310 = _tmp2305 * _tmp980 + _tmp2309 * _tmp994 - _tmp2309 * _tmp996;
  const Scalar _tmp2311 = 2 * _tmp2310;
  const Scalar _tmp2312 = _tmp1276 * _tmp2218 - _tmp1279 * _tmp2218 - _tmp1280 * _tmp2214;
  const Scalar _tmp2313 = 2 * _tmp2312;
  const Scalar _tmp2314 = -_tmp751 * priors_0_1_sqrt_info(1, 5) +
                          _tmp753 * priors_0_1_sqrt_info(1, 3) +
                          _tmp755 * priors_0_1_sqrt_info(1, 4);
  const Scalar _tmp2315 = 2 * _tmp2314;
  const Scalar _tmp2316 = _tmp1011 * landmarks_1_;
  const Scalar _tmp2317 = _tmp1022 * landmarks_1_;
  const Scalar _tmp2318 = _tmp2316 * _tmp785 - _tmp2317 * _tmp703;
  const Scalar _tmp2319 = _tmp1028 * landmarks_1_;
  const Scalar _tmp2320 = _tmp1025 * landmarks_1_;
  const Scalar _tmp2321 = _tmp2319 * _tmp703 - _tmp2320 * _tmp721;
  const Scalar _tmp2322 = _tmp1012 * _tmp2318 + _tmp1026 * _tmp2321;
  const Scalar _tmp2323 = _tmp1044 * _tmp2318 - _tmp1379 * _tmp2322 + _tmp1380 * _tmp2322;
  const Scalar _tmp2324 = 2 * _tmp2323;
  const Scalar _tmp2325 = _tmp1566 * landmarks_3_;
  const Scalar _tmp2326 = _tmp1578 * landmarks_3_;
  const Scalar _tmp2327 = _tmp2325 * _tmp721 + _tmp2326 * _tmp703;
  const Scalar _tmp2328 = _tmp1583 * landmarks_3_;
  const Scalar _tmp2329 = _tmp1586 * landmarks_3_;
  const Scalar _tmp2330 = _tmp2328 * _tmp785 + _tmp2329 * _tmp703;
  const Scalar _tmp2331 = _tmp1567 * _tmp2327 - _tmp1584 * _tmp2330;
  const Scalar _tmp2332 = _tmp1567 * _tmp2331;
  const Scalar _tmp2333 = _tmp1594 * _tmp2332 - _tmp1597 * _tmp2332 + _tmp1599 * _tmp2327;
  const Scalar _tmp2334 = 2 * _tmp2333;
  const Scalar _tmp2335 = -_tmp751 * priors_0_1_sqrt_info(0, 5) +
                          _tmp753 * priors_0_1_sqrt_info(0, 3) +
                          _tmp755 * priors_0_1_sqrt_info(0, 4);
  const Scalar _tmp2336 = 2 * _tmp2335;
  const Scalar _tmp2337 = _tmp703 * landmarks_11_;
  const Scalar _tmp2338 = _tmp935 * landmarks_11_;
  const Scalar _tmp2339 = _tmp2337 * _tmp946 + _tmp2338 * _tmp785;
  const Scalar _tmp2340 = _tmp919 * landmarks_11_;
  const Scalar _tmp2341 = _tmp2337 * _tmp930 + _tmp2340 * _tmp721;
  const Scalar _tmp2342 = _tmp2339 * _tmp936 - _tmp2341 * _tmp937;
  const Scalar _tmp2343 = _tmp2342 * _tmp949;
  const Scalar _tmp2344 = -_tmp2341 * _tmp944 + _tmp2342 * _tmp952 - _tmp2343 * _tmp937;
  const Scalar _tmp2345 = 2 * _tmp2344;
  const Scalar _tmp2346 = _tmp703 * landmarks_16_;
  const Scalar _tmp2347 = _tmp1530 * landmarks_16_;
  const Scalar _tmp2348 = _tmp1525 * _tmp2346 - _tmp2347 * _tmp721;
  const Scalar _tmp2349 = _tmp1535 * landmarks_16_;
  const Scalar _tmp2350 = _tmp1546 * _tmp2346 - _tmp2349 * _tmp785;
  const Scalar _tmp2351 = -_tmp1536 * _tmp2350 + _tmp1537 * _tmp2348;
  const Scalar _tmp2352 = _tmp1551 * _tmp2351;
  const Scalar _tmp2353 = -_tmp1537 * _tmp2352 + _tmp1544 * _tmp2348 + _tmp1550 * _tmp2351;
  const Scalar _tmp2354 = 2 * _tmp2353;
  const Scalar _tmp2355 = -_tmp1458 * _tmp2280 - _tmp1471 * _tmp2278 + _tmp1922 * _tmp2279;
  const Scalar _tmp2356 = 2 * _tmp2355;
  const Scalar _tmp2357 = -_tmp1595 * _tmp2331 + _tmp1598 * _tmp2331 + _tmp1599 * _tmp2330;
  const Scalar _tmp2358 = 2 * _tmp2357;
  const Scalar _tmp2359 = _tmp1737 * _tmp2270 - _tmp1738 * _tmp2270 - _tmp2269 * _tmp808;
  const Scalar _tmp2360 = 2 * _tmp2359;
  const Scalar _tmp2361 = -_tmp703 * priors_1_0_sqrt_info(0, 5) -
                          _tmp721 * priors_1_0_sqrt_info(0, 4) +
                          _tmp785 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp2362 = 2 * _tmp2361;
  const Scalar _tmp2363 = _tmp703 * landmarks_7_;
  const Scalar _tmp2364 = _tmp1199 * landmarks_7_;
  const Scalar _tmp2365 = _tmp1210 * _tmp2363 + _tmp2364 * _tmp785;
  const Scalar _tmp2366 = _tmp1215 * landmarks_7_;
  const Scalar _tmp2367 = _tmp1218 * _tmp2363 + _tmp2366 * _tmp721;
  const Scalar _tmp2368 = _tmp1200 * _tmp2365 - _tmp1220 * _tmp2367;
  const Scalar _tmp2369 = _tmp1232 * _tmp2365 + _tmp1719 * _tmp2368 - _tmp1720 * _tmp2368;
  const Scalar _tmp2370 = 2 * _tmp2369;
  const Scalar _tmp2371 = _tmp703 * landmarks_6_;
  const Scalar _tmp2372 = _tmp1760 * landmarks_6_;
  const Scalar _tmp2373 = _tmp1771 * _tmp2371 + _tmp2372 * _tmp785;
  const Scalar _tmp2374 = _tmp1779 * landmarks_6_;
  const Scalar _tmp2375 = _tmp1775 * _tmp2371 + _tmp2374 * _tmp721;
  const Scalar _tmp2376 = _tmp1761 * _tmp2373 - _tmp1781 * _tmp2375;
  const Scalar _tmp2377 = _tmp1789 * _tmp2376 + _tmp1791 * _tmp2375 - _tmp1793 * _tmp2376;
  const Scalar _tmp2378 = 2 * _tmp2377;
  const Scalar _tmp2379 = _tmp1394 * landmarks_14_;
  const Scalar _tmp2380 = _tmp703 * landmarks_14_;
  const Scalar _tmp2381 = -_tmp1405 * _tmp2380 + _tmp2379 * _tmp785;
  const Scalar _tmp2382 = _tmp1413 * landmarks_14_;
  const Scalar _tmp2383 = -_tmp1409 * _tmp2380 + _tmp2382 * _tmp721;
  const Scalar _tmp2384 = _tmp1395 * _tmp2381 - _tmp1415 * _tmp2383;
  const Scalar _tmp2385 = _tmp1426 * _tmp2381 + _tmp1964 * _tmp2384 - _tmp1965 * _tmp2384;
  const Scalar _tmp2386 = 2 * _tmp2385;
  const Scalar _tmp2387 = _tmp2199 * _tmp902 - _tmp2200 * _tmp898 + _tmp2200 * _tmp901;
  const Scalar _tmp2388 = 2 * _tmp2387;
  const Scalar _tmp2389 = _tmp1368 * landmarks_12_;
  const Scalar _tmp2390 = _tmp1346 * landmarks_12_;
  const Scalar _tmp2391 = _tmp2389 * _tmp703 + _tmp2390 * _tmp721;
  const Scalar _tmp2392 = _tmp1362 * landmarks_12_;
  const Scalar _tmp2393 = _tmp1341 * landmarks_12_;
  const Scalar _tmp2394 = _tmp2392 * _tmp703 - _tmp2393 * _tmp785;
  const Scalar _tmp2395 = _tmp1342 * _tmp2394 + _tmp1347 * _tmp2391;
  const Scalar _tmp2396 = _tmp1355 * _tmp2391 + _tmp1722 * _tmp2395 - _tmp1723 * _tmp2395;
  const Scalar _tmp2397 = 2 * _tmp2396;
  const Scalar _tmp2398 = _tmp1040 * _tmp2322 - _tmp1043 * _tmp2322 + _tmp1044 * _tmp2321;
  const Scalar _tmp2399 = 2 * _tmp2398;
  const Scalar _tmp2400 = -_tmp1795 * _tmp2309 + _tmp1796 * _tmp2309 - _tmp2308 * _tmp980;
  const Scalar _tmp2401 = 2 * _tmp2400;
  const Scalar _tmp2402 = -_tmp1683 * _tmp2287 - _tmp1700 * _tmp2291 + _tmp1702 * _tmp2291;
  const Scalar _tmp2403 = 2 * _tmp2402;
  const Scalar _tmp2404 = -_tmp751 * priors_0_1_sqrt_info(2, 5) +
                          _tmp753 * priors_0_1_sqrt_info(2, 3) +
                          _tmp755 * priors_0_1_sqrt_info(2, 4);
  const Scalar _tmp2405 = 2 * _tmp2404;
  const Scalar _tmp2406 = -_tmp703 * priors_1_0_sqrt_info(5, 5) -
                          _tmp721 * priors_1_0_sqrt_info(5, 4) +
                          _tmp785 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp2407 = 2 * _tmp2406;
  const Scalar _tmp2408 = _tmp1536 * _tmp2352 + _tmp1544 * _tmp2350 - _tmp1725 * _tmp2351;
  const Scalar _tmp2409 = 2 * _tmp2408;
  const Scalar _tmp2410 = _tmp1791 * _tmp2373 + _tmp1807 * _tmp2376 - _tmp1808 * _tmp2376;
  const Scalar _tmp2411 = 2 * _tmp2410;
  const Scalar _tmp2412 = _tmp2256 * _tmp858 - _tmp2259 * _tmp854 + _tmp2259 * _tmp857;
  const Scalar _tmp2413 = 2 * _tmp2412;
  const Scalar _tmp2414 = -_tmp703 * priors_1_0_sqrt_info(2, 5) -
                          _tmp721 * priors_1_0_sqrt_info(2, 4) +
                          _tmp785 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp2415 = 2 * _tmp2414;
  const Scalar _tmp2416 = -_tmp1327 * _tmp2299 - _tmp1740 * _tmp2300 + _tmp1741 * _tmp2300;
  const Scalar _tmp2417 = 2 * _tmp2416;
  const Scalar _tmp2418 = -_tmp703 * priors_1_0_sqrt_info(3, 5) -
                          _tmp721 * priors_1_0_sqrt_info(3, 4) +
                          _tmp785 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp2419 = 2 * _tmp2418;
  const Scalar _tmp2420 = _tmp1640 * _tmp2235 + _tmp1715 * _tmp2236 - _tmp1716 * _tmp2236;
  const Scalar _tmp2421 = 2 * _tmp2420;
  const Scalar _tmp2422 = _tmp1228 * _tmp2368 - _tmp1231 * _tmp2368 + _tmp1232 * _tmp2367;
  const Scalar _tmp2423 = 2 * _tmp2422;
  const Scalar _tmp2424 = _tmp1426 * _tmp2383 - _tmp1710 * _tmp2384 + _tmp1711 * _tmp2384;
  const Scalar _tmp2425 = 2 * _tmp2424;
  const Scalar _tmp2426 = _tmp1355 * _tmp2394 - _tmp1372 * _tmp2395 + _tmp1374 * _tmp2395;
  const Scalar _tmp2427 = 2 * _tmp2426;
  const Scalar _tmp2428 = -_tmp1181 * _tmp2249 + _tmp1184 * _tmp2249 - _tmp1185 * _tmp2245;
  const Scalar _tmp2429 = 2 * _tmp2428;
  const Scalar _tmp2430 = -_tmp703 * priors_1_0_sqrt_info(1, 5) -
                          _tmp721 * priors_1_0_sqrt_info(1, 4) +
                          _tmp785 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp2431 = 2 * _tmp2430;
  const Scalar _tmp2432 = _tmp1377 * _tmp2342 + _tmp2339 * _tmp944 - _tmp2343 * _tmp936;
  const Scalar _tmp2433 = 2 * _tmp2432;
  const Scalar _tmp2434 = _tmp1087 * _tmp2209 - _tmp1089 * _tmp2208 - _tmp1091 * _tmp2209;
  const Scalar _tmp2435 = 2 * _tmp2434;
  const Scalar _tmp2436 = _tmp1210 * landmarks_7_;
  const Scalar _tmp2437 = _tmp2364 * _tmp781 + _tmp2436 * _tmp699;
  const Scalar _tmp2438 = _tmp1218 * landmarks_7_;
  const Scalar _tmp2439 = _tmp2366 * _tmp732 + _tmp2438 * _tmp699;
  const Scalar _tmp2440 = _tmp1200 * _tmp2437 - _tmp1220 * _tmp2439;
  const Scalar _tmp2441 = -_tmp1232 * _tmp2437 - _tmp1719 * _tmp2440 + _tmp1720 * _tmp2440;
  const Scalar _tmp2442 = 2 * _tmp2441;
  const Scalar _tmp2443 = _tmp2389 * _tmp699 + _tmp2390 * _tmp732;
  const Scalar _tmp2444 = -_tmp2392 * _tmp699 + _tmp2393 * _tmp781;
  const Scalar _tmp2445 = -_tmp1342 * _tmp2444 + _tmp1347 * _tmp2443;
  const Scalar _tmp2446 = _tmp1347 * _tmp2445;
  const Scalar _tmp2447 = _tmp1355 * _tmp2443 - _tmp1371 * _tmp2446 + _tmp1373 * _tmp2446;
  const Scalar _tmp2448 = 2 * _tmp2447;
  const Scalar _tmp2449 = _tmp699 * landmarks_6_;
  const Scalar _tmp2450 = _tmp1775 * _tmp2449 + _tmp2374 * _tmp732;
  const Scalar _tmp2451 = _tmp1771 * _tmp2449 + _tmp2372 * _tmp781;
  const Scalar _tmp2452 = _tmp1761 * _tmp2451 - _tmp1781 * _tmp2450;
  const Scalar _tmp2453 = _tmp1789 * _tmp2452 + _tmp1791 * _tmp2450 - _tmp1793 * _tmp2452;
  const Scalar _tmp2454 = 2 * _tmp2453;
  const Scalar _tmp2455 = _tmp2194 * _tmp732 - _tmp2195 * _tmp699;
  const Scalar _tmp2456 = _tmp2197 * _tmp781 - _tmp2198 * _tmp699;
  const Scalar _tmp2457 = -_tmp2455 * _tmp873 + _tmp2456 * _tmp889;
  const Scalar _tmp2458 = _tmp1728 * _tmp2457 - _tmp1729 * _tmp2457 + _tmp2455 * _tmp902;
  const Scalar _tmp2459 = 2 * _tmp2458;
  const Scalar _tmp2460 = _tmp2215 * _tmp699 + _tmp2216 * _tmp732;
  const Scalar _tmp2461 = _tmp2212 * _tmp781 - _tmp2213 * _tmp699;
  const Scalar _tmp2462 = -_tmp1251 * _tmp2461 + _tmp1268 * _tmp2460;
  const Scalar _tmp2463 = -_tmp1276 * _tmp2462 + _tmp1279 * _tmp2462 - _tmp1280 * _tmp2461;
  const Scalar _tmp2464 = 2 * _tmp2463;
  const Scalar _tmp2465 = _tmp2328 * _tmp781 + _tmp2329 * _tmp699;
  const Scalar _tmp2466 = _tmp2325 * _tmp732 + _tmp2326 * _tmp699;
  const Scalar _tmp2467 = -_tmp1567 * _tmp2466 + _tmp1584 * _tmp2465;
  const Scalar _tmp2468 = -_tmp1599 * _tmp2466 + _tmp1651 * _tmp2467 - _tmp1652 * _tmp2467;
  const Scalar _tmp2469 = 2 * _tmp2468;
  const Scalar _tmp2470 = -_tmp733 * priors_0_1_sqrt_info(3, 5) +
                          _tmp735 * priors_0_1_sqrt_info(3, 4) -
                          _tmp738 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp2471 = 2 * _tmp2470;
  const Scalar _tmp2472 = _tmp699 * priors_1_0_sqrt_info(4, 5) +
                          _tmp732 * priors_1_0_sqrt_info(4, 4) -
                          _tmp781 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp2473 = 2 * _tmp2472;
  const Scalar _tmp2474 = _tmp2306 * _tmp699 - _tmp2307 * _tmp732;
  const Scalar _tmp2475 = _tmp2303 * _tmp699 + _tmp2304 * _tmp781;
  const Scalar _tmp2476 = _tmp2474 * _tmp972 + _tmp2475 * _tmp967;
  const Scalar _tmp2477 = -_tmp1795 * _tmp2476 + _tmp1796 * _tmp2476 - _tmp2474 * _tmp980;
  const Scalar _tmp2478 = 2 * _tmp2477;
  const Scalar _tmp2479 = _tmp2230 * _tmp732 + _tmp2231 * _tmp699;
  const Scalar _tmp2480 = -_tmp2233 * _tmp699 + _tmp2234 * _tmp781;
  const Scalar _tmp2481 = -_tmp1632 * _tmp2480 + _tmp1633 * _tmp2479;
  const Scalar _tmp2482 = _tmp1640 * _tmp2480 - _tmp1715 * _tmp2481 + _tmp1716 * _tmp2481;
  const Scalar _tmp2483 = 2 * _tmp2482;
  const Scalar _tmp2484 = -_tmp733 * priors_0_1_sqrt_info(5, 5) +
                          _tmp735 * priors_0_1_sqrt_info(5, 4) -
                          _tmp738 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp2485 = 2 * _tmp2484;
  const Scalar _tmp2486 = _tmp2206 * _tmp732 + _tmp2207 * _tmp699;
  const Scalar _tmp2487 = _tmp2203 * _tmp781 + _tmp2204 * _tmp699;
  const Scalar _tmp2488 = -_tmp1059 * _tmp2486 + _tmp1076 * _tmp2487;
  const Scalar _tmp2489 = _tmp1087 * _tmp2488 + _tmp1089 * _tmp2486 - _tmp1091 * _tmp2488;
  const Scalar _tmp2490 = 2 * _tmp2489;
  const Scalar _tmp2491 = _tmp2288 * _tmp732 + _tmp2289 * _tmp699;
  const Scalar _tmp2492 = _tmp2285 * _tmp699 + _tmp2286 * _tmp781;
  const Scalar _tmp2493 = _tmp1670 * _tmp2491 - _tmp1675 * _tmp2492;
  const Scalar _tmp2494 = _tmp1683 * _tmp2491 - _tmp1798 * _tmp2493 + _tmp1799 * _tmp2493;
  const Scalar _tmp2495 = 2 * _tmp2494;
  const Scalar _tmp2496 = _tmp699 * landmarks_16_;
  const Scalar _tmp2497 = _tmp1546 * _tmp2496 - _tmp2349 * _tmp781;
  const Scalar _tmp2498 = _tmp1525 * _tmp2496 - _tmp2347 * _tmp732;
  const Scalar _tmp2499 = _tmp1536 * _tmp2497 - _tmp1537 * _tmp2498;
  const Scalar _tmp2500 = _tmp1536 * _tmp2499;
  const Scalar _tmp2501 = _tmp1544 * _tmp2497 + _tmp1549 * _tmp2500 - _tmp1551 * _tmp2500;
  const Scalar _tmp2502 = 2 * _tmp2501;
  const Scalar _tmp2503 = _tmp699 * landmarks_11_;
  const Scalar _tmp2504 = _tmp2338 * _tmp781 + _tmp2503 * _tmp946;
  const Scalar _tmp2505 = _tmp2340 * _tmp732 + _tmp2503 * _tmp930;
  const Scalar _tmp2506 = _tmp2504 * _tmp936 - _tmp2505 * _tmp937;
  const Scalar _tmp2507 = _tmp2505 * _tmp944 + _tmp2506 * _tmp950 - _tmp2506 * _tmp952;
  const Scalar _tmp2508 = 2 * _tmp2507;
  const Scalar _tmp2509 = _tmp2319 * _tmp699 - _tmp2320 * _tmp732;
  const Scalar _tmp2510 = -_tmp2316 * _tmp781 + _tmp2317 * _tmp699;
  const Scalar _tmp2511 = -_tmp1012 * _tmp2510 + _tmp1026 * _tmp2509;
  const Scalar _tmp2512 = -_tmp1044 * _tmp2510 - _tmp1379 * _tmp2511 + _tmp1380 * _tmp2511;
  const Scalar _tmp2513 = 2 * _tmp2512;
  const Scalar _tmp2514 = _tmp2276 * _tmp781 + _tmp2277 * _tmp699;
  const Scalar _tmp2515 = -_tmp2273 * _tmp699 + _tmp2274 * _tmp732;
  const Scalar _tmp2516 = -_tmp1453 * _tmp2515 + _tmp1458 * _tmp2514;
  const Scalar _tmp2517 = _tmp1469 * _tmp2516 + _tmp1471 * _tmp2515 - _tmp1473 * _tmp2516;
  const Scalar _tmp2518 = 2 * _tmp2517;
  const Scalar _tmp2519 = -_tmp733 * priors_0_1_sqrt_info(4, 5) +
                          _tmp735 * priors_0_1_sqrt_info(4, 4) -
                          _tmp738 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp2520 = 2 * _tmp2519;
  const Scalar _tmp2521 = _tmp2297 * _tmp781 + _tmp2298 * _tmp699;
  const Scalar _tmp2522 = _tmp2294 * _tmp699 + _tmp2295 * _tmp732;
  const Scalar _tmp2523 = _tmp1295 * _tmp2521 - _tmp1309 * _tmp2522;
  const Scalar _tmp2524 = _tmp1327 * _tmp2521 + _tmp1740 * _tmp2523 - _tmp1741 * _tmp2523;
  const Scalar _tmp2525 = 2 * _tmp2524;
  const Scalar _tmp2526 = _tmp699 * landmarks_10_;
  const Scalar _tmp2527 = -_tmp2257 * _tmp732 + _tmp2526 * _tmp840;
  const Scalar _tmp2528 = _tmp2254 * _tmp781 + _tmp2526 * _tmp836;
  const Scalar _tmp2529 = _tmp2527 * _tmp846 + _tmp2528 * _tmp826;
  const Scalar _tmp2530 = _tmp2527 * _tmp858 - _tmp2529 * _tmp904 + _tmp2529 * _tmp905;
  const Scalar _tmp2531 = 2 * _tmp2530;
  const Scalar _tmp2532 = _tmp1409 * landmarks_14_;
  const Scalar _tmp2533 = -_tmp2382 * _tmp732 + _tmp2532 * _tmp699;
  const Scalar _tmp2534 = _tmp1405 * landmarks_14_;
  const Scalar _tmp2535 = -_tmp2379 * _tmp781 + _tmp2534 * _tmp699;
  const Scalar _tmp2536 = -_tmp1395 * _tmp2535 + _tmp1415 * _tmp2533;
  const Scalar _tmp2537 = _tmp1423 * _tmp2536;
  const Scalar _tmp2538 = _tmp1415 * _tmp2537 + _tmp1426 * _tmp2533 - _tmp1711 * _tmp2536;
  const Scalar _tmp2539 = 2 * _tmp2538;
  const Scalar _tmp2540 = _tmp1544 * _tmp2498 - _tmp1550 * _tmp2499 + _tmp1552 * _tmp2499;
  const Scalar _tmp2541 = 2 * _tmp2540;
  const Scalar _tmp2542 = _tmp1228 * _tmp2440 - _tmp1231 * _tmp2440 + _tmp1232 * _tmp2439;
  const Scalar _tmp2543 = 2 * _tmp2542;
  const Scalar _tmp2544 = -_tmp733 * priors_0_1_sqrt_info(1, 5) +
                          _tmp735 * priors_0_1_sqrt_info(1, 4) -
                          _tmp738 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp2545 = 2 * _tmp2544;
  const Scalar _tmp2546 = -_tmp1089 * _tmp2487 - _tmp1706 * _tmp2488 + _tmp1707 * _tmp2488;
  const Scalar _tmp2547 = 2 * _tmp2546;
  const Scalar _tmp2548 = -_tmp733 * priors_0_1_sqrt_info(0, 5) +
                          _tmp735 * priors_0_1_sqrt_info(0, 4) -
                          _tmp738 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp2549 = 2 * _tmp2548;
  const Scalar _tmp2550 = _tmp2267 * _tmp699 + _tmp2268 * _tmp781;
  const Scalar _tmp2551 = _tmp2264 * _tmp699 + _tmp2265 * _tmp732;
  const Scalar _tmp2552 = -_tmp2550 * _tmp788 + _tmp2551 * _tmp768;
  const Scalar _tmp2553 = _tmp2552 * _tmp810;
  const Scalar _tmp2554 = _tmp1737 * _tmp2552 + _tmp2550 * _tmp808 - _tmp2553 * _tmp788;
  const Scalar _tmp2555 = 2 * _tmp2554;
  const Scalar _tmp2556 = _tmp1395 * _tmp2537 - _tmp1426 * _tmp2535 - _tmp1965 * _tmp2536;
  const Scalar _tmp2557 = 2 * _tmp2556;
  const Scalar _tmp2558 = -_tmp1683 * _tmp2492 + _tmp1700 * _tmp2493 - _tmp1702 * _tmp2493;
  const Scalar _tmp2559 = 2 * _tmp2558;
  const Scalar _tmp2560 = _tmp1471 * _tmp2514 + _tmp1921 * _tmp2516 - _tmp1922 * _tmp2516;
  const Scalar _tmp2561 = 2 * _tmp2560;
  const Scalar _tmp2562 = _tmp1280 * _tmp2460 + _tmp1654 * _tmp2462 - _tmp1655 * _tmp2462;
  const Scalar _tmp2563 = 2 * _tmp2562;
  const Scalar _tmp2564 = _tmp699 * priors_1_0_sqrt_info(0, 5) +
                          _tmp732 * priors_1_0_sqrt_info(0, 4) -
                          _tmp781 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp2565 = 2 * _tmp2564;
  const Scalar _tmp2566 = _tmp1595 * _tmp2467 - _tmp1598 * _tmp2467 + _tmp1599 * _tmp2465;
  const Scalar _tmp2567 = 2 * _tmp2566;
  const Scalar _tmp2568 = -_tmp2221 * _tmp699 + _tmp2222 * _tmp781;
  const Scalar _tmp2569 = _tmp2224 * _tmp732 + _tmp2225 * _tmp699;
  const Scalar _tmp2570 = -_tmp1106 * _tmp2569 + _tmp1123 * _tmp2568;
  const Scalar _tmp2571 = -_tmp1138 * _tmp2569 + _tmp1731 * _tmp2570 - _tmp1732 * _tmp2570;
  const Scalar _tmp2572 = 2 * _tmp2571;
  const Scalar _tmp2573 = _tmp2456 * _tmp902 + _tmp2457 * _tmp898 - _tmp2457 * _tmp901;
  const Scalar _tmp2574 = 2 * _tmp2573;
  const Scalar _tmp2575 = _tmp1323 * _tmp2523 - _tmp1326 * _tmp2523 + _tmp1327 * _tmp2522;
  const Scalar _tmp2576 = 2 * _tmp2575;
  const Scalar _tmp2577 = -_tmp1640 * _tmp2479 - _tmp1646 * _tmp2481 + _tmp1648 * _tmp2481;
  const Scalar _tmp2578 = 2 * _tmp2577;
  const Scalar _tmp2579 = _tmp699 * priors_1_0_sqrt_info(5, 5) +
                          _tmp732 * priors_1_0_sqrt_info(5, 4) -
                          _tmp781 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp2580 = 2 * _tmp2579;
  const Scalar _tmp2581 = -_tmp733 * priors_0_1_sqrt_info(2, 5) +
                          _tmp735 * priors_0_1_sqrt_info(2, 4) -
                          _tmp738 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp2582 = 2 * _tmp2581;
  const Scalar _tmp2583 = -_tmp2475 * _tmp980 - _tmp2476 * _tmp994 + _tmp2476 * _tmp996;
  const Scalar _tmp2584 = 2 * _tmp2583;
  const Scalar _tmp2585 = -_tmp2551 * _tmp808 + _tmp2552 * _tmp806 - _tmp2553 * _tmp768;
  const Scalar _tmp2586 = 2 * _tmp2585;
  const Scalar _tmp2587 = _tmp2246 * _tmp699 + _tmp2247 * _tmp732;
  const Scalar _tmp2588 = _tmp2243 * _tmp699 + _tmp2244 * _tmp781;
  const Scalar _tmp2589 = -_tmp1153 * _tmp2588 + _tmp1173 * _tmp2587;
  const Scalar _tmp2590 = _tmp1185 * _tmp2587 - _tmp1734 * _tmp2589 + _tmp1735 * _tmp2589;
  const Scalar _tmp2591 = 2 * _tmp2590;
  const Scalar _tmp2592 = _tmp1040 * _tmp2511 - _tmp1043 * _tmp2511 + _tmp1044 * _tmp2509;
  const Scalar _tmp2593 = 2 * _tmp2592;
  const Scalar _tmp2594 = _tmp1355 * _tmp2444 + _tmp1372 * _tmp2445 - _tmp1374 * _tmp2445;
  const Scalar _tmp2595 = 2 * _tmp2594;
  const Scalar _tmp2596 = _tmp1791 * _tmp2451 + _tmp1807 * _tmp2452 - _tmp1808 * _tmp2452;
  const Scalar _tmp2597 = 2 * _tmp2596;
  const Scalar _tmp2598 = -_tmp1181 * _tmp2589 + _tmp1184 * _tmp2589 + _tmp1185 * _tmp2588;
  const Scalar _tmp2599 = 2 * _tmp2598;
  const Scalar _tmp2600 = _tmp2528 * _tmp858 - _tmp2529 * _tmp854 + _tmp2529 * _tmp857;
  const Scalar _tmp2601 = 2 * _tmp2600;
  const Scalar _tmp2602 = _tmp699 * priors_1_0_sqrt_info(2, 5) +
                          _tmp732 * priors_1_0_sqrt_info(2, 4) -
                          _tmp781 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp2603 = 2 * _tmp2602;
  const Scalar _tmp2604 = _tmp699 * priors_1_0_sqrt_info(3, 5) +
                          _tmp732 * priors_1_0_sqrt_info(3, 4) -
                          _tmp781 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp2605 = 2 * _tmp2604;
  const Scalar _tmp2606 = -_tmp1134 * _tmp2570 + _tmp1137 * _tmp2570 + _tmp1138 * _tmp2568;
  const Scalar _tmp2607 = 2 * _tmp2606;
  const Scalar _tmp2608 = _tmp1376 * _tmp2506 - _tmp1377 * _tmp2506 - _tmp2504 * _tmp944;
  const Scalar _tmp2609 = 2 * _tmp2608;
  const Scalar _tmp2610 = _tmp699 * priors_1_0_sqrt_info(1, 5) +
                          _tmp732 * priors_1_0_sqrt_info(1, 4) -
                          _tmp781 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp2611 = 2 * _tmp2610;
  const Scalar _tmp2612 = _tmp2392 * _tmp761 - _tmp2393 * _tmp783;
  const Scalar _tmp2613 = _tmp2389 * _tmp761 - _tmp2390 * _tmp716;
  const Scalar _tmp2614 = _tmp1342 * _tmp2612 + _tmp1347 * _tmp2613;
  const Scalar _tmp2615 = -_tmp1355 * _tmp2612 + _tmp1372 * _tmp2614 - _tmp1374 * _tmp2614;
  const Scalar _tmp2616 = 2 * _tmp2615;
  const Scalar _tmp2617 = _tmp2197 * _tmp783 - _tmp2198 * _tmp761;
  const Scalar _tmp2618 = _tmp2194 * _tmp716 + _tmp2195 * _tmp761;
  const Scalar _tmp2619 = _tmp2617 * _tmp889 + _tmp2618 * _tmp873;
  const Scalar _tmp2620 = -_tmp1728 * _tmp2619 + _tmp1729 * _tmp2619 + _tmp2618 * _tmp902;
  const Scalar _tmp2621 = 2 * _tmp2620;
  const Scalar _tmp2622 = _tmp2382 * _tmp716 + _tmp2532 * _tmp761;
  const Scalar _tmp2623 = -_tmp2379 * _tmp783 + _tmp2534 * _tmp761;
  const Scalar _tmp2624 = -_tmp1395 * _tmp2623 + _tmp1415 * _tmp2622;
  const Scalar _tmp2625 = _tmp1426 * _tmp2623 - _tmp1964 * _tmp2624 + _tmp1965 * _tmp2624;
  const Scalar _tmp2626 = 2 * _tmp2625;
  const Scalar _tmp2627 = _tmp2316 * _tmp783 - _tmp2317 * _tmp761;
  const Scalar _tmp2628 = _tmp2319 * _tmp761 + _tmp2320 * _tmp716;
  const Scalar _tmp2629 = _tmp1012 * _tmp2627 + _tmp1026 * _tmp2628;
  const Scalar _tmp2630 = -_tmp1044 * _tmp2627 + _tmp1379 * _tmp2629 - _tmp1380 * _tmp2629;
  const Scalar _tmp2631 = 2 * _tmp2630;
  const Scalar _tmp2632 = _tmp761 * landmarks_10_;
  const Scalar _tmp2633 = _tmp2257 * _tmp716 + _tmp2632 * _tmp840;
  const Scalar _tmp2634 = _tmp2254 * _tmp783 + _tmp2632 * _tmp836;
  const Scalar _tmp2635 = _tmp2633 * _tmp846 + _tmp2634 * _tmp826;
  const Scalar _tmp2636 = _tmp2633 * _tmp858 - _tmp2635 * _tmp904 + _tmp2635 * _tmp905;
  const Scalar _tmp2637 = 2 * _tmp2636;
  const Scalar _tmp2638 = -_tmp716 * priors_1_0_sqrt_info(4, 4) +
                          _tmp761 * priors_1_0_sqrt_info(4, 5) -
                          _tmp783 * priors_1_0_sqrt_info(4, 3);
  const Scalar _tmp2639 = 2 * _tmp2638;
  const Scalar _tmp2640 = -_tmp2206 * _tmp716 + _tmp2207 * _tmp761;
  const Scalar _tmp2641 = _tmp2203 * _tmp783 + _tmp2204 * _tmp761;
  const Scalar _tmp2642 = _tmp1059 * _tmp2640 - _tmp1076 * _tmp2641;
  const Scalar _tmp2643 = -_tmp1087 * _tmp2642 + _tmp1089 * _tmp2640 + _tmp1091 * _tmp2642;
  const Scalar _tmp2644 = 2 * _tmp2643;
  const Scalar _tmp2645 = _tmp743 * priors_0_1_sqrt_info(2, 5) -
                          _tmp745 * priors_0_1_sqrt_info(2, 4) -
                          _tmp747 * priors_0_1_sqrt_info(2, 3);
  const Scalar _tmp2646 = 2 * _tmp2645;
  const Scalar _tmp2647 = _tmp1355 * _tmp2613 + _tmp1722 * _tmp2614 - _tmp1723 * _tmp2614;
  const Scalar _tmp2648 = 2 * _tmp2647;
  const Scalar _tmp2649 = _tmp743 * priors_0_1_sqrt_info(0, 5) -
                          _tmp745 * priors_0_1_sqrt_info(0, 4) -
                          _tmp747 * priors_0_1_sqrt_info(0, 3);
  const Scalar _tmp2650 = 2 * _tmp2649;
  const Scalar _tmp2651 = _tmp2230 * _tmp716 - _tmp2231 * _tmp761;
  const Scalar _tmp2652 = -_tmp2233 * _tmp761 + _tmp2234 * _tmp783;
  const Scalar _tmp2653 = _tmp1632 * _tmp2652 + _tmp1633 * _tmp2651;
  const Scalar _tmp2654 = -_tmp1640 * _tmp2651 - _tmp1646 * _tmp2653 + _tmp1648 * _tmp2653;
  const Scalar _tmp2655 = 2 * _tmp2654;
  const Scalar _tmp2656 = -_tmp2264 * _tmp761 + _tmp2265 * _tmp716;
  const Scalar _tmp2657 = _tmp2267 * _tmp761 + _tmp2268 * _tmp783;
  const Scalar _tmp2658 = _tmp2656 * _tmp768 + _tmp2657 * _tmp788;
  const Scalar _tmp2659 = -_tmp1737 * _tmp2658 + _tmp1738 * _tmp2658 + _tmp2657 * _tmp808;
  const Scalar _tmp2660 = 2 * _tmp2659;
  const Scalar _tmp2661 = _tmp1040 * _tmp2629 - _tmp1043 * _tmp2629 + _tmp1044 * _tmp2628;
  const Scalar _tmp2662 = 2 * _tmp2661;
  const Scalar _tmp2663 = _tmp1076 * _tmp2642;
  const Scalar _tmp2664 = _tmp1086 * _tmp2663 + _tmp1089 * _tmp2641 - _tmp1090 * _tmp2663;
  const Scalar _tmp2665 = 2 * _tmp2664;
  const Scalar _tmp2666 = -_tmp2325 * _tmp716 + _tmp2326 * _tmp761;
  const Scalar _tmp2667 = _tmp2328 * _tmp783 + _tmp2329 * _tmp761;
  const Scalar _tmp2668 = _tmp1567 * _tmp2666 - _tmp1584 * _tmp2667;
  const Scalar _tmp2669 = _tmp1595 * _tmp2668 - _tmp1598 * _tmp2668 - _tmp1599 * _tmp2667;
  const Scalar _tmp2670 = 2 * _tmp2669;
  const Scalar _tmp2671 = _tmp2294 * _tmp761 - _tmp2295 * _tmp716;
  const Scalar _tmp2672 = _tmp2297 * _tmp783 + _tmp2298 * _tmp761;
  const Scalar _tmp2673 = -_tmp1295 * _tmp2672 + _tmp1309 * _tmp2671;
  const Scalar _tmp2674 = _tmp1325 * _tmp2673;
  const Scalar _tmp2675 = _tmp1295 * _tmp2674 - _tmp1327 * _tmp2672 - _tmp1741 * _tmp2673;
  const Scalar _tmp2676 = 2 * _tmp2675;
  const Scalar _tmp2677 = _tmp2634 * _tmp858 - _tmp2635 * _tmp854 + _tmp2635 * _tmp857;
  const Scalar _tmp2678 = 2 * _tmp2677;
  const Scalar _tmp2679 = _tmp761 * landmarks_13_;
  const Scalar _tmp2680 = -_tmp1117 * _tmp2679 + _tmp2224 * _tmp716;
  const Scalar _tmp2681 = -_tmp1125 * _tmp2679 + _tmp2222 * _tmp783;
  const Scalar _tmp2682 = _tmp1106 * _tmp2680 + _tmp1123 * _tmp2681;
  const Scalar _tmp2683 = _tmp1138 * _tmp2680 + _tmp1731 * _tmp2682 - _tmp1732 * _tmp2682;
  const Scalar _tmp2684 = 2 * _tmp2683;
  const Scalar _tmp2685 = _tmp2273 * _tmp761 + _tmp2274 * _tmp716;
  const Scalar _tmp2686 = _tmp2276 * _tmp783 + _tmp2277 * _tmp761;
  const Scalar _tmp2687 = _tmp1453 * _tmp2685 + _tmp1458 * _tmp2686;
  const Scalar _tmp2688 = _tmp1471 * _tmp2686 + _tmp1921 * _tmp2687 - _tmp1922 * _tmp2687;
  const Scalar _tmp2689 = 2 * _tmp2688;
  const Scalar _tmp2690 = _tmp761 * landmarks_9_;
  const Scalar _tmp2691 = -_tmp1939 * _tmp2690 + _tmp2216 * _tmp716;
  const Scalar _tmp2692 = _tmp1942 * _tmp2690 - _tmp2212 * _tmp783;
  const Scalar _tmp2693 = -_tmp1251 * _tmp2692 + _tmp1268 * _tmp2691;
  const Scalar _tmp2694 = _tmp1280 * _tmp2691 + _tmp1654 * _tmp2693 - _tmp1655 * _tmp2693;
  const Scalar _tmp2695 = 2 * _tmp2694;
  const Scalar _tmp2696 = _tmp1426 * _tmp2622 + _tmp1710 * _tmp2624 - _tmp1711 * _tmp2624;
  const Scalar _tmp2697 = 2 * _tmp2696;
  const Scalar _tmp2698 = _tmp2303 * _tmp761 + _tmp2304 * _tmp783;
  const Scalar _tmp2699 = _tmp2306 * _tmp761 + _tmp2307 * _tmp716;
  const Scalar _tmp2700 = _tmp2698 * _tmp967 + _tmp2699 * _tmp972;
  const Scalar _tmp2701 = -_tmp1795 * _tmp2700 + _tmp1796 * _tmp2700 - _tmp2699 * _tmp980;
  const Scalar _tmp2702 = 2 * _tmp2701;
  const Scalar _tmp2703 = _tmp761 * landmarks_6_;
  const Scalar _tmp2704 = -_tmp1775 * _tmp2703 + _tmp2374 * _tmp716;
  const Scalar _tmp2705 = _tmp1771 * _tmp2703 + _tmp2372 * _tmp783;
  const Scalar _tmp2706 = _tmp1761 * _tmp2705 + _tmp1781 * _tmp2704;
  const Scalar _tmp2707 = -_tmp1789 * _tmp2706 + _tmp1791 * _tmp2704 + _tmp1793 * _tmp2706;
  const Scalar _tmp2708 = 2 * _tmp2707;
  const Scalar _tmp2709 = _tmp761 * landmarks_11_;
  const Scalar _tmp2710 = _tmp2340 * _tmp716 - _tmp2709 * _tmp930;
  const Scalar _tmp2711 = _tmp2338 * _tmp783 + _tmp2709 * _tmp946;
  const Scalar _tmp2712 = _tmp2710 * _tmp937 + _tmp2711 * _tmp936;
  const Scalar _tmp2713 = _tmp2710 * _tmp944 - _tmp2712 * _tmp950 + _tmp2712 * _tmp952;
  const Scalar _tmp2714 = 2 * _tmp2713;
  const Scalar _tmp2715 = _tmp743 * priors_0_1_sqrt_info(3, 5) -
                          _tmp745 * priors_0_1_sqrt_info(3, 4) -
                          _tmp747 * priors_0_1_sqrt_info(3, 3);
  const Scalar _tmp2716 = 2 * _tmp2715;
  const Scalar _tmp2717 = -_tmp1599 * _tmp2666 - _tmp1651 * _tmp2668 + _tmp1652 * _tmp2668;
  const Scalar _tmp2718 = 2 * _tmp2717;
  const Scalar _tmp2719 = _tmp2617 * _tmp902 + _tmp2619 * _tmp898 - _tmp2619 * _tmp901;
  const Scalar _tmp2720 = 2 * _tmp2719;
  const Scalar _tmp2721 = _tmp2700 * _tmp967;
  const Scalar _tmp2722 = _tmp2698 * _tmp980 + _tmp2721 * _tmp993 - _tmp2721 * _tmp995;
  const Scalar _tmp2723 = 2 * _tmp2722;
  const Scalar _tmp2724 = -_tmp1376 * _tmp2712 + _tmp1377 * _tmp2712 + _tmp2711 * _tmp944;
  const Scalar _tmp2725 = 2 * _tmp2724;
  const Scalar _tmp2726 = _tmp1640 * _tmp2652 + _tmp1715 * _tmp2653 - _tmp1716 * _tmp2653;
  const Scalar _tmp2727 = 2 * _tmp2726;
  const Scalar _tmp2728 = _tmp2243 * _tmp761 + _tmp2244 * _tmp783;
  const Scalar _tmp2729 = _tmp2246 * _tmp761 - _tmp2247 * _tmp716;
  const Scalar _tmp2730 = _tmp1153 * _tmp2728 - _tmp1173 * _tmp2729;
  const Scalar _tmp2731 = _tmp1173 * _tmp2730;
  const Scalar _tmp2732 = _tmp1180 * _tmp2731 - _tmp1183 * _tmp2731 - _tmp1185 * _tmp2729;
  const Scalar _tmp2733 = 2 * _tmp2732;
  const Scalar _tmp2734 = _tmp761 * landmarks_16_;
  const Scalar _tmp2735 = _tmp1546 * _tmp2734 - _tmp2349 * _tmp783;
  const Scalar _tmp2736 = _tmp1525 * _tmp2734 + _tmp2347 * _tmp716;
  const Scalar _tmp2737 = _tmp1536 * _tmp2735 - _tmp1537 * _tmp2736;
  const Scalar _tmp2738 = -_tmp1544 * _tmp2735 - _tmp1725 * _tmp2737 + _tmp1726 * _tmp2737;
  const Scalar _tmp2739 = 2 * _tmp2738;
  const Scalar _tmp2740 = -_tmp1134 * _tmp2682 + _tmp1137 * _tmp2682 + _tmp1138 * _tmp2681;
  const Scalar _tmp2741 = 2 * _tmp2740;
  const Scalar _tmp2742 = -_tmp716 * priors_1_0_sqrt_info(0, 4) +
                          _tmp761 * priors_1_0_sqrt_info(0, 5) -
                          _tmp783 * priors_1_0_sqrt_info(0, 3);
  const Scalar _tmp2743 = 2 * _tmp2742;
  const Scalar _tmp2744 = _tmp1791 * _tmp2705 + _tmp1807 * _tmp2706 - _tmp1808 * _tmp2706;
  const Scalar _tmp2745 = 2 * _tmp2744;
  const Scalar _tmp2746 = _tmp743 * priors_0_1_sqrt_info(5, 5) -
                          _tmp745 * priors_0_1_sqrt_info(5, 4) -
                          _tmp747 * priors_0_1_sqrt_info(5, 3);
  const Scalar _tmp2747 = 2 * _tmp2746;
  const Scalar _tmp2748 = _tmp1181 * _tmp2730 - _tmp1184 * _tmp2730 + _tmp1185 * _tmp2728;
  const Scalar _tmp2749 = 2 * _tmp2748;
  const Scalar _tmp2750 = -_tmp2656 * _tmp808 + _tmp2658 * _tmp806 - _tmp2658 * _tmp811;
  const Scalar _tmp2751 = 2 * _tmp2750;
  const Scalar _tmp2752 = -_tmp716 * priors_1_0_sqrt_info(5, 4) +
                          _tmp761 * priors_1_0_sqrt_info(5, 5) -
                          _tmp783 * priors_1_0_sqrt_info(5, 3);
  const Scalar _tmp2753 = 2 * _tmp2752;
  const Scalar _tmp2754 = _tmp1309 * _tmp2674 - _tmp1323 * _tmp2673 + _tmp1327 * _tmp2671;
  const Scalar _tmp2755 = 2 * _tmp2754;
  const Scalar _tmp2756 = _tmp743 * priors_0_1_sqrt_info(4, 5) -
                          _tmp745 * priors_0_1_sqrt_info(4, 4) -
                          _tmp747 * priors_0_1_sqrt_info(4, 3);
  const Scalar _tmp2757 = 2 * _tmp2756;
  const Scalar _tmp2758 = -_tmp2288 * _tmp716 + _tmp2289 * _tmp761;
  const Scalar _tmp2759 = _tmp2285 * _tmp761 + _tmp2286 * _tmp783;
  const Scalar _tmp2760 = _tmp1670 * _tmp2758 - _tmp1675 * _tmp2759;
  const Scalar _tmp2761 = _tmp1683 * _tmp2758 - _tmp1798 * _tmp2760 + _tmp1799 * _tmp2760;
  const Scalar _tmp2762 = 2 * _tmp2761;
  const Scalar _tmp2763 = -_tmp716 * priors_1_0_sqrt_info(2, 4) +
                          _tmp761 * priors_1_0_sqrt_info(2, 5) -
                          _tmp783 * priors_1_0_sqrt_info(2, 3);
  const Scalar _tmp2764 = 2 * _tmp2763;
  const Scalar _tmp2765 = _tmp2366 * _tmp716 - _tmp2438 * _tmp761;
  const Scalar _tmp2766 = _tmp2364 * _tmp783 + _tmp2436 * _tmp761;
  const Scalar _tmp2767 = _tmp1200 * _tmp2766 + _tmp1220 * _tmp2765;
  const Scalar _tmp2768 = _tmp1228 * _tmp2767 - _tmp1231 * _tmp2767 - _tmp1232 * _tmp2765;
  const Scalar _tmp2769 = 2 * _tmp2768;
  const Scalar _tmp2770 = -_tmp1469 * _tmp2687 + _tmp1471 * _tmp2685 + _tmp1473 * _tmp2687;
  const Scalar _tmp2771 = 2 * _tmp2770;
  const Scalar _tmp2772 = -_tmp716 * priors_1_0_sqrt_info(3, 4) +
                          _tmp761 * priors_1_0_sqrt_info(3, 5) -
                          _tmp783 * priors_1_0_sqrt_info(3, 3);
  const Scalar _tmp2773 = 2 * _tmp2772;
  const Scalar _tmp2774 = _tmp1544 * _tmp2736 - _tmp1550 * _tmp2737 + _tmp1552 * _tmp2737;
  const Scalar _tmp2775 = 2 * _tmp2774;
  const Scalar _tmp2776 = _tmp1276 * _tmp2693 - _tmp1279 * _tmp2693 + _tmp1280 * _tmp2692;
  const Scalar _tmp2777 = 2 * _tmp2776;
  const Scalar _tmp2778 = _tmp1232 * _tmp2766 + _tmp1719 * _tmp2767 - _tmp1720 * _tmp2767;
  const Scalar _tmp2779 = 2 * _tmp2778;
  const Scalar _tmp2780 = -_tmp716 * priors_1_0_sqrt_info(1, 4) +
                          _tmp761 * priors_1_0_sqrt_info(1, 5) -
                          _tmp783 * priors_1_0_sqrt_info(1, 3);
  const Scalar _tmp2781 = 2 * _tmp2780;
  const Scalar _tmp2782 = _tmp743 * priors_0_1_sqrt_info(1, 5) -
                          _tmp745 * priors_0_1_sqrt_info(1, 4) -
                          _tmp747 * priors_0_1_sqrt_info(1, 3);
  const Scalar _tmp2783 = 2 * _tmp2782;
  const Scalar _tmp2784 = _tmp1675 * _tmp2760;
  const Scalar _tmp2785 = _tmp1683 * _tmp2759 - _tmp1699 * _tmp2784 + _tmp1701 * _tmp2784;
  const Scalar _tmp2786 = 2 * _tmp2785;
  const Scalar _tmp2787 = std::pow(matches_0_0_weight, Scalar(2)) / std::pow(_tmp598, Scalar(2));
  const Scalar _tmp2788 = _tmp147 * _tmp721 - _tmp152 * _tmp732 + _tmp157 * _tmp716;
  const Scalar _tmp2789 = _tmp2788 * views_1_calibration(1, 0);
  const Scalar _tmp2790 = _tmp147 * _tmp703 - _tmp152 * _tmp699 - _tmp157 * _tmp761;
  const Scalar _tmp2791 = -_tmp1931 * _tmp2790 + _tmp2789 * _tmp871;
  const Scalar _tmp2792 = _tmp2790 * views_1_calibration(0, 0);
  const Scalar _tmp2793 = -_tmp147 * _tmp785 + _tmp152 * _tmp781 + _tmp157 * _tmp783;
  const Scalar _tmp2794 = _tmp2793 * views_1_calibration(0, 0);
  const Scalar _tmp2795 = _tmp1928 * _tmp2792 + _tmp2794 * _tmp871;
  const Scalar _tmp2796 = _tmp2791 * _tmp873 + _tmp2795 * _tmp889;
  const Scalar _tmp2797 = -_tmp2795 * _tmp902 - _tmp2796 * _tmp898 + _tmp2796 * _tmp901;
  const Scalar _tmp2798 = 2 * _tmp2797;
  const Scalar _tmp2799 = -_tmp1728 * _tmp2796 + _tmp1729 * _tmp2796 + _tmp2791 * _tmp902;
  const Scalar _tmp2800 = 2 * _tmp2799;
  const Scalar _tmp2801 = _tmp1010 * _tmp2794 + _tmp1021 * _tmp2792;
  const Scalar _tmp2802 = _tmp2790 * views_1_calibration(1, 0);
  const Scalar _tmp2803 = _tmp1010 * _tmp2789 - _tmp1027 * _tmp2802;
  const Scalar _tmp2804 = _tmp1012 * _tmp2801 + _tmp1026 * _tmp2803;
  const Scalar _tmp2805 = _tmp1044 * _tmp2801 - _tmp1379 * _tmp2804 + _tmp1380 * _tmp2804;
  const Scalar _tmp2806 = 2 * _tmp2805;
  const Scalar _tmp2807 = std::pow(matches_0_1_weight, Scalar(2)) / std::pow(_tmp601, Scalar(2));
  const Scalar _tmp2808 = _tmp1040 * _tmp2804 - _tmp1043 * _tmp2804 + _tmp1044 * _tmp2803;
  const Scalar _tmp2809 = 2 * _tmp2808;
  const Scalar _tmp2810 = std::pow(matches_0_2_weight, Scalar(2)) / std::pow(_tmp604, Scalar(2));
  const Scalar _tmp2811 = -_tmp1293 * _tmp2794 + _tmp1304 * _tmp2792;
  const Scalar _tmp2812 = _tmp1293 * _tmp2789 + _tmp1310 * _tmp2802;
  const Scalar _tmp2813 = _tmp1295 * _tmp2811 - _tmp1309 * _tmp2812;
  const Scalar _tmp2814 = _tmp1327 * _tmp2811 + _tmp1740 * _tmp2813 - _tmp1741 * _tmp2813;
  const Scalar _tmp2815 = 2 * _tmp2814;
  const Scalar _tmp2816 = _tmp1323 * _tmp2813 - _tmp1326 * _tmp2813 + _tmp1327 * _tmp2812;
  const Scalar _tmp2817 = 2 * _tmp2816;
  const Scalar _tmp2818 = std::pow(matches_0_3_weight, Scalar(2)) / std::pow(_tmp607, Scalar(2));
  const Scalar _tmp2819 = _tmp1565 * _tmp2794 - _tmp1585 * _tmp2792;
  const Scalar _tmp2820 = _tmp1565 * _tmp2789 + _tmp1577 * _tmp2802;
  const Scalar _tmp2821 = _tmp1567 * _tmp2820 + _tmp1584 * _tmp2819;
  const Scalar _tmp2822 = _tmp1595 * _tmp2821 - _tmp1598 * _tmp2821 + _tmp1599 * _tmp2819;
  const Scalar _tmp2823 = 2 * _tmp2822;
  const Scalar _tmp2824 = _tmp1599 * _tmp2820 + _tmp1651 * _tmp2821 - _tmp1652 * _tmp2821;
  const Scalar _tmp2825 = 2 * _tmp2824;
  const Scalar _tmp2826 = _tmp1668 * _tmp2789 + _tmp1695 * _tmp2802;
  const Scalar _tmp2827 = _tmp1668 * _tmp2794 - _tmp1689 * _tmp2792;
  const Scalar _tmp2828 = _tmp1670 * _tmp2826 + _tmp1675 * _tmp2827;
  const Scalar _tmp2829 = -_tmp1683 * _tmp2826 + _tmp1798 * _tmp2828 - _tmp1799 * _tmp2828;
  const Scalar _tmp2830 = 2 * _tmp2829;
  const Scalar _tmp2831 = std::pow(matches_0_4_weight, Scalar(2)) / std::pow(_tmp610, Scalar(2));
  const Scalar _tmp2832 = _tmp1683 * _tmp2827 + _tmp1700 * _tmp2828 - _tmp1702 * _tmp2828;
  const Scalar _tmp2833 = 2 * _tmp2832;
  const Scalar _tmp2834 = -_tmp1151 * _tmp2794 + _tmp1162 * _tmp2792;
  const Scalar _tmp2835 = _tmp1151 * _tmp2789 + _tmp1170 * _tmp2802;
  const Scalar _tmp2836 = _tmp1153 * _tmp2834 - _tmp1173 * _tmp2835;
  const Scalar _tmp2837 = _tmp1185 * _tmp2835 + _tmp1734 * _tmp2836 - _tmp1735 * _tmp2836;
  const Scalar _tmp2838 = 2 * _tmp2837;
  const Scalar _tmp2839 = -_tmp1181 * _tmp2836 + _tmp1184 * _tmp2836 - _tmp1185 * _tmp2834;
  const Scalar _tmp2840 = 2 * _tmp2839;
  const Scalar _tmp2841 = std::pow(matches_0_5_weight, Scalar(2)) / std::pow(_tmp613, Scalar(2));
  const Scalar _tmp2842 = std::pow(matches_0_6_weight, Scalar(2)) / std::pow(_tmp616, Scalar(2));
  const Scalar _tmp2843 = _tmp1759 * _tmp2794 - _tmp1770 * _tmp2792;
  const Scalar _tmp2844 = _tmp1759 * _tmp2789 + _tmp1774 * _tmp2802;
  const Scalar _tmp2845 = _tmp1761 * _tmp2843 + _tmp1781 * _tmp2844;
  const Scalar _tmp2846 = _tmp1791 * _tmp2843 + _tmp1807 * _tmp2845 - _tmp1808 * _tmp2845;
  const Scalar _tmp2847 = 2 * _tmp2846;
  const Scalar _tmp2848 = _tmp1789 * _tmp2845 - _tmp1791 * _tmp2844 - _tmp1793 * _tmp2845;
  const Scalar _tmp2849 = 2 * _tmp2848;
  const Scalar _tmp2850 = _tmp1198 * _tmp2789 + _tmp1217 * _tmp2802;
  const Scalar _tmp2851 = -_tmp1198 * _tmp2794 + _tmp1209 * _tmp2792;
  const Scalar _tmp2852 = -_tmp1200 * _tmp2851 + _tmp1220 * _tmp2850;
  const Scalar _tmp2853 = _tmp1220 * _tmp2852;
  const Scalar _tmp2854 = -_tmp1227 * _tmp2853 + _tmp1230 * _tmp2853 + _tmp1232 * _tmp2850;
  const Scalar _tmp2855 = 2 * _tmp2854;
  const Scalar _tmp2856 = _tmp1232 * _tmp2851 - _tmp1719 * _tmp2852 + _tmp1720 * _tmp2852;
  const Scalar _tmp2857 = 2 * _tmp2856;
  const Scalar _tmp2858 = std::pow(matches_0_7_weight, Scalar(2)) / std::pow(_tmp619, Scalar(2));
  const Scalar _tmp2859 = std::pow(matches_0_8_weight, Scalar(2)) / std::pow(_tmp622, Scalar(2));
  const Scalar _tmp2860 = _tmp1057 * _tmp2794 - _tmp1078 * _tmp2790;
  const Scalar _tmp2861 = _tmp1057 * _tmp2789 + _tmp1066 * _tmp2802;
  const Scalar _tmp2862 = _tmp1059 * _tmp2861 + _tmp1076 * _tmp2860;
  const Scalar _tmp2863 = -_tmp1089 * _tmp2860 - _tmp1706 * _tmp2862 + _tmp1707 * _tmp2862;
  const Scalar _tmp2864 = 2 * _tmp2863;
  const Scalar _tmp2865 = -_tmp1087 * _tmp2862 + _tmp1089 * _tmp2861 + _tmp1091 * _tmp2862;
  const Scalar _tmp2866 = 2 * _tmp2865;
  const Scalar _tmp2867 = _tmp1249 * _tmp2789 + _tmp1939 * _tmp2790;
  const Scalar _tmp2868 = _tmp1249 * _tmp2794 + _tmp1941 * _tmp2792;
  const Scalar _tmp2869 = _tmp1251 * _tmp2868 + _tmp1268 * _tmp2867;
  const Scalar _tmp2870 = _tmp1251 * _tmp2869;
  const Scalar _tmp2871 = -_tmp1275 * _tmp2870 + _tmp1278 * _tmp2870 + _tmp1280 * _tmp2868;
  const Scalar _tmp2872 = 2 * _tmp2871;
  const Scalar _tmp2873 = std::pow(matches_0_9_weight, Scalar(2)) / std::pow(_tmp625, Scalar(2));
  const Scalar _tmp2874 = _tmp1280 * _tmp2867 + _tmp1654 * _tmp2869 - _tmp1655 * _tmp2869;
  const Scalar _tmp2875 = 2 * _tmp2874;
  const Scalar _tmp2876 = std::pow(matches_0_10_weight, Scalar(2)) / std::pow(_tmp628, Scalar(2));
  const Scalar _tmp2877 = -_tmp2792 * _tmp835 + _tmp2793 * _tmp825;
  const Scalar _tmp2878 = -_tmp2788 * _tmp844 + _tmp2802 * _tmp839;
  const Scalar _tmp2879 = _tmp2877 * _tmp826 - _tmp2878 * _tmp846;
  const Scalar _tmp2880 = -_tmp2877 * _tmp858 + _tmp2879 * _tmp854 - _tmp2879 * _tmp857;
  const Scalar _tmp2881 = 2 * _tmp2880;
  const Scalar _tmp2882 = _tmp2878 * _tmp858 + _tmp2879 * _tmp904 - _tmp2879 * _tmp905;
  const Scalar _tmp2883 = 2 * _tmp2882;
  const Scalar _tmp2884 = std::pow(matches_0_11_weight, Scalar(2)) / std::pow(_tmp631, Scalar(2));
  const Scalar _tmp2885 = -_tmp2792 * _tmp945 + _tmp2794 * _tmp918;
  const Scalar _tmp2886 = _tmp2789 * _tmp918 + _tmp2802 * _tmp929;
  const Scalar _tmp2887 = _tmp2885 * _tmp936 + _tmp2886 * _tmp937;
  const Scalar _tmp2888 = -_tmp1376 * _tmp2887 + _tmp1377 * _tmp2887 + _tmp2885 * _tmp944;
  const Scalar _tmp2889 = 2 * _tmp2888;
  const Scalar _tmp2890 = _tmp2886 * _tmp944 - _tmp2887 * _tmp950 + _tmp2887 * _tmp952;
  const Scalar _tmp2891 = 2 * _tmp2890;
  const Scalar _tmp2892 = std::pow(matches_0_12_weight, Scalar(2)) / std::pow(_tmp634, Scalar(2));
  const Scalar _tmp2893 = _tmp1340 * _tmp2794 + _tmp1361 * _tmp2792;
  const Scalar _tmp2894 = _tmp1340 * _tmp2789 + _tmp1367 * _tmp2802;
  const Scalar _tmp2895 = _tmp1342 * _tmp2893 + _tmp1347 * _tmp2894;
  const Scalar _tmp2896 = -_tmp1355 * _tmp2893 + _tmp1372 * _tmp2895 - _tmp1374 * _tmp2895;
  const Scalar _tmp2897 = 2 * _tmp2896;
  const Scalar _tmp2898 = _tmp1355 * _tmp2894 + _tmp1722 * _tmp2895 - _tmp1723 * _tmp2895;
  const Scalar _tmp2899 = 2 * _tmp2898;
  const Scalar _tmp2900 = _tmp1104 * _tmp2794 + _tmp1125 * _tmp2790;
  const Scalar _tmp2901 = _tmp1104 * _tmp2789 + _tmp1116 * _tmp2802;
  const Scalar _tmp2902 = _tmp1106 * _tmp2901 + _tmp1123 * _tmp2900;
  const Scalar _tmp2903 = _tmp1138 * _tmp2901 + _tmp1731 * _tmp2902 - _tmp1732 * _tmp2902;
  const Scalar _tmp2904 = 2 * _tmp2903;
  const Scalar _tmp2905 = std::pow(matches_0_13_weight, Scalar(2)) / std::pow(_tmp637, Scalar(2));
  const Scalar _tmp2906 = _tmp1134 * _tmp2902 - _tmp1137 * _tmp2902 - _tmp1138 * _tmp2900;
  const Scalar _tmp2907 = 2 * _tmp2906;
  const Scalar _tmp2908 = _tmp1393 * _tmp2789 - _tmp1408 * _tmp2802;
  const Scalar _tmp2909 = _tmp1393 * _tmp2794 + _tmp1404 * _tmp2792;
  const Scalar _tmp2910 = _tmp1395 * _tmp2909 + _tmp1415 * _tmp2908;
  const Scalar _tmp2911 = -_tmp1426 * _tmp2909 - _tmp1964 * _tmp2910 + _tmp1965 * _tmp2910;
  const Scalar _tmp2912 = 2 * _tmp2911;
  const Scalar _tmp2913 = -_tmp1426 * _tmp2908 - _tmp1710 * _tmp2910 + _tmp1711 * _tmp2910;
  const Scalar _tmp2914 = 2 * _tmp2913;
  const Scalar _tmp2915 = std::pow(matches_0_14_weight, Scalar(2)) / std::pow(_tmp640, Scalar(2));
  const Scalar _tmp2916 = _tmp2789 * _tmp766 + _tmp2802 * _tmp778;
  const Scalar _tmp2917 = -_tmp2792 * _tmp789 + _tmp2794 * _tmp766;
  const Scalar _tmp2918 = _tmp2916 * _tmp768 + _tmp2917 * _tmp788;
  const Scalar _tmp2919 = _tmp2916 * _tmp808 - _tmp2918 * _tmp806 + _tmp2918 * _tmp811;
  const Scalar _tmp2920 = 2 * _tmp2919;
  const Scalar _tmp2921 = std::pow(matches_0_15_weight, Scalar(2)) / std::pow(_tmp643, Scalar(2));
  const Scalar _tmp2922 = -_tmp1737 * _tmp2918 + _tmp1738 * _tmp2918 + _tmp2917 * _tmp808;
  const Scalar _tmp2923 = 2 * _tmp2922;
  const Scalar _tmp2924 = _tmp1535 * _tmp2793 + _tmp1545 * _tmp2792;
  const Scalar _tmp2925 = _tmp1524 * _tmp2802 - _tmp1530 * _tmp2788;
  const Scalar _tmp2926 = _tmp1536 * _tmp2924 - _tmp1537 * _tmp2925;
  const Scalar _tmp2927 = -_tmp1544 * _tmp2925 + _tmp1550 * _tmp2926 - _tmp1552 * _tmp2926;
  const Scalar _tmp2928 = 2 * _tmp2927;
  const Scalar _tmp2929 = -_tmp1544 * _tmp2924 - _tmp1725 * _tmp2926 + _tmp1726 * _tmp2926;
  const Scalar _tmp2930 = 2 * _tmp2929;
  const Scalar _tmp2931 = std::pow(matches_0_16_weight, Scalar(2)) / std::pow(_tmp646, Scalar(2));
  const Scalar _tmp2932 = -_tmp1450 * _tmp2794 + _tmp1459 * _tmp2792;
  const Scalar _tmp2933 = _tmp1445 * _tmp2802 - _tmp1450 * _tmp2789;
  const Scalar _tmp2934 = _tmp1453 * _tmp2933 + _tmp1458 * _tmp2932;
  const Scalar _tmp2935 = _tmp1469 * _tmp2934 - _tmp1471 * _tmp2933 - _tmp1473 * _tmp2934;
  const Scalar _tmp2936 = 2 * _tmp2935;
  const Scalar _tmp2937 = std::pow(matches_0_17_weight, Scalar(2)) / std::pow(_tmp649, Scalar(2));
  const Scalar _tmp2938 = _tmp1471 * _tmp2932 + _tmp1921 * _tmp2934 - _tmp1922 * _tmp2934;
  const Scalar _tmp2939 = 2 * _tmp2938;
  const Scalar _tmp2940 = _tmp2030 * _tmp2792 - _tmp2794 * _tmp965;
  const Scalar _tmp2941 = -_tmp2033 * _tmp2790 + _tmp2789 * _tmp965;
  const Scalar _tmp2942 = -_tmp2940 * _tmp967 + _tmp2941 * _tmp972;
  const Scalar _tmp2943 = _tmp2940 * _tmp980 - _tmp2942 * _tmp994 + _tmp2942 * _tmp996;
  const Scalar _tmp2944 = 2 * _tmp2943;
  const Scalar _tmp2945 = _tmp1795 * _tmp2942 - _tmp1796 * _tmp2942 + _tmp2941 * _tmp980;
  const Scalar _tmp2946 = 2 * _tmp2945;
  const Scalar _tmp2947 = std::pow(matches_0_18_weight, Scalar(2)) / std::pow(_tmp652, Scalar(2));
  const Scalar _tmp2948 = _tmp1620 * _tmp2802 + _tmp1626 * _tmp2788;
  const Scalar _tmp2949 = _tmp1631 * _tmp2793 + _tmp1641 * _tmp2792;
  const Scalar _tmp2950 = _tmp1632 * _tmp2949 + _tmp1633 * _tmp2948;
  const Scalar _tmp2951 = _tmp1633 * _tmp2950;
  const Scalar _tmp2952 = _tmp1640 * _tmp2948 + _tmp1645 * _tmp2951 - _tmp1647 * _tmp2951;
  const Scalar _tmp2953 = 2 * _tmp2952;
  const Scalar _tmp2954 = std::pow(matches_0_19_weight, Scalar(2)) / std::pow(_tmp655, Scalar(2));
  const Scalar _tmp2955 = _tmp1640 * _tmp2949 + _tmp1715 * _tmp2950 - _tmp1716 * _tmp2950;
  const Scalar _tmp2956 = 2 * _tmp2955;
  const Scalar _tmp2957 = 4 * _tmp2517;
  const Scalar _tmp2958 = 4 * _tmp2494;
  const Scalar _tmp2959 = 4 * _tmp2573;
  const Scalar _tmp2960 = 4 * _tmp2359;
  const Scalar _tmp2961 = 4 * _tmp2571;
  const Scalar _tmp2962 = 4 * _tmp2600;
  const Scalar _tmp2963 = 4 * _tmp2357;
  const Scalar _tmp2964 = 4 * _tmp2564;
  const Scalar _tmp2965 = 4 * _tmp2579;
  const Scalar _tmp2966 = 4 * _tmp2252;
  const Scalar _tmp2967 = 4 * _tmp2396;
  const Scalar _tmp2968 = 4 * _tmp2260;
  const Scalar _tmp2969 = 4 * _tmp2558;
  const Scalar _tmp2970 = 4 * _tmp2598;
  const Scalar _tmp2971 = 4 * _tmp2416;
  const Scalar _tmp2972 = 4 * _tmp2283;
  const Scalar _tmp2973 = 4 * _tmp2241;
  const Scalar _tmp2974 = 4 * _tmp2470;
  const Scalar _tmp2975 = 4 * _tmp2581;
  const Scalar _tmp2976 = 4 * _tmp2538;
  const Scalar _tmp2977 = 4 * _tmp2544;
  const Scalar _tmp2978 = 4 * _tmp2548;
  const Scalar _tmp2979 = 4 * _tmp2323;
  const Scalar _tmp2980 = 4 * _tmp2507;
  const Scalar _tmp2981 = 4 * _tmp2353;
  const Scalar _tmp2982 = 4 * _tmp2219;
  const Scalar _tmp2983 = 4 * _tmp2489;
  const Scalar _tmp2984 = 4 * _tmp2410;
  const Scalar _tmp2985 = 4 * _tmp2577;
  const Scalar _tmp2986 = 4 * _tmp2608;
  const Scalar _tmp2987 = 4 * _tmp2594;
  const Scalar _tmp2988 = 4 * _tmp2228;
  const Scalar _tmp2989 = 4 * _tmp2250;
  const Scalar _tmp2990 = 4 * _tmp2422;
  const Scalar _tmp2991 = 4 * _tmp2453;
  const Scalar _tmp2992 = 4 * _tmp2333;
  const Scalar _tmp2993 = 4 * _tmp2458;
  const Scalar _tmp2994 = 4 * _tmp2408;
  const Scalar _tmp2995 = 4 * _tmp2477;
  const Scalar _tmp2996 = 4 * _tmp2271;
  const Scalar _tmp2997 = 4 * _tmp2385;
  const Scalar _tmp2998 = 4 * _tmp2583;
  const Scalar _tmp2999 = 4 * _tmp2210;
  const Scalar _tmp3000 = 4 * _tmp2301;
  const Scalar _tmp3001 = 4 * _tmp2776;
  const Scalar _tmp3002 = 4 * _tmp2694;
  const Scalar _tmp3003 = 4 * _tmp2310;
  const Scalar _tmp3004 = 4 * _tmp2724;
  const Scalar _tmp3005 = 4 * _tmp2780;
  const Scalar _tmp3006 = 4 * _tmp2763;
  const Scalar _tmp3007 = 4 * _tmp2772;
  const Scalar _tmp3008 = 4 * _tmp2661;
  const Scalar _tmp3009 = 4 * _tmp2778;
  const Scalar _tmp3010 = 4 * _tmp2732;
  const Scalar _tmp3011 = 4 * _tmp2701;
  const Scalar _tmp3012 = 4 * _tmp2620;
  const Scalar _tmp3013 = 4 * _tmp2643;
  const Scalar _tmp3014 = 4 * _tmp2262;
  const Scalar _tmp3015 = 4 * _tmp2761;
  const Scalar _tmp3016 = 4 * _tmp2688;
  const Scalar _tmp3017 = 4 * _tmp2654;
  const Scalar _tmp3018 = 4 * _tmp2664;
  const Scalar _tmp3019 = 4 * _tmp2377;
  const Scalar _tmp3020 = 4 * _tmp2426;
  const Scalar _tmp3021 = 4 * _tmp2726;
  const Scalar _tmp3022 = 4 * _tmp2659;
  const Scalar _tmp3023 = 4 * _tmp2797;
  const Scalar _tmp3024 = 4 * _tmp2808;
  const Scalar _tmp3025 = 4 * _tmp2816;
  const Scalar _tmp3026 = 4 * _tmp2832;
  const Scalar _tmp3027 = 4 * _tmp2839;
  const Scalar _tmp3028 = 4 * _tmp2846;
  const Scalar _tmp3029 = 4 * _tmp2856;
  const Scalar _tmp3030 = 4 * _tmp2871;
  const Scalar _tmp3031 = 4 * _tmp2880;
  const Scalar _tmp3032 = 4 * _tmp2890;
  const Scalar _tmp3033 = 4 * _tmp2913;
  const Scalar _tmp3034 = 4 * _tmp2929;
  const Scalar _tmp3035 = 4 * _tmp2935;
  const Scalar _tmp3036 = 4 * _tmp2938;
  const Scalar _tmp3037 = 4 * _tmp2955;
  const Scalar _tmp3038 = 4 * _tmp2647;
  const Scalar _tmp3039 = 4 * _tmp2585;
  const Scalar _tmp3040 = 4 * _tmp2669;
  const Scalar _tmp3041 = 4 * _tmp2768;
  const Scalar _tmp3042 = 4 * _tmp2675;
  const Scalar _tmp3043 = 4 * _tmp2636;
  const Scalar _tmp3044 = 4 * _tmp2540;
  const Scalar _tmp3045 = 4 * _tmp2625;
  const Scalar _tmp3046 = 4 * _tmp2805;
  const Scalar _tmp3047 = 4 * _tmp2824;
  const Scalar _tmp3048 = 4 * _tmp2906;

  // Output terms (4)
  if (residual != nullptr) {
    Eigen::Matrix<Scalar, 72, 1>& _residual = (*residual);

    _residual(0, 0) = _tmp58;
    _residual(1, 0) = _tmp59;
    _residual(2, 0) = _tmp60;
    _residual(3, 0) = _tmp61;
    _residual(4, 0) = _tmp62;
    _residual(5, 0) = _tmp63;
    _residual(6, 0) = _tmp127;
    _residual(7, 0) = _tmp128;
    _residual(8, 0) = _tmp129;
    _residual(9, 0) = _tmp130;
    _residual(10, 0) = _tmp131;
    _residual(11, 0) = _tmp133;
    _residual(12, 0) = _tmp177;
    _residual(13, 0) = _tmp178;
    _residual(14, 0) = _tmp199;
    _residual(15, 0) = _tmp200;
    _residual(16, 0) = _tmp221;
    _residual(17, 0) = _tmp222;
    _residual(18, 0) = _tmp243;
    _residual(19, 0) = _tmp244;
    _residual(20, 0) = _tmp265;
    _residual(21, 0) = _tmp266;
    _residual(22, 0) = _tmp287;
    _residual(23, 0) = _tmp288;
    _residual(24, 0) = _tmp309;
    _residual(25, 0) = _tmp310;
    _residual(26, 0) = _tmp331;
    _residual(27, 0) = _tmp332;
    _residual(28, 0) = _tmp353;
    _residual(29, 0) = _tmp354;
    _residual(30, 0) = _tmp375;
    _residual(31, 0) = _tmp376;
    _residual(32, 0) = _tmp397;
    _residual(33, 0) = _tmp398;
    _residual(34, 0) = _tmp419;
    _residual(35, 0) = _tmp420;
    _residual(36, 0) = _tmp441;
    _residual(37, 0) = _tmp442;
    _residual(38, 0) = _tmp463;
    _residual(39, 0) = _tmp464;
    _residual(40, 0) = _tmp485;
    _residual(41, 0) = _tmp486;
    _residual(42, 0) = _tmp507;
    _residual(43, 0) = _tmp508;
    _residual(44, 0) = _tmp529;
    _residual(45, 0) = _tmp530;
    _residual(46, 0) = _tmp551;
    _residual(47, 0) = _tmp552;
    _residual(48, 0) = _tmp573;
    _residual(49, 0) = _tmp574;
    _residual(50, 0) = _tmp595;
    _residual(51, 0) = _tmp596;
    _residual(52, 0) = _tmp597 * _tmp599;
    _residual(53, 0) = _tmp600 * _tmp602;
    _residual(54, 0) = _tmp603 * _tmp605;
    _residual(55, 0) = _tmp606 * _tmp608;
    _residual(56, 0) = _tmp609 * _tmp611;
    _residual(57, 0) = _tmp612 * _tmp614;
    _residual(58, 0) = _tmp615 * _tmp617;
    _residual(59, 0) = _tmp618 * _tmp620;
    _residual(60, 0) = _tmp621 * _tmp623;
    _residual(61, 0) = _tmp624 * _tmp626;
    _residual(62, 0) = _tmp627 * _tmp629;
    _residual(63, 0) = _tmp630 * _tmp632;
    _residual(64, 0) = _tmp633 * _tmp635;
    _residual(65, 0) = _tmp636 * _tmp638;
    _residual(66, 0) = _tmp639 * _tmp641;
    _residual(67, 0) = _tmp642 * _tmp644;
    _residual(68, 0) = _tmp645 * _tmp647;
    _residual(69, 0) = _tmp648 * _tmp650;
    _residual(70, 0) = _tmp651 * _tmp653;
    _residual(71, 0) = _tmp654 * _tmp656;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 26, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp1045 * _tmp200 - _tmp1092 * _tmp354 - _tmp1139 * _tmp463 - _tmp1186 * _tmp287 +
                 _tmp1233 * _tmp332 + _tmp1237 * _tmp128 + _tmp127 * _tmp1747 - _tmp1281 * _tmp375 +
                 _tmp129 * _tmp1714 + _tmp130 * _tmp1746 + _tmp131 * _tmp1705 + _tmp1328 * _tmp222 +
                 _tmp133 * _tmp730 + _tmp1375 * _tmp441 + _tmp1378 * _tmp419 - _tmp1381 * _tmp199 +
                 _tmp1427 * _tmp485 + _tmp1474 * _tmp552 + _tmp1506 * _tmp63 - _tmp1553 * _tmp530 +
                 _tmp1600 * _tmp243 - _tmp1602 * _tmp551 + _tmp1649 * _tmp596 + _tmp1650 * _tmp62 +
                 _tmp1653 * _tmp244 + _tmp1656 * _tmp376 - _tmp1703 * _tmp265 + _tmp1708 * _tmp353 +
                 _tmp1709 * _tmp61 + _tmp1712 * _tmp486 + _tmp1717 * _tmp595 + _tmp1718 * _tmp59 -
                 _tmp1721 * _tmp331 + _tmp1724 * _tmp442 + _tmp1727 * _tmp529 - _tmp1730 * _tmp178 +
                 _tmp1733 * _tmp464 + _tmp1736 * _tmp288 - _tmp1739 * _tmp507 - _tmp1742 * _tmp221 +
                 _tmp1743 * _tmp60 + _tmp177 * _tmp903 + _tmp1794 * _tmp310 - _tmp1797 * _tmp574 +
                 _tmp1800 * _tmp266 + _tmp1806 * _tmp58 - _tmp1809 * _tmp309 + _tmp397 * _tmp859 -
                 _tmp398 * _tmp906 + _tmp420 * _tmp953 - _tmp508 * _tmp812 - _tmp573 * _tmp997;
    _rhs(1, 0) = _tmp127 * _tmp2042 + _tmp128 * _tmp1896 + _tmp129 * _tmp2043 + _tmp130 * _tmp2047 +
                 _tmp131 * _tmp1859 + _tmp133 * _tmp2054 - _tmp177 * _tmp1934 - _tmp178 * _tmp1967 +
                 _tmp1819 * _tmp287 + _tmp1827 * _tmp60 + _tmp1835 * _tmp508 + _tmp1860 * _tmp288 +
                 _tmp1868 * _tmp530 - _tmp1876 * _tmp265 - _tmp1885 * _tmp353 + _tmp1886 * _tmp266 -
                 _tmp1894 * _tmp221 + _tmp1897 * _tmp62 - _tmp1905 * _tmp398 + _tmp1913 * _tmp310 -
                 _tmp1923 * _tmp551 + _tmp1945 * _tmp376 + _tmp1947 * _tmp507 + _tmp1948 * _tmp375 +
                 _tmp1956 * _tmp200 + _tmp1966 * _tmp485 + _tmp1975 * _tmp596 - _tmp1983 * _tmp244 +
                 _tmp1984 * _tmp354 - _tmp199 * _tmp2056 - _tmp1992 * _tmp419 + _tmp1993 * _tmp59 -
                 _tmp2001 * _tmp441 + _tmp2003 * _tmp309 + _tmp2011 * _tmp463 + _tmp2013 * _tmp63 +
                 _tmp2014 * _tmp61 + _tmp2015 * _tmp529 - _tmp2023 * _tmp332 - _tmp2024 * _tmp595 +
                 _tmp2025 * _tmp486 + _tmp2036 * _tmp573 + _tmp2040 * _tmp58 + _tmp2041 * _tmp574 +
                 _tmp2044 * _tmp464 - _tmp2046 * _tmp222 - _tmp2048 * _tmp397 - _tmp2049 * _tmp331 +
                 _tmp2050 * _tmp420 - _tmp2051 * _tmp552 + _tmp2052 * _tmp442 + _tmp2055 * _tmp243;
    _rhs(2, 0) = _tmp127 * _tmp2186 + _tmp128 * _tmp2162 + _tmp129 * _tmp2125 + _tmp130 * _tmp2093 +
                 _tmp131 * _tmp2113 + _tmp133 * _tmp2164 + _tmp177 * _tmp2179 + _tmp178 * _tmp2189 +
                 _tmp199 * _tmp2174 + _tmp200 * _tmp2124 + _tmp2060 * _tmp353 + _tmp2062 * _tmp58 +
                 _tmp2066 * _tmp552 + _tmp2070 * _tmp376 + _tmp2074 * _tmp265 + _tmp2078 * _tmp463 -
                 _tmp2097 * _tmp596 + _tmp2099 * _tmp464 + _tmp2103 * _tmp288 + _tmp2108 * _tmp397 +
                 _tmp2111 * _tmp61 + _tmp2118 * _tmp244 - _tmp2119 * _tmp398 + _tmp2126 * _tmp551 -
                 _tmp2127 * _tmp266 + _tmp2128 * _tmp62 + _tmp2129 * _tmp63 - _tmp2130 * _tmp354 +
                 _tmp2134 * _tmp485 - _tmp2138 * _tmp309 + _tmp2142 * _tmp529 + _tmp2146 * _tmp573 +
                 _tmp2150 * _tmp508 + _tmp2154 * _tmp441 - _tmp2155 * _tmp486 + _tmp2160 * _tmp222 +
                 _tmp2161 * _tmp574 + _tmp2163 * _tmp530 + _tmp2168 * _tmp332 + _tmp2172 * _tmp419 +
                 _tmp2173 * _tmp331 - _tmp2180 * _tmp595 - _tmp2181 * _tmp507 + _tmp2183 * _tmp420 +
                 _tmp2184 * _tmp310 + _tmp2185 * _tmp442 + _tmp2187 * _tmp243 + _tmp2188 * _tmp59 +
                 _tmp2190 * _tmp60 + _tmp2191 * _tmp287 + _tmp2192 * _tmp375 - _tmp2193 * _tmp221;
    _rhs(3, 0) = _tmp127 * _tmp2362 + _tmp128 * _tmp2431 + _tmp129 * _tmp2415 + _tmp130 * _tmp2419 +
                 _tmp131 * _tmp2253 + _tmp133 * _tmp2407 + _tmp177 * _tmp2388 + _tmp178 * _tmp2202 +
                 _tmp199 * _tmp2324 + _tmp200 * _tmp2399 - _tmp221 * _tmp2417 + _tmp2211 * _tmp353 -
                 _tmp222 * _tmp2302 - _tmp2220 * _tmp376 - _tmp2229 * _tmp463 + _tmp2238 * _tmp596 -
                 _tmp2240 * _tmp61 - _tmp2242 * _tmp63 + _tmp2251 * _tmp288 + _tmp2261 * _tmp398 -
                 _tmp2263 * _tmp464 - _tmp2272 * _tmp508 - _tmp2282 * _tmp552 - _tmp2284 * _tmp62 +
                 _tmp2293 * _tmp266 + _tmp2311 * _tmp573 - _tmp2313 * _tmp375 - _tmp2315 * _tmp59 -
                 _tmp2334 * _tmp244 - _tmp2336 * _tmp58 + _tmp2345 * _tmp420 + _tmp2354 * _tmp530 -
                 _tmp2356 * _tmp551 + _tmp2358 * _tmp243 - _tmp2360 * _tmp507 + _tmp2370 * _tmp331 -
                 _tmp2378 * _tmp310 + _tmp2386 * _tmp485 - _tmp2397 * _tmp442 - _tmp2401 * _tmp574 -
                 _tmp2403 * _tmp265 - _tmp2405 * _tmp60 - _tmp2409 * _tmp529 + _tmp2411 * _tmp309 +
                 _tmp2413 * _tmp397 - _tmp2421 * _tmp595 - _tmp2423 * _tmp332 - _tmp2425 * _tmp486 -
                 _tmp2427 * _tmp441 - _tmp2429 * _tmp287 + _tmp2433 * _tmp419 + _tmp2435 * _tmp354;
    _rhs(4, 0) = _tmp127 * _tmp2565 + _tmp128 * _tmp2611 + _tmp129 * _tmp2603 + _tmp130 * _tmp2605 +
                 _tmp131 * _tmp2473 + _tmp133 * _tmp2580 - _tmp177 * _tmp2574 + _tmp178 * _tmp2459 -
                 _tmp199 * _tmp2513 - _tmp200 * _tmp2593 - _tmp221 * _tmp2525 + _tmp222 * _tmp2576 -
                 _tmp243 * _tmp2567 - _tmp244 * _tmp2469 + _tmp2442 * _tmp331 + _tmp2448 * _tmp442 +
                 _tmp2454 * _tmp310 + _tmp2464 * _tmp375 - _tmp2471 * _tmp61 + _tmp2478 * _tmp574 -
                 _tmp2483 * _tmp595 - _tmp2485 * _tmp63 + _tmp2490 * _tmp354 + _tmp2495 * _tmp266 +
                 _tmp2502 * _tmp529 + _tmp2508 * _tmp420 + _tmp2518 * _tmp552 - _tmp2520 * _tmp62 -
                 _tmp2531 * _tmp398 - _tmp2539 * _tmp486 - _tmp2541 * _tmp530 + _tmp2543 * _tmp332 -
                 _tmp2545 * _tmp59 + _tmp2547 * _tmp353 - _tmp2549 * _tmp58 - _tmp2555 * _tmp507 -
                 _tmp2557 * _tmp485 + _tmp2559 * _tmp265 - _tmp2561 * _tmp551 + _tmp2563 * _tmp376 -
                 _tmp2572 * _tmp464 - _tmp2578 * _tmp596 - _tmp2582 * _tmp60 + _tmp2584 * _tmp573 -
                 _tmp2586 * _tmp508 + _tmp2591 * _tmp288 - _tmp2595 * _tmp441 - _tmp2597 * _tmp309 -
                 _tmp2599 * _tmp287 - _tmp2601 * _tmp397 - _tmp2607 * _tmp463 + _tmp2609 * _tmp419;
    _rhs(5, 0) = _tmp127 * _tmp2743 + _tmp128 * _tmp2781 + _tmp129 * _tmp2764 + _tmp130 * _tmp2773 +
                 _tmp131 * _tmp2639 + _tmp133 * _tmp2753 - _tmp177 * _tmp2720 - _tmp178 * _tmp2621 +
                 _tmp199 * _tmp2631 - _tmp200 * _tmp2662 + _tmp221 * _tmp2676 + _tmp222 * _tmp2755 +
                 _tmp243 * _tmp2670 - _tmp244 * _tmp2718 - _tmp2616 * _tmp441 + _tmp2626 * _tmp485 -
                 _tmp2637 * _tmp398 + _tmp2644 * _tmp354 - _tmp2646 * _tmp60 + _tmp2648 * _tmp442 -
                 _tmp265 * _tmp2786 - _tmp2650 * _tmp58 + _tmp2655 * _tmp596 + _tmp266 * _tmp2762 -
                 _tmp2660 * _tmp507 - _tmp2665 * _tmp353 - _tmp2678 * _tmp397 - _tmp2684 * _tmp464 -
                 _tmp2689 * _tmp551 - _tmp2695 * _tmp376 - _tmp2697 * _tmp486 + _tmp2702 * _tmp574 -
                 _tmp2708 * _tmp310 - _tmp2714 * _tmp420 - _tmp2716 * _tmp61 - _tmp2723 * _tmp573 -
                 _tmp2725 * _tmp419 - _tmp2727 * _tmp595 - _tmp2733 * _tmp288 - _tmp2739 * _tmp529 -
                 _tmp2741 * _tmp463 - _tmp2745 * _tmp309 - _tmp2747 * _tmp63 - _tmp2749 * _tmp287 +
                 _tmp2751 * _tmp508 - _tmp2757 * _tmp62 + _tmp2769 * _tmp332 - _tmp2771 * _tmp552 -
                 _tmp2775 * _tmp530 + _tmp2777 * _tmp375 - _tmp2779 * _tmp331 - _tmp2783 * _tmp59;
    _rhs(6, 0) = -_tmp177 * _tmp2798 + _tmp178 * _tmp2800 + _tmp2787 * _tmp597;
    _rhs(7, 0) = _tmp199 * _tmp2806 + _tmp200 * _tmp2809 + _tmp2807 * _tmp600;
    _rhs(8, 0) = -_tmp221 * _tmp2815 + _tmp222 * _tmp2817 + _tmp2810 * _tmp603;
    _rhs(9, 0) = _tmp243 * _tmp2823 + _tmp244 * _tmp2825 + _tmp2818 * _tmp606;
    _rhs(10, 0) = _tmp265 * _tmp2833 - _tmp266 * _tmp2830 + _tmp2831 * _tmp609;
    _rhs(11, 0) = _tmp2838 * _tmp288 + _tmp2840 * _tmp287 + _tmp2841 * _tmp612;
    _rhs(12, 0) = _tmp2842 * _tmp615 + _tmp2847 * _tmp309 - _tmp2849 * _tmp310;
    _rhs(13, 0) = _tmp2855 * _tmp332 - _tmp2857 * _tmp331 + _tmp2858 * _tmp618;
    _rhs(14, 0) = _tmp2859 * _tmp621 - _tmp2864 * _tmp353 + _tmp2866 * _tmp354;
    _rhs(15, 0) = _tmp2872 * _tmp375 + _tmp2873 * _tmp624 + _tmp2875 * _tmp376;
    _rhs(16, 0) = _tmp2876 * _tmp627 - _tmp2881 * _tmp397 - _tmp2883 * _tmp398;
    _rhs(17, 0) = _tmp2884 * _tmp630 + _tmp2889 * _tmp419 + _tmp2891 * _tmp420;
    _rhs(18, 0) = _tmp2892 * _tmp633 - _tmp2897 * _tmp441 + _tmp2899 * _tmp442;
    _rhs(19, 0) = _tmp2904 * _tmp464 + _tmp2905 * _tmp636 - _tmp2907 * _tmp463;
    _rhs(20, 0) = -_tmp2912 * _tmp485 - _tmp2914 * _tmp486 + _tmp2915 * _tmp639;
    _rhs(21, 0) = _tmp2920 * _tmp508 + _tmp2921 * _tmp642 + _tmp2923 * _tmp507;
    _rhs(22, 0) = _tmp2928 * _tmp530 - _tmp2930 * _tmp529 + _tmp2931 * _tmp645;
    _rhs(23, 0) = _tmp2936 * _tmp552 + _tmp2937 * _tmp648 - _tmp2939 * _tmp551;
    _rhs(24, 0) = -_tmp2944 * _tmp573 + _tmp2946 * _tmp574 + _tmp2947 * _tmp651;
    _rhs(25, 0) = _tmp2953 * _tmp596 + _tmp2954 * _tmp654 + _tmp2956 * _tmp595;
  }

  if (jacobian != nullptr) {
    static constexpr int kRows_jacobian = 72;
    static constexpr int kCols_jacobian = 26;
    static constexpr int kNumNonZero_jacobian = 372;
    static constexpr int kColPtrs_jacobian[] = {0,   52,  104, 156, 208, 260, 312, 315, 318,
                                                321, 324, 327, 330, 333, 336, 339, 342, 345,
                                                348, 351, 354, 357, 360, 363, 366, 369, 372};
    static constexpr int kRowIndices_jacobian[] = {
        0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
        22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
        44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13,
        14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
        36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,
        6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
        28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
        50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
        42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0,  1,  2,  3,
        4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
        26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
        48, 49, 50, 51, 12, 13, 52, 14, 15, 53, 16, 17, 54, 18, 19, 55, 20, 21, 56, 22, 23, 57,
        24, 25, 58, 26, 27, 59, 28, 29, 60, 30, 31, 61, 32, 33, 62, 34, 35, 63, 36, 37, 64, 38,
        39, 65, 40, 41, 66, 42, 43, 67, 44, 45, 68, 46, 47, 69, 48, 49, 70, 50, 51, 71};
    if (jacobian->nonZeros() != 372 || jacobian->outerSize() != 26 || jacobian->innerSize() != 72 ||
        !jacobian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar jacobian_empty_value_ptr[372];
      *jacobian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_jacobian, kCols_jacobian, kNumNonZero_jacobian, kColPtrs_jacobian,
          kRowIndices_jacobian, jacobian_empty_value_ptr);
    }
    Scalar* jacobian_value_ptr = jacobian->valuePtr();

    jacobian_value_ptr[0] = _tmp1806;
    jacobian_value_ptr[1] = _tmp1718;
    jacobian_value_ptr[2] = _tmp1743;
    jacobian_value_ptr[3] = _tmp1709;
    jacobian_value_ptr[4] = _tmp1650;
    jacobian_value_ptr[5] = _tmp1506;
    jacobian_value_ptr[6] = _tmp1747;
    jacobian_value_ptr[7] = _tmp1237;
    jacobian_value_ptr[8] = _tmp1714;
    jacobian_value_ptr[9] = _tmp1746;
    jacobian_value_ptr[10] = _tmp1705;
    jacobian_value_ptr[11] = _tmp730;
    jacobian_value_ptr[12] = _tmp903;
    jacobian_value_ptr[13] = -_tmp1730;
    jacobian_value_ptr[14] = -_tmp1381;
    jacobian_value_ptr[15] = _tmp1045;
    jacobian_value_ptr[16] = -_tmp1742;
    jacobian_value_ptr[17] = _tmp1328;
    jacobian_value_ptr[18] = _tmp1600;
    jacobian_value_ptr[19] = _tmp1653;
    jacobian_value_ptr[20] = -_tmp1703;
    jacobian_value_ptr[21] = _tmp1800;
    jacobian_value_ptr[22] = -_tmp1186;
    jacobian_value_ptr[23] = _tmp1736;
    jacobian_value_ptr[24] = -_tmp1809;
    jacobian_value_ptr[25] = _tmp1794;
    jacobian_value_ptr[26] = -_tmp1721;
    jacobian_value_ptr[27] = _tmp1233;
    jacobian_value_ptr[28] = _tmp1708;
    jacobian_value_ptr[29] = -_tmp1092;
    jacobian_value_ptr[30] = -_tmp1281;
    jacobian_value_ptr[31] = _tmp1656;
    jacobian_value_ptr[32] = _tmp859;
    jacobian_value_ptr[33] = -_tmp906;
    jacobian_value_ptr[34] = _tmp1378;
    jacobian_value_ptr[35] = _tmp953;
    jacobian_value_ptr[36] = _tmp1375;
    jacobian_value_ptr[37] = _tmp1724;
    jacobian_value_ptr[38] = -_tmp1139;
    jacobian_value_ptr[39] = _tmp1733;
    jacobian_value_ptr[40] = _tmp1427;
    jacobian_value_ptr[41] = _tmp1712;
    jacobian_value_ptr[42] = -_tmp1739;
    jacobian_value_ptr[43] = -_tmp812;
    jacobian_value_ptr[44] = _tmp1727;
    jacobian_value_ptr[45] = -_tmp1553;
    jacobian_value_ptr[46] = -_tmp1602;
    jacobian_value_ptr[47] = _tmp1474;
    jacobian_value_ptr[48] = -_tmp997;
    jacobian_value_ptr[49] = -_tmp1797;
    jacobian_value_ptr[50] = _tmp1717;
    jacobian_value_ptr[51] = _tmp1649;
    jacobian_value_ptr[52] = _tmp2040;
    jacobian_value_ptr[53] = _tmp1993;
    jacobian_value_ptr[54] = _tmp1827;
    jacobian_value_ptr[55] = _tmp2014;
    jacobian_value_ptr[56] = _tmp1897;
    jacobian_value_ptr[57] = _tmp2013;
    jacobian_value_ptr[58] = _tmp2042;
    jacobian_value_ptr[59] = _tmp1896;
    jacobian_value_ptr[60] = _tmp2043;
    jacobian_value_ptr[61] = _tmp2047;
    jacobian_value_ptr[62] = _tmp1859;
    jacobian_value_ptr[63] = _tmp2054;
    jacobian_value_ptr[64] = -_tmp1934;
    jacobian_value_ptr[65] = -_tmp1967;
    jacobian_value_ptr[66] = -_tmp2056;
    jacobian_value_ptr[67] = _tmp1956;
    jacobian_value_ptr[68] = -_tmp1894;
    jacobian_value_ptr[69] = -_tmp2046;
    jacobian_value_ptr[70] = _tmp2055;
    jacobian_value_ptr[71] = -_tmp1983;
    jacobian_value_ptr[72] = -_tmp1876;
    jacobian_value_ptr[73] = _tmp1886;
    jacobian_value_ptr[74] = _tmp1819;
    jacobian_value_ptr[75] = _tmp1860;
    jacobian_value_ptr[76] = _tmp2003;
    jacobian_value_ptr[77] = _tmp1913;
    jacobian_value_ptr[78] = -_tmp2049;
    jacobian_value_ptr[79] = -_tmp2023;
    jacobian_value_ptr[80] = -_tmp1885;
    jacobian_value_ptr[81] = _tmp1984;
    jacobian_value_ptr[82] = _tmp1948;
    jacobian_value_ptr[83] = _tmp1945;
    jacobian_value_ptr[84] = -_tmp2048;
    jacobian_value_ptr[85] = -_tmp1905;
    jacobian_value_ptr[86] = -_tmp1992;
    jacobian_value_ptr[87] = _tmp2050;
    jacobian_value_ptr[88] = -_tmp2001;
    jacobian_value_ptr[89] = _tmp2052;
    jacobian_value_ptr[90] = _tmp2011;
    jacobian_value_ptr[91] = _tmp2044;
    jacobian_value_ptr[92] = _tmp1966;
    jacobian_value_ptr[93] = _tmp2025;
    jacobian_value_ptr[94] = _tmp1947;
    jacobian_value_ptr[95] = _tmp1835;
    jacobian_value_ptr[96] = _tmp2015;
    jacobian_value_ptr[97] = _tmp1868;
    jacobian_value_ptr[98] = -_tmp1923;
    jacobian_value_ptr[99] = -_tmp2051;
    jacobian_value_ptr[100] = _tmp2036;
    jacobian_value_ptr[101] = _tmp2041;
    jacobian_value_ptr[102] = -_tmp2024;
    jacobian_value_ptr[103] = _tmp1975;
    jacobian_value_ptr[104] = _tmp2062;
    jacobian_value_ptr[105] = _tmp2188;
    jacobian_value_ptr[106] = _tmp2190;
    jacobian_value_ptr[107] = _tmp2111;
    jacobian_value_ptr[108] = _tmp2128;
    jacobian_value_ptr[109] = _tmp2129;
    jacobian_value_ptr[110] = _tmp2186;
    jacobian_value_ptr[111] = _tmp2162;
    jacobian_value_ptr[112] = _tmp2125;
    jacobian_value_ptr[113] = _tmp2093;
    jacobian_value_ptr[114] = _tmp2113;
    jacobian_value_ptr[115] = _tmp2164;
    jacobian_value_ptr[116] = _tmp2179;
    jacobian_value_ptr[117] = _tmp2189;
    jacobian_value_ptr[118] = _tmp2174;
    jacobian_value_ptr[119] = _tmp2124;
    jacobian_value_ptr[120] = -_tmp2193;
    jacobian_value_ptr[121] = _tmp2160;
    jacobian_value_ptr[122] = _tmp2187;
    jacobian_value_ptr[123] = _tmp2118;
    jacobian_value_ptr[124] = _tmp2074;
    jacobian_value_ptr[125] = -_tmp2127;
    jacobian_value_ptr[126] = _tmp2191;
    jacobian_value_ptr[127] = _tmp2103;
    jacobian_value_ptr[128] = -_tmp2138;
    jacobian_value_ptr[129] = _tmp2184;
    jacobian_value_ptr[130] = _tmp2173;
    jacobian_value_ptr[131] = _tmp2168;
    jacobian_value_ptr[132] = _tmp2060;
    jacobian_value_ptr[133] = -_tmp2130;
    jacobian_value_ptr[134] = _tmp2192;
    jacobian_value_ptr[135] = _tmp2070;
    jacobian_value_ptr[136] = _tmp2108;
    jacobian_value_ptr[137] = -_tmp2119;
    jacobian_value_ptr[138] = _tmp2172;
    jacobian_value_ptr[139] = _tmp2183;
    jacobian_value_ptr[140] = _tmp2154;
    jacobian_value_ptr[141] = _tmp2185;
    jacobian_value_ptr[142] = _tmp2078;
    jacobian_value_ptr[143] = _tmp2099;
    jacobian_value_ptr[144] = _tmp2134;
    jacobian_value_ptr[145] = -_tmp2155;
    jacobian_value_ptr[146] = -_tmp2181;
    jacobian_value_ptr[147] = _tmp2150;
    jacobian_value_ptr[148] = _tmp2142;
    jacobian_value_ptr[149] = _tmp2163;
    jacobian_value_ptr[150] = _tmp2126;
    jacobian_value_ptr[151] = _tmp2066;
    jacobian_value_ptr[152] = _tmp2146;
    jacobian_value_ptr[153] = _tmp2161;
    jacobian_value_ptr[154] = -_tmp2180;
    jacobian_value_ptr[155] = -_tmp2097;
    jacobian_value_ptr[156] = -_tmp2336;
    jacobian_value_ptr[157] = -_tmp2315;
    jacobian_value_ptr[158] = -_tmp2405;
    jacobian_value_ptr[159] = -_tmp2240;
    jacobian_value_ptr[160] = -_tmp2284;
    jacobian_value_ptr[161] = -_tmp2242;
    jacobian_value_ptr[162] = _tmp2362;
    jacobian_value_ptr[163] = _tmp2431;
    jacobian_value_ptr[164] = _tmp2415;
    jacobian_value_ptr[165] = _tmp2419;
    jacobian_value_ptr[166] = _tmp2253;
    jacobian_value_ptr[167] = _tmp2407;
    jacobian_value_ptr[168] = _tmp2388;
    jacobian_value_ptr[169] = _tmp2202;
    jacobian_value_ptr[170] = _tmp2324;
    jacobian_value_ptr[171] = _tmp2399;
    jacobian_value_ptr[172] = -_tmp2417;
    jacobian_value_ptr[173] = -_tmp2302;
    jacobian_value_ptr[174] = _tmp2358;
    jacobian_value_ptr[175] = -_tmp2334;
    jacobian_value_ptr[176] = -_tmp2403;
    jacobian_value_ptr[177] = _tmp2293;
    jacobian_value_ptr[178] = -_tmp2429;
    jacobian_value_ptr[179] = _tmp2251;
    jacobian_value_ptr[180] = _tmp2411;
    jacobian_value_ptr[181] = -_tmp2378;
    jacobian_value_ptr[182] = _tmp2370;
    jacobian_value_ptr[183] = -_tmp2423;
    jacobian_value_ptr[184] = _tmp2211;
    jacobian_value_ptr[185] = _tmp2435;
    jacobian_value_ptr[186] = -_tmp2313;
    jacobian_value_ptr[187] = -_tmp2220;
    jacobian_value_ptr[188] = _tmp2413;
    jacobian_value_ptr[189] = _tmp2261;
    jacobian_value_ptr[190] = _tmp2433;
    jacobian_value_ptr[191] = _tmp2345;
    jacobian_value_ptr[192] = -_tmp2427;
    jacobian_value_ptr[193] = -_tmp2397;
    jacobian_value_ptr[194] = -_tmp2229;
    jacobian_value_ptr[195] = -_tmp2263;
    jacobian_value_ptr[196] = _tmp2386;
    jacobian_value_ptr[197] = -_tmp2425;
    jacobian_value_ptr[198] = -_tmp2360;
    jacobian_value_ptr[199] = -_tmp2272;
    jacobian_value_ptr[200] = -_tmp2409;
    jacobian_value_ptr[201] = _tmp2354;
    jacobian_value_ptr[202] = -_tmp2356;
    jacobian_value_ptr[203] = -_tmp2282;
    jacobian_value_ptr[204] = _tmp2311;
    jacobian_value_ptr[205] = -_tmp2401;
    jacobian_value_ptr[206] = -_tmp2421;
    jacobian_value_ptr[207] = _tmp2238;
    jacobian_value_ptr[208] = -_tmp2549;
    jacobian_value_ptr[209] = -_tmp2545;
    jacobian_value_ptr[210] = -_tmp2582;
    jacobian_value_ptr[211] = -_tmp2471;
    jacobian_value_ptr[212] = -_tmp2520;
    jacobian_value_ptr[213] = -_tmp2485;
    jacobian_value_ptr[214] = _tmp2565;
    jacobian_value_ptr[215] = _tmp2611;
    jacobian_value_ptr[216] = _tmp2603;
    jacobian_value_ptr[217] = _tmp2605;
    jacobian_value_ptr[218] = _tmp2473;
    jacobian_value_ptr[219] = _tmp2580;
    jacobian_value_ptr[220] = -_tmp2574;
    jacobian_value_ptr[221] = _tmp2459;
    jacobian_value_ptr[222] = -_tmp2513;
    jacobian_value_ptr[223] = -_tmp2593;
    jacobian_value_ptr[224] = -_tmp2525;
    jacobian_value_ptr[225] = _tmp2576;
    jacobian_value_ptr[226] = -_tmp2567;
    jacobian_value_ptr[227] = -_tmp2469;
    jacobian_value_ptr[228] = _tmp2559;
    jacobian_value_ptr[229] = _tmp2495;
    jacobian_value_ptr[230] = -_tmp2599;
    jacobian_value_ptr[231] = _tmp2591;
    jacobian_value_ptr[232] = -_tmp2597;
    jacobian_value_ptr[233] = _tmp2454;
    jacobian_value_ptr[234] = _tmp2442;
    jacobian_value_ptr[235] = _tmp2543;
    jacobian_value_ptr[236] = _tmp2547;
    jacobian_value_ptr[237] = _tmp2490;
    jacobian_value_ptr[238] = _tmp2464;
    jacobian_value_ptr[239] = _tmp2563;
    jacobian_value_ptr[240] = -_tmp2601;
    jacobian_value_ptr[241] = -_tmp2531;
    jacobian_value_ptr[242] = _tmp2609;
    jacobian_value_ptr[243] = _tmp2508;
    jacobian_value_ptr[244] = -_tmp2595;
    jacobian_value_ptr[245] = _tmp2448;
    jacobian_value_ptr[246] = -_tmp2607;
    jacobian_value_ptr[247] = -_tmp2572;
    jacobian_value_ptr[248] = -_tmp2557;
    jacobian_value_ptr[249] = -_tmp2539;
    jacobian_value_ptr[250] = -_tmp2555;
    jacobian_value_ptr[251] = -_tmp2586;
    jacobian_value_ptr[252] = _tmp2502;
    jacobian_value_ptr[253] = -_tmp2541;
    jacobian_value_ptr[254] = -_tmp2561;
    jacobian_value_ptr[255] = _tmp2518;
    jacobian_value_ptr[256] = _tmp2584;
    jacobian_value_ptr[257] = _tmp2478;
    jacobian_value_ptr[258] = -_tmp2483;
    jacobian_value_ptr[259] = -_tmp2578;
    jacobian_value_ptr[260] = -_tmp2650;
    jacobian_value_ptr[261] = -_tmp2783;
    jacobian_value_ptr[262] = -_tmp2646;
    jacobian_value_ptr[263] = -_tmp2716;
    jacobian_value_ptr[264] = -_tmp2757;
    jacobian_value_ptr[265] = -_tmp2747;
    jacobian_value_ptr[266] = _tmp2743;
    jacobian_value_ptr[267] = _tmp2781;
    jacobian_value_ptr[268] = _tmp2764;
    jacobian_value_ptr[269] = _tmp2773;
    jacobian_value_ptr[270] = _tmp2639;
    jacobian_value_ptr[271] = _tmp2753;
    jacobian_value_ptr[272] = -_tmp2720;
    jacobian_value_ptr[273] = -_tmp2621;
    jacobian_value_ptr[274] = _tmp2631;
    jacobian_value_ptr[275] = -_tmp2662;
    jacobian_value_ptr[276] = _tmp2676;
    jacobian_value_ptr[277] = _tmp2755;
    jacobian_value_ptr[278] = _tmp2670;
    jacobian_value_ptr[279] = -_tmp2718;
    jacobian_value_ptr[280] = -_tmp2786;
    jacobian_value_ptr[281] = _tmp2762;
    jacobian_value_ptr[282] = -_tmp2749;
    jacobian_value_ptr[283] = -_tmp2733;
    jacobian_value_ptr[284] = -_tmp2745;
    jacobian_value_ptr[285] = -_tmp2708;
    jacobian_value_ptr[286] = -_tmp2779;
    jacobian_value_ptr[287] = _tmp2769;
    jacobian_value_ptr[288] = -_tmp2665;
    jacobian_value_ptr[289] = _tmp2644;
    jacobian_value_ptr[290] = _tmp2777;
    jacobian_value_ptr[291] = -_tmp2695;
    jacobian_value_ptr[292] = -_tmp2678;
    jacobian_value_ptr[293] = -_tmp2637;
    jacobian_value_ptr[294] = -_tmp2725;
    jacobian_value_ptr[295] = -_tmp2714;
    jacobian_value_ptr[296] = -_tmp2616;
    jacobian_value_ptr[297] = _tmp2648;
    jacobian_value_ptr[298] = -_tmp2741;
    jacobian_value_ptr[299] = -_tmp2684;
    jacobian_value_ptr[300] = _tmp2626;
    jacobian_value_ptr[301] = -_tmp2697;
    jacobian_value_ptr[302] = -_tmp2660;
    jacobian_value_ptr[303] = _tmp2751;
    jacobian_value_ptr[304] = -_tmp2739;
    jacobian_value_ptr[305] = -_tmp2775;
    jacobian_value_ptr[306] = -_tmp2689;
    jacobian_value_ptr[307] = -_tmp2771;
    jacobian_value_ptr[308] = -_tmp2723;
    jacobian_value_ptr[309] = _tmp2702;
    jacobian_value_ptr[310] = -_tmp2727;
    jacobian_value_ptr[311] = _tmp2655;
    jacobian_value_ptr[312] = -_tmp2798;
    jacobian_value_ptr[313] = _tmp2800;
    jacobian_value_ptr[314] = _tmp599;
    jacobian_value_ptr[315] = _tmp2806;
    jacobian_value_ptr[316] = _tmp2809;
    jacobian_value_ptr[317] = _tmp602;
    jacobian_value_ptr[318] = -_tmp2815;
    jacobian_value_ptr[319] = _tmp2817;
    jacobian_value_ptr[320] = _tmp605;
    jacobian_value_ptr[321] = _tmp2823;
    jacobian_value_ptr[322] = _tmp2825;
    jacobian_value_ptr[323] = _tmp608;
    jacobian_value_ptr[324] = _tmp2833;
    jacobian_value_ptr[325] = -_tmp2830;
    jacobian_value_ptr[326] = _tmp611;
    jacobian_value_ptr[327] = _tmp2840;
    jacobian_value_ptr[328] = _tmp2838;
    jacobian_value_ptr[329] = _tmp614;
    jacobian_value_ptr[330] = _tmp2847;
    jacobian_value_ptr[331] = -_tmp2849;
    jacobian_value_ptr[332] = _tmp617;
    jacobian_value_ptr[333] = -_tmp2857;
    jacobian_value_ptr[334] = _tmp2855;
    jacobian_value_ptr[335] = _tmp620;
    jacobian_value_ptr[336] = -_tmp2864;
    jacobian_value_ptr[337] = _tmp2866;
    jacobian_value_ptr[338] = _tmp623;
    jacobian_value_ptr[339] = _tmp2872;
    jacobian_value_ptr[340] = _tmp2875;
    jacobian_value_ptr[341] = _tmp626;
    jacobian_value_ptr[342] = -_tmp2881;
    jacobian_value_ptr[343] = -_tmp2883;
    jacobian_value_ptr[344] = _tmp629;
    jacobian_value_ptr[345] = _tmp2889;
    jacobian_value_ptr[346] = _tmp2891;
    jacobian_value_ptr[347] = _tmp632;
    jacobian_value_ptr[348] = -_tmp2897;
    jacobian_value_ptr[349] = _tmp2899;
    jacobian_value_ptr[350] = _tmp635;
    jacobian_value_ptr[351] = -_tmp2907;
    jacobian_value_ptr[352] = _tmp2904;
    jacobian_value_ptr[353] = _tmp638;
    jacobian_value_ptr[354] = -_tmp2912;
    jacobian_value_ptr[355] = -_tmp2914;
    jacobian_value_ptr[356] = _tmp641;
    jacobian_value_ptr[357] = _tmp2923;
    jacobian_value_ptr[358] = _tmp2920;
    jacobian_value_ptr[359] = _tmp644;
    jacobian_value_ptr[360] = -_tmp2930;
    jacobian_value_ptr[361] = _tmp2928;
    jacobian_value_ptr[362] = _tmp647;
    jacobian_value_ptr[363] = -_tmp2939;
    jacobian_value_ptr[364] = _tmp2936;
    jacobian_value_ptr[365] = _tmp650;
    jacobian_value_ptr[366] = -_tmp2944;
    jacobian_value_ptr[367] = _tmp2946;
    jacobian_value_ptr[368] = _tmp653;
    jacobian_value_ptr[369] = _tmp2956;
    jacobian_value_ptr[370] = _tmp2953;
    jacobian_value_ptr[371] = _tmp656;
  }

  if (hessian != nullptr) {
    static constexpr int kRows_hessian = 26;
    static constexpr int kCols_hessian = 26;
    static constexpr int kNumNonZero_hessian = 161;
    static constexpr int kColPtrs_hessian[] = {0,   26,  51,  75,  98,  120, 141, 142, 143,
                                               144, 145, 146, 147, 148, 149, 150, 151, 152,
                                               153, 154, 155, 156, 157, 158, 159, 160, 161};
    static constexpr int kRowIndices_hessian[] = {
        0,  1,  2,  3,  4,  5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 1,  2,  3,  4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 2,  3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 3, 4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
        20, 21, 22, 23, 24, 25, 4, 5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 5,  6, 7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
        23, 24, 25, 6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};
    if (hessian->nonZeros() != 161 || hessian->outerSize() != 26 || hessian->innerSize() != 26 ||
        !hessian->isCompressed()) {
      // Matrix does not have the expected layout, create a correctly initialized sparse matrix
      Scalar hessian_empty_value_ptr[161];
      *hessian = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
          kRows_hessian, kCols_hessian, kNumNonZero_hessian, kColPtrs_hessian, kRowIndices_hessian,
          hessian_empty_value_ptr);
    }
    Scalar* hessian_value_ptr = hessian->valuePtr();

    hessian_value_ptr[0] = std::pow(_tmp1045, Scalar(2)) + std::pow(_tmp1092, Scalar(2)) +
                           std::pow(_tmp1139, Scalar(2)) + std::pow(_tmp1186, Scalar(2)) +
                           std::pow(_tmp1233, Scalar(2)) + std::pow(_tmp1237, Scalar(2)) +
                           std::pow(_tmp1281, Scalar(2)) + std::pow(_tmp1328, Scalar(2)) +
                           std::pow(_tmp1375, Scalar(2)) + std::pow(_tmp1378, Scalar(2)) +
                           std::pow(_tmp1381, Scalar(2)) + std::pow(_tmp1427, Scalar(2)) +
                           std::pow(_tmp1474, Scalar(2)) + std::pow(_tmp1506, Scalar(2)) +
                           std::pow(_tmp1553, Scalar(2)) + std::pow(_tmp1600, Scalar(2)) +
                           std::pow(_tmp1602, Scalar(2)) + std::pow(_tmp1649, Scalar(2)) +
                           std::pow(_tmp1650, Scalar(2)) + std::pow(_tmp1653, Scalar(2)) +
                           std::pow(_tmp1656, Scalar(2)) + std::pow(_tmp1703, Scalar(2)) +
                           std::pow(_tmp1705, Scalar(2)) + std::pow(_tmp1708, Scalar(2)) +
                           std::pow(_tmp1709, Scalar(2)) + std::pow(_tmp1712, Scalar(2)) +
                           std::pow(_tmp1714, Scalar(2)) + std::pow(_tmp1717, Scalar(2)) +
                           std::pow(_tmp1718, Scalar(2)) + std::pow(_tmp1721, Scalar(2)) +
                           std::pow(_tmp1724, Scalar(2)) + std::pow(_tmp1727, Scalar(2)) +
                           std::pow(_tmp1730, Scalar(2)) + std::pow(_tmp1733, Scalar(2)) +
                           std::pow(_tmp1736, Scalar(2)) + std::pow(_tmp1739, Scalar(2)) +
                           std::pow(_tmp1742, Scalar(2)) + std::pow(_tmp1743, Scalar(2)) +
                           std::pow(_tmp1746, Scalar(2)) + std::pow(_tmp1747, Scalar(2)) +
                           std::pow(_tmp1794, Scalar(2)) + std::pow(_tmp1797, Scalar(2)) +
                           std::pow(_tmp1800, Scalar(2)) + std::pow(_tmp1806, Scalar(2)) +
                           std::pow(_tmp1809, Scalar(2)) + std::pow(_tmp730, Scalar(2)) +
                           std::pow(_tmp812, Scalar(2)) + std::pow(_tmp859, Scalar(2)) +
                           std::pow(_tmp903, Scalar(2)) + std::pow(_tmp906, Scalar(2)) +
                           std::pow(_tmp953, Scalar(2)) + std::pow(_tmp997, Scalar(2));
    hessian_value_ptr[1] =
        _tmp1045 * _tmp1956 - _tmp1092 * _tmp1984 - _tmp1139 * _tmp2011 - _tmp1186 * _tmp1819 -
        _tmp1233 * _tmp2023 + _tmp1237 * _tmp1896 - _tmp1281 * _tmp1948 - _tmp1328 * _tmp2046 -
        _tmp1375 * _tmp2001 - _tmp1378 * _tmp1992 + _tmp1381 * _tmp2056 + _tmp1427 * _tmp1966 -
        _tmp1474 * _tmp2051 + _tmp1506 * _tmp2013 - _tmp1553 * _tmp1868 + _tmp1600 * _tmp2055 +
        _tmp1602 * _tmp1923 + _tmp1649 * _tmp1975 + _tmp1650 * _tmp1897 - _tmp1653 * _tmp1983 +
        _tmp1656 * _tmp1945 + _tmp1703 * _tmp1876 + _tmp1705 * _tmp1859 - _tmp1708 * _tmp1885 +
        _tmp1709 * _tmp2014 + _tmp1712 * _tmp2025 + _tmp1714 * _tmp2043 - _tmp1717 * _tmp2024 +
        _tmp1718 * _tmp1993 + _tmp1721 * _tmp2049 + _tmp1724 * _tmp2052 + _tmp1727 * _tmp2015 +
        _tmp1730 * _tmp1967 + _tmp1733 * _tmp2044 + _tmp1736 * _tmp1860 - _tmp1739 * _tmp1947 +
        _tmp1742 * _tmp1894 + _tmp1743 * _tmp1827 + _tmp1746 * _tmp2047 + _tmp1747 * _tmp2042 +
        _tmp1794 * _tmp1913 - _tmp1797 * _tmp2041 + _tmp1800 * _tmp1886 + _tmp1806 * _tmp2040 -
        _tmp1809 * _tmp2003 - _tmp1835 * _tmp812 + _tmp1905 * _tmp906 - _tmp1934 * _tmp903 -
        _tmp2036 * _tmp997 - _tmp2048 * _tmp859 + _tmp2050 * _tmp953 + _tmp2054 * _tmp730;
    hessian_value_ptr[2] =
        _tmp1045 * _tmp2124 + _tmp1092 * _tmp2130 - _tmp1139 * _tmp2078 - _tmp1186 * _tmp2191 +
        _tmp1233 * _tmp2168 + _tmp1237 * _tmp2162 - _tmp1281 * _tmp2192 + _tmp1328 * _tmp2160 +
        _tmp1375 * _tmp2154 + _tmp1378 * _tmp2172 - _tmp1381 * _tmp2174 + _tmp1427 * _tmp2134 +
        _tmp1474 * _tmp2066 + _tmp1506 * _tmp2129 - _tmp1553 * _tmp2163 + _tmp1600 * _tmp2187 -
        _tmp1602 * _tmp2126 - _tmp1649 * _tmp2097 + _tmp1650 * _tmp2128 + _tmp1653 * _tmp2118 +
        _tmp1656 * _tmp2070 - _tmp1703 * _tmp2074 + _tmp1705 * _tmp2113 + _tmp1708 * _tmp2060 +
        _tmp1709 * _tmp2111 - _tmp1712 * _tmp2155 + _tmp1714 * _tmp2125 - _tmp1717 * _tmp2180 +
        _tmp1718 * _tmp2188 - _tmp1721 * _tmp2173 + _tmp1724 * _tmp2185 + _tmp1727 * _tmp2142 -
        _tmp1730 * _tmp2189 + _tmp1733 * _tmp2099 + _tmp1736 * _tmp2103 + _tmp1739 * _tmp2181 +
        _tmp1742 * _tmp2193 + _tmp1743 * _tmp2190 + _tmp1746 * _tmp2093 + _tmp1747 * _tmp2186 +
        _tmp1794 * _tmp2184 - _tmp1797 * _tmp2161 - _tmp1800 * _tmp2127 + _tmp1806 * _tmp2062 +
        _tmp1809 * _tmp2138 + _tmp2108 * _tmp859 + _tmp2119 * _tmp906 - _tmp2146 * _tmp997 -
        _tmp2150 * _tmp812 + _tmp2164 * _tmp730 + _tmp2179 * _tmp903 + _tmp2183 * _tmp953;
    hessian_value_ptr[3] =
        _tmp1045 * _tmp2399 - _tmp1092 * _tmp2435 + _tmp1139 * _tmp2229 + _tmp1186 * _tmp2429 -
        _tmp1233 * _tmp2423 + _tmp1237 * _tmp2431 + _tmp1281 * _tmp2313 - _tmp1328 * _tmp2302 -
        _tmp1375 * _tmp2427 + _tmp1378 * _tmp2433 - _tmp1381 * _tmp2324 + _tmp1427 * _tmp2386 -
        _tmp1474 * _tmp2282 - _tmp1506 * _tmp2242 - _tmp1553 * _tmp2354 + _tmp1600 * _tmp2358 +
        _tmp1602 * _tmp2356 + _tmp1649 * _tmp2238 - _tmp1650 * _tmp2284 - _tmp1653 * _tmp2334 -
        _tmp1656 * _tmp2220 + _tmp1703 * _tmp2403 + _tmp1705 * _tmp2253 + _tmp1708 * _tmp2211 -
        _tmp1709 * _tmp2240 - _tmp1712 * _tmp2425 + _tmp1714 * _tmp2415 - _tmp1717 * _tmp2421 -
        _tmp1718 * _tmp2315 - _tmp1721 * _tmp2370 - _tmp1724 * _tmp2397 - _tmp1727 * _tmp2409 -
        _tmp1730 * _tmp2202 - _tmp1733 * _tmp2263 + _tmp1736 * _tmp2251 + _tmp1739 * _tmp2360 +
        _tmp1742 * _tmp2417 - _tmp1743 * _tmp2405 + _tmp1746 * _tmp2419 + _tmp1747 * _tmp2362 -
        _tmp1794 * _tmp2378 + _tmp1797 * _tmp2401 + _tmp1800 * _tmp2293 - _tmp1806 * _tmp2336 -
        _tmp1809 * _tmp2411 - _tmp2261 * _tmp906 + _tmp2272 * _tmp812 - _tmp2311 * _tmp997 +
        _tmp2345 * _tmp953 + _tmp2388 * _tmp903 + _tmp2407 * _tmp730 + _tmp2413 * _tmp859;
    hessian_value_ptr[4] =
        -_tmp1045 * _tmp2593 - _tmp1092 * _tmp2490 + _tmp1139 * _tmp2607 + _tmp1186 * _tmp2599 +
        _tmp1233 * _tmp2543 + _tmp1237 * _tmp2611 - _tmp1281 * _tmp2464 + _tmp1328 * _tmp2576 -
        _tmp1375 * _tmp2595 + _tmp1378 * _tmp2609 + _tmp1381 * _tmp2513 - _tmp1427 * _tmp2557 +
        _tmp1474 * _tmp2518 - _tmp1506 * _tmp2485 + _tmp1553 * _tmp2541 - _tmp1600 * _tmp2567 +
        _tmp1602 * _tmp2561 - _tmp1649 * _tmp2578 - _tmp1650 * _tmp2520 - _tmp1653 * _tmp2469 +
        _tmp1656 * _tmp2563 - _tmp1703 * _tmp2559 + _tmp1705 * _tmp2473 + _tmp1708 * _tmp2547 -
        _tmp1709 * _tmp2471 - _tmp1712 * _tmp2539 + _tmp1714 * _tmp2603 - _tmp1717 * _tmp2483 -
        _tmp1718 * _tmp2545 - _tmp1721 * _tmp2442 + _tmp1724 * _tmp2448 + _tmp1727 * _tmp2502 -
        _tmp1730 * _tmp2459 - _tmp1733 * _tmp2572 + _tmp1736 * _tmp2591 + _tmp1739 * _tmp2555 +
        _tmp1742 * _tmp2525 - _tmp1743 * _tmp2582 + _tmp1746 * _tmp2605 + _tmp1747 * _tmp2565 +
        _tmp1794 * _tmp2454 - _tmp1797 * _tmp2478 + _tmp1800 * _tmp2495 - _tmp1806 * _tmp2549 +
        _tmp1809 * _tmp2597 + _tmp2508 * _tmp953 + _tmp2531 * _tmp906 - _tmp2574 * _tmp903 +
        _tmp2580 * _tmp730 - _tmp2584 * _tmp997 + _tmp2586 * _tmp812 - _tmp2601 * _tmp859;
    hessian_value_ptr[5] =
        -_tmp1045 * _tmp2662 - _tmp1092 * _tmp2644 + _tmp1139 * _tmp2741 + _tmp1186 * _tmp2749 +
        _tmp1233 * _tmp2769 + _tmp1237 * _tmp2781 - _tmp1281 * _tmp2777 + _tmp1328 * _tmp2755 -
        _tmp1375 * _tmp2616 - _tmp1378 * _tmp2725 - _tmp1381 * _tmp2631 + _tmp1427 * _tmp2626 -
        _tmp1474 * _tmp2771 - _tmp1506 * _tmp2747 + _tmp1553 * _tmp2775 + _tmp1600 * _tmp2670 +
        _tmp1602 * _tmp2689 + _tmp1649 * _tmp2655 - _tmp1650 * _tmp2757 - _tmp1653 * _tmp2718 -
        _tmp1656 * _tmp2695 + _tmp1703 * _tmp2786 + _tmp1705 * _tmp2639 - _tmp1708 * _tmp2665 -
        _tmp1709 * _tmp2716 - _tmp1712 * _tmp2697 + _tmp1714 * _tmp2764 - _tmp1717 * _tmp2727 -
        _tmp1718 * _tmp2783 + _tmp1721 * _tmp2779 + _tmp1724 * _tmp2648 - _tmp1727 * _tmp2739 +
        _tmp1730 * _tmp2621 - _tmp1733 * _tmp2684 - _tmp1736 * _tmp2733 + _tmp1739 * _tmp2660 -
        _tmp1742 * _tmp2676 - _tmp1743 * _tmp2646 + _tmp1746 * _tmp2773 + _tmp1747 * _tmp2743 -
        _tmp1794 * _tmp2708 - _tmp1797 * _tmp2702 + _tmp1800 * _tmp2762 - _tmp1806 * _tmp2650 +
        _tmp1809 * _tmp2745 + _tmp2637 * _tmp906 - _tmp2678 * _tmp859 - _tmp2714 * _tmp953 -
        _tmp2720 * _tmp903 + _tmp2723 * _tmp997 - _tmp2751 * _tmp812 + _tmp2753 * _tmp730;
    hessian_value_ptr[6] = -_tmp1730 * _tmp2800 - _tmp2798 * _tmp903;
    hessian_value_ptr[7] = _tmp1045 * _tmp2809 - _tmp1381 * _tmp2806;
    hessian_value_ptr[8] = _tmp1328 * _tmp2817 + _tmp1742 * _tmp2815;
    hessian_value_ptr[9] = _tmp1600 * _tmp2823 + _tmp1653 * _tmp2825;
    hessian_value_ptr[10] = -_tmp1703 * _tmp2833 - _tmp1800 * _tmp2830;
    hessian_value_ptr[11] = -_tmp1186 * _tmp2840 + _tmp1736 * _tmp2838;
    hessian_value_ptr[12] = -_tmp1794 * _tmp2849 - _tmp1809 * _tmp2847;
    hessian_value_ptr[13] = _tmp1233 * _tmp2855 + _tmp1721 * _tmp2857;
    hessian_value_ptr[14] = -_tmp1092 * _tmp2866 - _tmp1708 * _tmp2864;
    hessian_value_ptr[15] = -_tmp1281 * _tmp2872 + _tmp1656 * _tmp2875;
    hessian_value_ptr[16] = -_tmp2881 * _tmp859 + _tmp2883 * _tmp906;
    hessian_value_ptr[17] = _tmp1378 * _tmp2889 + _tmp2891 * _tmp953;
    hessian_value_ptr[18] = -_tmp1375 * _tmp2897 + _tmp1724 * _tmp2899;
    hessian_value_ptr[19] = _tmp1139 * _tmp2907 + _tmp1733 * _tmp2904;
    hessian_value_ptr[20] = -_tmp1427 * _tmp2912 - _tmp1712 * _tmp2914;
    hessian_value_ptr[21] = -_tmp1739 * _tmp2923 - _tmp2920 * _tmp812;
    hessian_value_ptr[22] = -_tmp1553 * _tmp2928 - _tmp1727 * _tmp2930;
    hessian_value_ptr[23] = _tmp1474 * _tmp2936 + _tmp1602 * _tmp2939;
    hessian_value_ptr[24] = -_tmp1797 * _tmp2946 + _tmp2944 * _tmp997;
    hessian_value_ptr[25] = _tmp1649 * _tmp2953 + _tmp1717 * _tmp2956;
    hessian_value_ptr[26] = std::pow(_tmp1819, Scalar(2)) + std::pow(_tmp1827, Scalar(2)) +
                            std::pow(_tmp1835, Scalar(2)) + std::pow(_tmp1859, Scalar(2)) +
                            std::pow(_tmp1860, Scalar(2)) + std::pow(_tmp1868, Scalar(2)) +
                            std::pow(_tmp1876, Scalar(2)) + std::pow(_tmp1885, Scalar(2)) +
                            std::pow(_tmp1886, Scalar(2)) + std::pow(_tmp1894, Scalar(2)) +
                            std::pow(_tmp1896, Scalar(2)) + std::pow(_tmp1897, Scalar(2)) +
                            std::pow(_tmp1905, Scalar(2)) + std::pow(_tmp1913, Scalar(2)) +
                            std::pow(_tmp1923, Scalar(2)) + std::pow(_tmp1934, Scalar(2)) +
                            std::pow(_tmp1945, Scalar(2)) + std::pow(_tmp1947, Scalar(2)) +
                            std::pow(_tmp1948, Scalar(2)) + std::pow(_tmp1956, Scalar(2)) +
                            std::pow(_tmp1966, Scalar(2)) + std::pow(_tmp1967, Scalar(2)) +
                            std::pow(_tmp1975, Scalar(2)) + std::pow(_tmp1983, Scalar(2)) +
                            std::pow(_tmp1984, Scalar(2)) + std::pow(_tmp1992, Scalar(2)) +
                            std::pow(_tmp1993, Scalar(2)) + std::pow(_tmp2001, Scalar(2)) +
                            std::pow(_tmp2003, Scalar(2)) + std::pow(_tmp2011, Scalar(2)) +
                            std::pow(_tmp2013, Scalar(2)) + std::pow(_tmp2014, Scalar(2)) +
                            std::pow(_tmp2015, Scalar(2)) + std::pow(_tmp2023, Scalar(2)) +
                            std::pow(_tmp2024, Scalar(2)) + std::pow(_tmp2025, Scalar(2)) +
                            std::pow(_tmp2036, Scalar(2)) + std::pow(_tmp2040, Scalar(2)) +
                            std::pow(_tmp2041, Scalar(2)) + std::pow(_tmp2042, Scalar(2)) +
                            std::pow(_tmp2043, Scalar(2)) + std::pow(_tmp2044, Scalar(2)) +
                            std::pow(_tmp2046, Scalar(2)) + std::pow(_tmp2047, Scalar(2)) +
                            std::pow(_tmp2048, Scalar(2)) + std::pow(_tmp2049, Scalar(2)) +
                            std::pow(_tmp2050, Scalar(2)) + std::pow(_tmp2051, Scalar(2)) +
                            std::pow(_tmp2052, Scalar(2)) + std::pow(_tmp2054, Scalar(2)) +
                            std::pow(_tmp2055, Scalar(2)) + std::pow(_tmp2056, Scalar(2));
    hessian_value_ptr[27] =
        _tmp1819 * _tmp2191 + _tmp1827 * _tmp2190 + _tmp1835 * _tmp2150 + _tmp1859 * _tmp2113 +
        _tmp1860 * _tmp2103 + _tmp1868 * _tmp2163 - _tmp1876 * _tmp2074 - _tmp1885 * _tmp2060 -
        _tmp1886 * _tmp2127 + _tmp1894 * _tmp2193 + _tmp1896 * _tmp2162 + _tmp1897 * _tmp2128 +
        _tmp1905 * _tmp2119 + _tmp1913 * _tmp2184 - _tmp1923 * _tmp2126 - _tmp1934 * _tmp2179 +
        _tmp1945 * _tmp2070 - _tmp1947 * _tmp2181 + _tmp1948 * _tmp2192 + _tmp1956 * _tmp2124 +
        _tmp1966 * _tmp2134 - _tmp1967 * _tmp2189 - _tmp1975 * _tmp2097 - _tmp1983 * _tmp2118 -
        _tmp1984 * _tmp2130 - _tmp1992 * _tmp2172 + _tmp1993 * _tmp2188 - _tmp2001 * _tmp2154 -
        _tmp2003 * _tmp2138 + _tmp2011 * _tmp2078 + _tmp2013 * _tmp2129 + _tmp2014 * _tmp2111 +
        _tmp2015 * _tmp2142 - _tmp2023 * _tmp2168 + _tmp2024 * _tmp2180 - _tmp2025 * _tmp2155 +
        _tmp2036 * _tmp2146 + _tmp2040 * _tmp2062 + _tmp2041 * _tmp2161 + _tmp2042 * _tmp2186 +
        _tmp2043 * _tmp2125 + _tmp2044 * _tmp2099 - _tmp2046 * _tmp2160 + _tmp2047 * _tmp2093 -
        _tmp2048 * _tmp2108 - _tmp2049 * _tmp2173 + _tmp2050 * _tmp2183 - _tmp2051 * _tmp2066 +
        _tmp2052 * _tmp2185 + _tmp2054 * _tmp2164 + _tmp2055 * _tmp2187 - _tmp2056 * _tmp2174;
    hessian_value_ptr[28] =
        -_tmp1819 * _tmp2429 - _tmp1827 * _tmp2405 - _tmp1835 * _tmp2272 + _tmp1859 * _tmp2253 +
        _tmp1860 * _tmp2251 + _tmp1868 * _tmp2354 + _tmp1876 * _tmp2403 - _tmp1885 * _tmp2211 +
        _tmp1886 * _tmp2293 + _tmp1894 * _tmp2417 + _tmp1896 * _tmp2431 - _tmp1897 * _tmp2284 -
        _tmp1905 * _tmp2261 - _tmp1913 * _tmp2378 + _tmp1923 * _tmp2356 - _tmp1934 * _tmp2388 -
        _tmp1945 * _tmp2220 - _tmp1947 * _tmp2360 - _tmp1948 * _tmp2313 + _tmp1956 * _tmp2399 +
        _tmp1966 * _tmp2386 - _tmp1967 * _tmp2202 + _tmp1975 * _tmp2238 + _tmp1983 * _tmp2334 +
        _tmp1984 * _tmp2435 - _tmp1992 * _tmp2433 - _tmp1993 * _tmp2315 + _tmp2001 * _tmp2427 +
        _tmp2003 * _tmp2411 - _tmp2011 * _tmp2229 - _tmp2013 * _tmp2242 - _tmp2014 * _tmp2240 -
        _tmp2015 * _tmp2409 + _tmp2023 * _tmp2423 + _tmp2024 * _tmp2421 - _tmp2025 * _tmp2425 +
        _tmp2036 * _tmp2311 - _tmp2040 * _tmp2336 - _tmp2041 * _tmp2401 + _tmp2042 * _tmp2362 +
        _tmp2043 * _tmp2415 - _tmp2044 * _tmp2263 + _tmp2046 * _tmp2302 + _tmp2047 * _tmp2419 -
        _tmp2048 * _tmp2413 - _tmp2049 * _tmp2370 + _tmp2050 * _tmp2345 + _tmp2051 * _tmp2282 -
        _tmp2052 * _tmp2397 + _tmp2054 * _tmp2407 + _tmp2055 * _tmp2358 - _tmp2056 * _tmp2324;
    hessian_value_ptr[29] =
        -_tmp1819 * _tmp2599 - _tmp1827 * _tmp2582 - _tmp1835 * _tmp2586 + _tmp1859 * _tmp2473 +
        _tmp1860 * _tmp2591 - _tmp1868 * _tmp2541 - _tmp1876 * _tmp2559 - _tmp1885 * _tmp2547 +
        _tmp1886 * _tmp2495 + _tmp1894 * _tmp2525 + _tmp1896 * _tmp2611 - _tmp1897 * _tmp2520 +
        _tmp1905 * _tmp2531 + _tmp1913 * _tmp2454 + _tmp1923 * _tmp2561 + _tmp1934 * _tmp2574 +
        _tmp1945 * _tmp2563 - _tmp1947 * _tmp2555 + _tmp1948 * _tmp2464 - _tmp1956 * _tmp2593 -
        _tmp1966 * _tmp2557 - _tmp1967 * _tmp2459 - _tmp1975 * _tmp2578 + _tmp1983 * _tmp2469 +
        _tmp1984 * _tmp2490 - _tmp1992 * _tmp2609 - _tmp1993 * _tmp2545 + _tmp2001 * _tmp2595 -
        _tmp2003 * _tmp2597 - _tmp2011 * _tmp2607 - _tmp2013 * _tmp2485 - _tmp2014 * _tmp2471 +
        _tmp2015 * _tmp2502 - _tmp2023 * _tmp2543 + _tmp2024 * _tmp2483 - _tmp2025 * _tmp2539 +
        _tmp2036 * _tmp2584 - _tmp2040 * _tmp2549 + _tmp2041 * _tmp2478 + _tmp2042 * _tmp2565 +
        _tmp2043 * _tmp2603 - _tmp2044 * _tmp2572 - _tmp2046 * _tmp2576 + _tmp2047 * _tmp2605 +
        _tmp2048 * _tmp2601 - _tmp2049 * _tmp2442 + _tmp2050 * _tmp2508 - _tmp2051 * _tmp2518 +
        _tmp2052 * _tmp2448 + _tmp2054 * _tmp2580 - _tmp2055 * _tmp2567 + _tmp2056 * _tmp2513;
    hessian_value_ptr[30] =
        -_tmp1819 * _tmp2749 - _tmp1827 * _tmp2646 + _tmp1835 * _tmp2751 + _tmp1859 * _tmp2639 -
        _tmp1860 * _tmp2733 - _tmp1868 * _tmp2775 + _tmp1876 * _tmp2786 + _tmp1885 * _tmp2665 +
        _tmp1886 * _tmp2762 - _tmp1894 * _tmp2676 + _tmp1896 * _tmp2781 - _tmp1897 * _tmp2757 +
        _tmp1905 * _tmp2637 - _tmp1913 * _tmp2708 + _tmp1923 * _tmp2689 + _tmp1934 * _tmp2720 -
        _tmp1945 * _tmp2695 - _tmp1947 * _tmp2660 + _tmp1948 * _tmp2777 - _tmp1956 * _tmp2662 +
        _tmp1966 * _tmp2626 + _tmp1967 * _tmp2621 + _tmp1975 * _tmp2655 + _tmp1983 * _tmp2718 +
        _tmp1984 * _tmp2644 + _tmp1992 * _tmp2725 - _tmp1993 * _tmp2783 + _tmp2001 * _tmp2616 -
        _tmp2003 * _tmp2745 - _tmp2011 * _tmp2741 - _tmp2013 * _tmp2747 - _tmp2014 * _tmp2716 -
        _tmp2015 * _tmp2739 - _tmp2023 * _tmp2769 + _tmp2024 * _tmp2727 - _tmp2025 * _tmp2697 -
        _tmp2036 * _tmp2723 - _tmp2040 * _tmp2650 + _tmp2041 * _tmp2702 + _tmp2042 * _tmp2743 +
        _tmp2043 * _tmp2764 - _tmp2044 * _tmp2684 - _tmp2046 * _tmp2755 + _tmp2047 * _tmp2773 +
        _tmp2048 * _tmp2678 + _tmp2049 * _tmp2779 - _tmp2050 * _tmp2714 + _tmp2051 * _tmp2771 +
        _tmp2052 * _tmp2648 + _tmp2054 * _tmp2753 + _tmp2055 * _tmp2670 - _tmp2056 * _tmp2631;
    hessian_value_ptr[31] = _tmp1934 * _tmp2798 - _tmp1967 * _tmp2800;
    hessian_value_ptr[32] = _tmp1956 * _tmp2809 - _tmp2056 * _tmp2806;
    hessian_value_ptr[33] = _tmp1894 * _tmp2815 - _tmp2046 * _tmp2817;
    hessian_value_ptr[34] = -_tmp1983 * _tmp2825 + _tmp2055 * _tmp2823;
    hessian_value_ptr[35] = -_tmp1876 * _tmp2833 - _tmp1886 * _tmp2830;
    hessian_value_ptr[36] = _tmp1819 * _tmp2840 + _tmp1860 * _tmp2838;
    hessian_value_ptr[37] = -_tmp1913 * _tmp2849 + _tmp2003 * _tmp2847;
    hessian_value_ptr[38] = -_tmp2023 * _tmp2855 + _tmp2049 * _tmp2857;
    hessian_value_ptr[39] = _tmp1885 * _tmp2864 + _tmp1984 * _tmp2866;
    hessian_value_ptr[40] = _tmp1945 * _tmp2875 + _tmp1948 * _tmp2872;
    hessian_value_ptr[41] = _tmp1905 * _tmp2883 + _tmp2048 * _tmp2881;
    hessian_value_ptr[42] = -_tmp1992 * _tmp2889 + _tmp2050 * _tmp2891;
    hessian_value_ptr[43] = _tmp2001 * _tmp2897 + _tmp2052 * _tmp2899;
    hessian_value_ptr[44] = -_tmp2011 * _tmp2907 + _tmp2044 * _tmp2904;
    hessian_value_ptr[45] = -_tmp1966 * _tmp2912 - _tmp2025 * _tmp2914;
    hessian_value_ptr[46] = _tmp1835 * _tmp2920 + _tmp1947 * _tmp2923;
    hessian_value_ptr[47] = _tmp1868 * _tmp2928 - _tmp2015 * _tmp2930;
    hessian_value_ptr[48] = _tmp1923 * _tmp2939 - _tmp2051 * _tmp2936;
    hessian_value_ptr[49] = -_tmp2036 * _tmp2944 + _tmp2041 * _tmp2946;
    hessian_value_ptr[50] = _tmp1975 * _tmp2953 - _tmp2024 * _tmp2956;
    hessian_value_ptr[51] = std::pow(_tmp2060, Scalar(2)) + std::pow(_tmp2062, Scalar(2)) +
                            std::pow(_tmp2066, Scalar(2)) + std::pow(_tmp2070, Scalar(2)) +
                            std::pow(_tmp2074, Scalar(2)) + std::pow(_tmp2078, Scalar(2)) +
                            std::pow(_tmp2093, Scalar(2)) + std::pow(_tmp2097, Scalar(2)) +
                            std::pow(_tmp2099, Scalar(2)) + std::pow(_tmp2103, Scalar(2)) +
                            std::pow(_tmp2108, Scalar(2)) + std::pow(_tmp2111, Scalar(2)) +
                            std::pow(_tmp2113, Scalar(2)) + std::pow(_tmp2118, Scalar(2)) +
                            std::pow(_tmp2119, Scalar(2)) + std::pow(_tmp2124, Scalar(2)) +
                            std::pow(_tmp2125, Scalar(2)) + std::pow(_tmp2126, Scalar(2)) +
                            std::pow(_tmp2127, Scalar(2)) + std::pow(_tmp2128, Scalar(2)) +
                            std::pow(_tmp2129, Scalar(2)) + std::pow(_tmp2130, Scalar(2)) +
                            std::pow(_tmp2134, Scalar(2)) + std::pow(_tmp2138, Scalar(2)) +
                            std::pow(_tmp2142, Scalar(2)) + std::pow(_tmp2146, Scalar(2)) +
                            std::pow(_tmp2150, Scalar(2)) + std::pow(_tmp2154, Scalar(2)) +
                            std::pow(_tmp2155, Scalar(2)) + std::pow(_tmp2160, Scalar(2)) +
                            std::pow(_tmp2161, Scalar(2)) + std::pow(_tmp2162, Scalar(2)) +
                            std::pow(_tmp2163, Scalar(2)) + std::pow(_tmp2164, Scalar(2)) +
                            std::pow(_tmp2168, Scalar(2)) + std::pow(_tmp2172, Scalar(2)) +
                            std::pow(_tmp2173, Scalar(2)) + std::pow(_tmp2174, Scalar(2)) +
                            std::pow(_tmp2179, Scalar(2)) + std::pow(_tmp2180, Scalar(2)) +
                            std::pow(_tmp2181, Scalar(2)) + std::pow(_tmp2183, Scalar(2)) +
                            std::pow(_tmp2184, Scalar(2)) + std::pow(_tmp2185, Scalar(2)) +
                            std::pow(_tmp2186, Scalar(2)) + std::pow(_tmp2187, Scalar(2)) +
                            std::pow(_tmp2188, Scalar(2)) + std::pow(_tmp2189, Scalar(2)) +
                            std::pow(_tmp2190, Scalar(2)) + std::pow(_tmp2191, Scalar(2)) +
                            std::pow(_tmp2192, Scalar(2)) + std::pow(_tmp2193, Scalar(2));
    hessian_value_ptr[52] =
        _tmp2060 * _tmp2211 - _tmp2062 * _tmp2336 - _tmp2066 * _tmp2282 - _tmp2070 * _tmp2220 -
        _tmp2074 * _tmp2403 - _tmp2078 * _tmp2229 + _tmp2093 * _tmp2419 - _tmp2097 * _tmp2238 -
        _tmp2099 * _tmp2263 + _tmp2103 * _tmp2251 + _tmp2108 * _tmp2413 - _tmp2111 * _tmp2240 +
        _tmp2113 * _tmp2253 - _tmp2118 * _tmp2334 - _tmp2119 * _tmp2261 + _tmp2124 * _tmp2399 +
        _tmp2125 * _tmp2415 - _tmp2126 * _tmp2356 - _tmp2127 * _tmp2293 - _tmp2128 * _tmp2284 -
        _tmp2129 * _tmp2242 - _tmp2130 * _tmp2435 + _tmp2134 * _tmp2386 - _tmp2138 * _tmp2411 -
        _tmp2142 * _tmp2409 + _tmp2146 * _tmp2311 - _tmp2150 * _tmp2272 - _tmp2154 * _tmp2427 +
        _tmp2155 * _tmp2425 - _tmp2160 * _tmp2302 - _tmp2161 * _tmp2401 + _tmp2162 * _tmp2431 +
        _tmp2163 * _tmp2354 + _tmp2164 * _tmp2407 - _tmp2168 * _tmp2423 + _tmp2172 * _tmp2433 +
        _tmp2173 * _tmp2370 + _tmp2174 * _tmp2324 + _tmp2179 * _tmp2388 + _tmp2180 * _tmp2421 +
        _tmp2181 * _tmp2360 + _tmp2183 * _tmp2345 - _tmp2184 * _tmp2378 - _tmp2185 * _tmp2397 +
        _tmp2186 * _tmp2362 + _tmp2187 * _tmp2358 - _tmp2188 * _tmp2315 + _tmp2189 * _tmp2202 -
        _tmp2190 * _tmp2405 - _tmp2191 * _tmp2429 - _tmp2192 * _tmp2313 + _tmp2193 * _tmp2417;
    hessian_value_ptr[53] =
        _tmp2060 * _tmp2547 - _tmp2062 * _tmp2549 + _tmp2066 * _tmp2518 + _tmp2070 * _tmp2563 +
        _tmp2074 * _tmp2559 - _tmp2078 * _tmp2607 + _tmp2093 * _tmp2605 + _tmp2097 * _tmp2578 -
        _tmp2099 * _tmp2572 + _tmp2103 * _tmp2591 - _tmp2108 * _tmp2601 - _tmp2111 * _tmp2471 +
        _tmp2113 * _tmp2473 - _tmp2118 * _tmp2469 + _tmp2119 * _tmp2531 - _tmp2124 * _tmp2593 +
        _tmp2125 * _tmp2603 - _tmp2126 * _tmp2561 - _tmp2127 * _tmp2495 - _tmp2128 * _tmp2520 -
        _tmp2129 * _tmp2485 - _tmp2130 * _tmp2490 - _tmp2134 * _tmp2557 + _tmp2138 * _tmp2597 +
        _tmp2142 * _tmp2502 + _tmp2146 * _tmp2584 - _tmp2150 * _tmp2586 - _tmp2154 * _tmp2595 +
        _tmp2155 * _tmp2539 + _tmp2160 * _tmp2576 + _tmp2161 * _tmp2478 + _tmp2162 * _tmp2611 -
        _tmp2163 * _tmp2541 + _tmp2164 * _tmp2580 + _tmp2168 * _tmp2543 + _tmp2172 * _tmp2609 +
        _tmp2173 * _tmp2442 - _tmp2174 * _tmp2513 - _tmp2179 * _tmp2574 + _tmp2180 * _tmp2483 +
        _tmp2181 * _tmp2555 + _tmp2183 * _tmp2508 + _tmp2184 * _tmp2454 + _tmp2185 * _tmp2448 +
        _tmp2186 * _tmp2565 - _tmp2187 * _tmp2567 - _tmp2188 * _tmp2545 + _tmp2189 * _tmp2459 -
        _tmp2190 * _tmp2582 - _tmp2191 * _tmp2599 + _tmp2192 * _tmp2464 + _tmp2193 * _tmp2525;
    hessian_value_ptr[54] =
        -_tmp2060 * _tmp2665 - _tmp2062 * _tmp2650 - _tmp2066 * _tmp2771 - _tmp2070 * _tmp2695 -
        _tmp2074 * _tmp2786 - _tmp2078 * _tmp2741 + _tmp2093 * _tmp2773 - _tmp2097 * _tmp2655 -
        _tmp2099 * _tmp2684 - _tmp2103 * _tmp2733 - _tmp2108 * _tmp2678 - _tmp2111 * _tmp2716 +
        _tmp2113 * _tmp2639 - _tmp2118 * _tmp2718 + _tmp2119 * _tmp2637 - _tmp2124 * _tmp2662 +
        _tmp2125 * _tmp2764 - _tmp2126 * _tmp2689 - _tmp2127 * _tmp2762 - _tmp2128 * _tmp2757 -
        _tmp2129 * _tmp2747 - _tmp2130 * _tmp2644 + _tmp2134 * _tmp2626 + _tmp2138 * _tmp2745 -
        _tmp2142 * _tmp2739 - _tmp2146 * _tmp2723 + _tmp2150 * _tmp2751 - _tmp2154 * _tmp2616 +
        _tmp2155 * _tmp2697 + _tmp2160 * _tmp2755 + _tmp2161 * _tmp2702 + _tmp2162 * _tmp2781 -
        _tmp2163 * _tmp2775 + _tmp2164 * _tmp2753 + _tmp2168 * _tmp2769 - _tmp2172 * _tmp2725 -
        _tmp2173 * _tmp2779 + _tmp2174 * _tmp2631 - _tmp2179 * _tmp2720 + _tmp2180 * _tmp2727 +
        _tmp2181 * _tmp2660 - _tmp2183 * _tmp2714 - _tmp2184 * _tmp2708 + _tmp2185 * _tmp2648 +
        _tmp2186 * _tmp2743 + _tmp2187 * _tmp2670 - _tmp2188 * _tmp2783 - _tmp2189 * _tmp2621 -
        _tmp2190 * _tmp2646 - _tmp2191 * _tmp2749 + _tmp2192 * _tmp2777 - _tmp2193 * _tmp2676;
    hessian_value_ptr[55] = -_tmp2179 * _tmp2798 + _tmp2189 * _tmp2800;
    hessian_value_ptr[56] = _tmp2124 * _tmp2809 + _tmp2174 * _tmp2806;
    hessian_value_ptr[57] = _tmp2160 * _tmp2817 + _tmp2193 * _tmp2815;
    hessian_value_ptr[58] = _tmp2118 * _tmp2825 + _tmp2187 * _tmp2823;
    hessian_value_ptr[59] = _tmp2074 * _tmp2833 + _tmp2127 * _tmp2830;
    hessian_value_ptr[60] = _tmp2103 * _tmp2838 + _tmp2191 * _tmp2840;
    hessian_value_ptr[61] = -_tmp2138 * _tmp2847 - _tmp2184 * _tmp2849;
    hessian_value_ptr[62] = _tmp2168 * _tmp2855 - _tmp2173 * _tmp2857;
    hessian_value_ptr[63] = -_tmp2060 * _tmp2864 - _tmp2130 * _tmp2866;
    hessian_value_ptr[64] = _tmp2070 * _tmp2875 + _tmp2192 * _tmp2872;
    hessian_value_ptr[65] = -_tmp2108 * _tmp2881 + _tmp2119 * _tmp2883;
    hessian_value_ptr[66] = _tmp2172 * _tmp2889 + _tmp2183 * _tmp2891;
    hessian_value_ptr[67] = -_tmp2154 * _tmp2897 + _tmp2185 * _tmp2899;
    hessian_value_ptr[68] = -_tmp2078 * _tmp2907 + _tmp2099 * _tmp2904;
    hessian_value_ptr[69] = -_tmp2134 * _tmp2912 + _tmp2155 * _tmp2914;
    hessian_value_ptr[70] = _tmp2150 * _tmp2920 - _tmp2181 * _tmp2923;
    hessian_value_ptr[71] = -_tmp2142 * _tmp2930 + _tmp2163 * _tmp2928;
    hessian_value_ptr[72] = _tmp2066 * _tmp2936 - _tmp2126 * _tmp2939;
    hessian_value_ptr[73] = -_tmp2146 * _tmp2944 + _tmp2161 * _tmp2946;
    hessian_value_ptr[74] = -_tmp2097 * _tmp2953 - _tmp2180 * _tmp2956;
    hessian_value_ptr[75] = 4 * std::pow(_tmp2201, Scalar(2)) + 4 * std::pow(_tmp2210, Scalar(2)) +
                            4 * std::pow(_tmp2219, Scalar(2)) + 4 * std::pow(_tmp2228, Scalar(2)) +
                            4 * std::pow(_tmp2237, Scalar(2)) + 4 * std::pow(_tmp2239, Scalar(2)) +
                            4 * std::pow(_tmp2241, Scalar(2)) + 4 * std::pow(_tmp2250, Scalar(2)) +
                            4 * std::pow(_tmp2252, Scalar(2)) + 4 * std::pow(_tmp2260, Scalar(2)) +
                            4 * std::pow(_tmp2262, Scalar(2)) + 4 * std::pow(_tmp2271, Scalar(2)) +
                            4 * std::pow(_tmp2281, Scalar(2)) + 4 * std::pow(_tmp2283, Scalar(2)) +
                            4 * std::pow(_tmp2292, Scalar(2)) + 4 * std::pow(_tmp2301, Scalar(2)) +
                            4 * std::pow(_tmp2310, Scalar(2)) + 4 * std::pow(_tmp2312, Scalar(2)) +
                            4 * std::pow(_tmp2314, Scalar(2)) + 4 * std::pow(_tmp2323, Scalar(2)) +
                            4 * std::pow(_tmp2333, Scalar(2)) + 4 * std::pow(_tmp2335, Scalar(2)) +
                            4 * std::pow(_tmp2344, Scalar(2)) + 4 * std::pow(_tmp2353, Scalar(2)) +
                            4 * std::pow(_tmp2355, Scalar(2)) + 4 * std::pow(_tmp2357, Scalar(2)) +
                            4 * std::pow(_tmp2359, Scalar(2)) + 4 * std::pow(_tmp2361, Scalar(2)) +
                            4 * std::pow(_tmp2369, Scalar(2)) + 4 * std::pow(_tmp2377, Scalar(2)) +
                            4 * std::pow(_tmp2385, Scalar(2)) + 4 * std::pow(_tmp2387, Scalar(2)) +
                            4 * std::pow(_tmp2396, Scalar(2)) + 4 * std::pow(_tmp2398, Scalar(2)) +
                            4 * std::pow(_tmp2400, Scalar(2)) + 4 * std::pow(_tmp2402, Scalar(2)) +
                            4 * std::pow(_tmp2404, Scalar(2)) + 4 * std::pow(_tmp2406, Scalar(2)) +
                            4 * std::pow(_tmp2408, Scalar(2)) + 4 * std::pow(_tmp2410, Scalar(2)) +
                            4 * std::pow(_tmp2412, Scalar(2)) + 4 * std::pow(_tmp2414, Scalar(2)) +
                            4 * std::pow(_tmp2416, Scalar(2)) + 4 * std::pow(_tmp2418, Scalar(2)) +
                            4 * std::pow(_tmp2420, Scalar(2)) + 4 * std::pow(_tmp2422, Scalar(2)) +
                            4 * std::pow(_tmp2424, Scalar(2)) + 4 * std::pow(_tmp2426, Scalar(2)) +
                            4 * std::pow(_tmp2428, Scalar(2)) + 4 * std::pow(_tmp2430, Scalar(2)) +
                            4 * std::pow(_tmp2432, Scalar(2)) + 4 * std::pow(_tmp2434, Scalar(2));
    hessian_value_ptr[76] =
        _tmp2201 * _tmp2993 - _tmp2237 * _tmp2985 + _tmp2239 * _tmp2974 + _tmp2262 * _tmp2961 -
        _tmp2281 * _tmp2957 + _tmp2292 * _tmp2958 + _tmp2310 * _tmp2998 - 4 * _tmp2312 * _tmp2463 +
        _tmp2314 * _tmp2977 + _tmp2335 * _tmp2978 + _tmp2344 * _tmp2980 + 4 * _tmp2355 * _tmp2560 +
        _tmp2361 * _tmp2964 + 4 * _tmp2369 * _tmp2441 - _tmp2377 * _tmp2991 - _tmp2387 * _tmp2959 -
        4 * _tmp2398 * _tmp2592 - _tmp2400 * _tmp2995 - _tmp2402 * _tmp2969 + _tmp2404 * _tmp2975 +
        _tmp2406 * _tmp2965 - _tmp2412 * _tmp2962 + 4 * _tmp2414 * _tmp2602 +
        4 * _tmp2418 * _tmp2604 + 4 * _tmp2420 * _tmp2482 + _tmp2424 * _tmp2976 +
        _tmp2426 * _tmp2987 + _tmp2428 * _tmp2970 + 4 * _tmp2430 * _tmp2610 + _tmp2432 * _tmp2986 +
        _tmp2434 * _tmp2983 - _tmp2447 * _tmp2967 + _tmp2468 * _tmp2992 + _tmp2472 * _tmp2966 +
        _tmp2484 * _tmp2973 - _tmp2501 * _tmp2994 - _tmp2512 * _tmp2979 + _tmp2519 * _tmp2972 +
        _tmp2524 * _tmp2971 - _tmp2530 * _tmp2968 - _tmp2540 * _tmp2981 - _tmp2542 * _tmp2990 +
        _tmp2546 * _tmp2999 + _tmp2554 * _tmp2960 - _tmp2556 * _tmp2997 - _tmp2562 * _tmp2982 -
        _tmp2566 * _tmp2963 - _tmp2575 * _tmp3000 + _tmp2585 * _tmp2996 + _tmp2590 * _tmp2989 -
        _tmp2596 * _tmp2984 + _tmp2606 * _tmp2988;
    hessian_value_ptr[77] =
        -_tmp2201 * _tmp3012 - _tmp2210 * _tmp3018 + _tmp2219 * _tmp3002 + _tmp2237 * _tmp3017 +
        4 * _tmp2239 * _tmp2715 - _tmp2250 * _tmp3010 + 4 * _tmp2281 * _tmp2770 +
        _tmp2292 * _tmp3015 - _tmp2312 * _tmp3001 + 4 * _tmp2314 * _tmp2782 +
        4 * _tmp2335 * _tmp2649 - 4 * _tmp2344 * _tmp2713 + _tmp2355 * _tmp3016 +
        _tmp2359 * _tmp3022 + 4 * _tmp2361 * _tmp2742 - _tmp2369 * _tmp3009 -
        4 * _tmp2387 * _tmp2719 - _tmp2398 * _tmp3008 - _tmp2400 * _tmp3011 +
        4 * _tmp2402 * _tmp2785 + 4 * _tmp2404 * _tmp2645 + 4 * _tmp2406 * _tmp2752 -
        4 * _tmp2412 * _tmp2677 + _tmp2414 * _tmp3006 + _tmp2418 * _tmp3007 + _tmp2420 * _tmp3021 +
        4 * _tmp2424 * _tmp2696 + 4 * _tmp2428 * _tmp2748 + _tmp2430 * _tmp3005 -
        _tmp2432 * _tmp3004 + _tmp2434 * _tmp3013 + _tmp2615 * _tmp3020 + _tmp2625 * _tmp2997 +
        _tmp2630 * _tmp2979 - _tmp2636 * _tmp2968 + _tmp2638 * _tmp2966 - _tmp2647 * _tmp2967 +
        _tmp2669 * _tmp2963 - _tmp2675 * _tmp2971 + _tmp2683 * _tmp3014 + _tmp2707 * _tmp3019 +
        _tmp2717 * _tmp2992 - _tmp2722 * _tmp3003 + _tmp2738 * _tmp2994 + _tmp2740 * _tmp2988 -
        _tmp2744 * _tmp2984 + _tmp2746 * _tmp2973 - _tmp2750 * _tmp2996 - _tmp2754 * _tmp3000 +
        _tmp2756 * _tmp2972 - _tmp2768 * _tmp2990 - _tmp2774 * _tmp2981;
    hessian_value_ptr[78] = 4 * _tmp2201 * _tmp2799 - _tmp2387 * _tmp3023;
    hessian_value_ptr[79] = _tmp2398 * _tmp3024 + _tmp2805 * _tmp2979;
    hessian_value_ptr[80] = -_tmp2301 * _tmp3025 + _tmp2814 * _tmp2971;
    hessian_value_ptr[81] = _tmp2822 * _tmp2963 - _tmp2824 * _tmp2992;
    hessian_value_ptr[82] = -4 * _tmp2292 * _tmp2829 - _tmp2402 * _tmp3026;
    hessian_value_ptr[83] = -_tmp2428 * _tmp3027 + _tmp2837 * _tmp2989;
    hessian_value_ptr[84] = _tmp2410 * _tmp3028 + _tmp2848 * _tmp3019;
    hessian_value_ptr[85] = -_tmp2369 * _tmp3029 - _tmp2854 * _tmp2990;
    hessian_value_ptr[86] = 4 * _tmp2434 * _tmp2865 - _tmp2863 * _tmp2999;
    hessian_value_ptr[87] = -_tmp2312 * _tmp3030 - _tmp2874 * _tmp2982;
    hessian_value_ptr[88] = -_tmp2412 * _tmp3031 - _tmp2882 * _tmp2968;
    hessian_value_ptr[89] = _tmp2344 * _tmp3032 + 4 * _tmp2432 * _tmp2888;
    hessian_value_ptr[90] = _tmp2896 * _tmp3020 - _tmp2898 * _tmp2967;
    hessian_value_ptr[91] = -_tmp2903 * _tmp3014 + _tmp2906 * _tmp2988;
    hessian_value_ptr[92] = _tmp2424 * _tmp3033 - _tmp2911 * _tmp2997;
    hessian_value_ptr[93] = -_tmp2919 * _tmp2996 - _tmp2922 * _tmp2960;
    hessian_value_ptr[94] = _tmp2408 * _tmp3034 + _tmp2927 * _tmp2981;
    hessian_value_ptr[95] = -_tmp2281 * _tmp3035 + _tmp2355 * _tmp3036;
    hessian_value_ptr[96] = -4 * _tmp2400 * _tmp2945 - _tmp2943 * _tmp3003;
    hessian_value_ptr[97] = 4 * _tmp2237 * _tmp2952 - _tmp2420 * _tmp3037;
    hessian_value_ptr[98] = 4 * std::pow(_tmp2441, Scalar(2)) + 4 * std::pow(_tmp2447, Scalar(2)) +
                            4 * std::pow(_tmp2453, Scalar(2)) + 4 * std::pow(_tmp2458, Scalar(2)) +
                            4 * std::pow(_tmp2463, Scalar(2)) + 4 * std::pow(_tmp2468, Scalar(2)) +
                            4 * std::pow(_tmp2470, Scalar(2)) + 4 * std::pow(_tmp2472, Scalar(2)) +
                            4 * std::pow(_tmp2477, Scalar(2)) + 4 * std::pow(_tmp2482, Scalar(2)) +
                            4 * std::pow(_tmp2484, Scalar(2)) + 4 * std::pow(_tmp2489, Scalar(2)) +
                            4 * std::pow(_tmp2494, Scalar(2)) + 4 * std::pow(_tmp2501, Scalar(2)) +
                            4 * std::pow(_tmp2507, Scalar(2)) + 4 * std::pow(_tmp2512, Scalar(2)) +
                            4 * std::pow(_tmp2517, Scalar(2)) + 4 * std::pow(_tmp2519, Scalar(2)) +
                            4 * std::pow(_tmp2524, Scalar(2)) + 4 * std::pow(_tmp2530, Scalar(2)) +
                            4 * std::pow(_tmp2538, Scalar(2)) + 4 * std::pow(_tmp2540, Scalar(2)) +
                            4 * std::pow(_tmp2542, Scalar(2)) + 4 * std::pow(_tmp2544, Scalar(2)) +
                            4 * std::pow(_tmp2546, Scalar(2)) + 4 * std::pow(_tmp2548, Scalar(2)) +
                            4 * std::pow(_tmp2554, Scalar(2)) + 4 * std::pow(_tmp2556, Scalar(2)) +
                            4 * std::pow(_tmp2558, Scalar(2)) + 4 * std::pow(_tmp2560, Scalar(2)) +
                            4 * std::pow(_tmp2562, Scalar(2)) + 4 * std::pow(_tmp2564, Scalar(2)) +
                            4 * std::pow(_tmp2566, Scalar(2)) + 4 * std::pow(_tmp2571, Scalar(2)) +
                            4 * std::pow(_tmp2573, Scalar(2)) + 4 * std::pow(_tmp2575, Scalar(2)) +
                            4 * std::pow(_tmp2577, Scalar(2)) + 4 * std::pow(_tmp2579, Scalar(2)) +
                            4 * std::pow(_tmp2581, Scalar(2)) + 4 * std::pow(_tmp2583, Scalar(2)) +
                            4 * std::pow(_tmp2585, Scalar(2)) + 4 * std::pow(_tmp2590, Scalar(2)) +
                            4 * std::pow(_tmp2592, Scalar(2)) + 4 * std::pow(_tmp2594, Scalar(2)) +
                            4 * std::pow(_tmp2596, Scalar(2)) + 4 * std::pow(_tmp2598, Scalar(2)) +
                            4 * std::pow(_tmp2600, Scalar(2)) + 4 * std::pow(_tmp2602, Scalar(2)) +
                            4 * std::pow(_tmp2604, Scalar(2)) + 4 * std::pow(_tmp2606, Scalar(2)) +
                            4 * std::pow(_tmp2608, Scalar(2)) + 4 * std::pow(_tmp2610, Scalar(2));
    hessian_value_ptr[99] =
        -_tmp2441 * _tmp3009 + _tmp2447 * _tmp3038 + _tmp2463 * _tmp3001 + 4 * _tmp2468 * _tmp2717 +
        4 * _tmp2472 * _tmp2638 + _tmp2482 * _tmp3021 + 4 * _tmp2484 * _tmp2746 +
        _tmp2489 * _tmp3013 + _tmp2494 * _tmp3015 - 4 * _tmp2501 * _tmp2738 -
        4 * _tmp2512 * _tmp2630 + 4 * _tmp2519 * _tmp2756 - _tmp2524 * _tmp3042 +
        _tmp2530 * _tmp3043 + _tmp2542 * _tmp3041 - _tmp2546 * _tmp3018 + _tmp2554 * _tmp3022 -
        _tmp2556 * _tmp3045 + _tmp2560 * _tmp3016 - _tmp2562 * _tmp3002 - _tmp2566 * _tmp3040 +
        4 * _tmp2575 * _tmp2754 - _tmp2577 * _tmp3017 - _tmp2590 * _tmp3010 + _tmp2592 * _tmp3008 +
        4 * _tmp2596 * _tmp2744 + _tmp2602 * _tmp3006 + _tmp2604 * _tmp3007 +
        4 * _tmp2606 * _tmp2740 + _tmp2610 * _tmp3005 + _tmp2615 * _tmp2987 - _tmp2620 * _tmp2993 +
        _tmp2645 * _tmp2975 + _tmp2649 * _tmp2978 + _tmp2677 * _tmp2962 + _tmp2683 * _tmp2961 +
        _tmp2696 * _tmp2976 + _tmp2701 * _tmp2995 - _tmp2707 * _tmp2991 - _tmp2713 * _tmp2980 +
        _tmp2715 * _tmp2974 + _tmp2719 * _tmp2959 - _tmp2722 * _tmp2998 - _tmp2724 * _tmp2986 +
        _tmp2742 * _tmp2964 + _tmp2748 * _tmp2970 - _tmp2750 * _tmp3039 + _tmp2752 * _tmp2965 -
        _tmp2770 * _tmp2957 + _tmp2774 * _tmp3044 + _tmp2782 * _tmp2977 - _tmp2785 * _tmp2969;
    hessian_value_ptr[100] = _tmp2573 * _tmp3023 + _tmp2799 * _tmp2993;
    hessian_value_ptr[101] = -_tmp2512 * _tmp3046 - _tmp2592 * _tmp3024;
    hessian_value_ptr[102] = 4 * _tmp2524 * _tmp2814 + _tmp2575 * _tmp3025;
    hessian_value_ptr[103] = -_tmp2468 * _tmp3047 - 4 * _tmp2566 * _tmp2822;
    hessian_value_ptr[104] = _tmp2558 * _tmp3026 - _tmp2829 * _tmp2958;
    hessian_value_ptr[105] = 4 * _tmp2590 * _tmp2837 - _tmp2598 * _tmp3027;
    hessian_value_ptr[106] = -_tmp2596 * _tmp3028 - _tmp2848 * _tmp2991;
    hessian_value_ptr[107] = -_tmp2441 * _tmp3029 + 4 * _tmp2542 * _tmp2854;
    hessian_value_ptr[108] = -4 * _tmp2546 * _tmp2863 + _tmp2865 * _tmp2983;
    hessian_value_ptr[109] = _tmp2463 * _tmp3030 + 4 * _tmp2562 * _tmp2874;
    hessian_value_ptr[110] = 4 * _tmp2530 * _tmp2882 + _tmp2600 * _tmp3031;
    hessian_value_ptr[111] = _tmp2888 * _tmp2986 + _tmp2890 * _tmp2980;
    hessian_value_ptr[112] = 4 * _tmp2447 * _tmp2898 + _tmp2896 * _tmp2987;
    hessian_value_ptr[113] = _tmp2606 * _tmp3048 - _tmp2903 * _tmp2961;
    hessian_value_ptr[114] = 4 * _tmp2556 * _tmp2911 + _tmp2913 * _tmp2976;
    hessian_value_ptr[115] = -4 * _tmp2554 * _tmp2922 - _tmp2919 * _tmp3039;
    hessian_value_ptr[116] = -_tmp2501 * _tmp3034 - _tmp2927 * _tmp3044;
    hessian_value_ptr[117] = _tmp2517 * _tmp3035 + _tmp2560 * _tmp3036;
    hessian_value_ptr[118] = -_tmp2943 * _tmp2998 + _tmp2945 * _tmp2995;
    hessian_value_ptr[119] = -_tmp2482 * _tmp3037 - _tmp2952 * _tmp2985;
    hessian_value_ptr[120] = 4 * std::pow(_tmp2615, Scalar(2)) + 4 * std::pow(_tmp2620, Scalar(2)) +
                             4 * std::pow(_tmp2625, Scalar(2)) + 4 * std::pow(_tmp2630, Scalar(2)) +
                             4 * std::pow(_tmp2636, Scalar(2)) + 4 * std::pow(_tmp2638, Scalar(2)) +
                             4 * std::pow(_tmp2643, Scalar(2)) + 4 * std::pow(_tmp2645, Scalar(2)) +
                             4 * std::pow(_tmp2647, Scalar(2)) + 4 * std::pow(_tmp2649, Scalar(2)) +
                             4 * std::pow(_tmp2654, Scalar(2)) + 4 * std::pow(_tmp2659, Scalar(2)) +
                             4 * std::pow(_tmp2661, Scalar(2)) + 4 * std::pow(_tmp2664, Scalar(2)) +
                             4 * std::pow(_tmp2669, Scalar(2)) + 4 * std::pow(_tmp2675, Scalar(2)) +
                             4 * std::pow(_tmp2677, Scalar(2)) + 4 * std::pow(_tmp2683, Scalar(2)) +
                             4 * std::pow(_tmp2688, Scalar(2)) + 4 * std::pow(_tmp2694, Scalar(2)) +
                             4 * std::pow(_tmp2696, Scalar(2)) + 4 * std::pow(_tmp2701, Scalar(2)) +
                             4 * std::pow(_tmp2707, Scalar(2)) + 4 * std::pow(_tmp2713, Scalar(2)) +
                             4 * std::pow(_tmp2715, Scalar(2)) + 4 * std::pow(_tmp2717, Scalar(2)) +
                             4 * std::pow(_tmp2719, Scalar(2)) + 4 * std::pow(_tmp2722, Scalar(2)) +
                             4 * std::pow(_tmp2724, Scalar(2)) + 4 * std::pow(_tmp2726, Scalar(2)) +
                             4 * std::pow(_tmp2732, Scalar(2)) + 4 * std::pow(_tmp2738, Scalar(2)) +
                             4 * std::pow(_tmp2740, Scalar(2)) + 4 * std::pow(_tmp2742, Scalar(2)) +
                             4 * std::pow(_tmp2744, Scalar(2)) + 4 * std::pow(_tmp2746, Scalar(2)) +
                             4 * std::pow(_tmp2748, Scalar(2)) + 4 * std::pow(_tmp2750, Scalar(2)) +
                             4 * std::pow(_tmp2752, Scalar(2)) + 4 * std::pow(_tmp2754, Scalar(2)) +
                             4 * std::pow(_tmp2756, Scalar(2)) + 4 * std::pow(_tmp2761, Scalar(2)) +
                             4 * std::pow(_tmp2763, Scalar(2)) + 4 * std::pow(_tmp2768, Scalar(2)) +
                             4 * std::pow(_tmp2770, Scalar(2)) + 4 * std::pow(_tmp2772, Scalar(2)) +
                             4 * std::pow(_tmp2774, Scalar(2)) + 4 * std::pow(_tmp2776, Scalar(2)) +
                             4 * std::pow(_tmp2778, Scalar(2)) + 4 * std::pow(_tmp2780, Scalar(2)) +
                             4 * std::pow(_tmp2782, Scalar(2)) + 4 * std::pow(_tmp2785, Scalar(2));
    hessian_value_ptr[121] = _tmp2719 * _tmp3023 - _tmp2799 * _tmp3012;
    hessian_value_ptr[122] = _tmp2630 * _tmp3046 - _tmp2808 * _tmp3008;
    hessian_value_ptr[123] = _tmp2754 * _tmp3025 - _tmp2814 * _tmp3042;
    hessian_value_ptr[124] = -_tmp2717 * _tmp3047 + _tmp2822 * _tmp3040;
    hessian_value_ptr[125] = -_tmp2785 * _tmp3026 - _tmp2829 * _tmp3015;
    hessian_value_ptr[126] = -_tmp2748 * _tmp3027 - _tmp2837 * _tmp3010;
    hessian_value_ptr[127] = 4 * _tmp2707 * _tmp2848 - _tmp2744 * _tmp3028;
    hessian_value_ptr[128] = _tmp2778 * _tmp3029 + _tmp2854 * _tmp3041;
    hessian_value_ptr[129] = _tmp2863 * _tmp3018 + _tmp2865 * _tmp3013;
    hessian_value_ptr[130] = _tmp2776 * _tmp3030 - _tmp2874 * _tmp3002;
    hessian_value_ptr[131] = _tmp2677 * _tmp3031 + _tmp2882 * _tmp3043;
    hessian_value_ptr[132] = -_tmp2713 * _tmp3032 - _tmp2888 * _tmp3004;
    hessian_value_ptr[133] = 4 * _tmp2615 * _tmp2896 + _tmp2898 * _tmp3038;
    hessian_value_ptr[134] = -4 * _tmp2683 * _tmp2903 + _tmp2740 * _tmp3048;
    hessian_value_ptr[135] = _tmp2696 * _tmp3033 - _tmp2911 * _tmp3045;
    hessian_value_ptr[136] = 4 * _tmp2750 * _tmp2919 - _tmp2922 * _tmp3022;
    hessian_value_ptr[137] = _tmp2738 * _tmp3034 - 4 * _tmp2774 * _tmp2927;
    hessian_value_ptr[138] = -_tmp2770 * _tmp3035 + _tmp2938 * _tmp3016;
    hessian_value_ptr[139] = 4 * _tmp2722 * _tmp2943 + _tmp2945 * _tmp3011;
    hessian_value_ptr[140] = _tmp2952 * _tmp3017 - _tmp2955 * _tmp3021;
    hessian_value_ptr[141] =
        _tmp2787 + 4 * std::pow(_tmp2797, Scalar(2)) + 4 * std::pow(_tmp2799, Scalar(2));
    hessian_value_ptr[142] =
        4 * std::pow(_tmp2805, Scalar(2)) + _tmp2807 + 4 * std::pow(_tmp2808, Scalar(2));
    hessian_value_ptr[143] =
        _tmp2810 + 4 * std::pow(_tmp2814, Scalar(2)) + 4 * std::pow(_tmp2816, Scalar(2));
    hessian_value_ptr[144] =
        _tmp2818 + 4 * std::pow(_tmp2822, Scalar(2)) + 4 * std::pow(_tmp2824, Scalar(2));
    hessian_value_ptr[145] =
        4 * std::pow(_tmp2829, Scalar(2)) + _tmp2831 + 4 * std::pow(_tmp2832, Scalar(2));
    hessian_value_ptr[146] =
        4 * std::pow(_tmp2837, Scalar(2)) + 4 * std::pow(_tmp2839, Scalar(2)) + _tmp2841;
    hessian_value_ptr[147] =
        _tmp2842 + 4 * std::pow(_tmp2846, Scalar(2)) + 4 * std::pow(_tmp2848, Scalar(2));
    hessian_value_ptr[148] =
        4 * std::pow(_tmp2854, Scalar(2)) + 4 * std::pow(_tmp2856, Scalar(2)) + _tmp2858;
    hessian_value_ptr[149] =
        _tmp2859 + 4 * std::pow(_tmp2863, Scalar(2)) + 4 * std::pow(_tmp2865, Scalar(2));
    hessian_value_ptr[150] =
        4 * std::pow(_tmp2871, Scalar(2)) + _tmp2873 + 4 * std::pow(_tmp2874, Scalar(2));
    hessian_value_ptr[151] =
        _tmp2876 + 4 * std::pow(_tmp2880, Scalar(2)) + 4 * std::pow(_tmp2882, Scalar(2));
    hessian_value_ptr[152] =
        _tmp2884 + 4 * std::pow(_tmp2888, Scalar(2)) + 4 * std::pow(_tmp2890, Scalar(2));
    hessian_value_ptr[153] =
        _tmp2892 + 4 * std::pow(_tmp2896, Scalar(2)) + 4 * std::pow(_tmp2898, Scalar(2));
    hessian_value_ptr[154] =
        4 * std::pow(_tmp2903, Scalar(2)) + _tmp2905 + 4 * std::pow(_tmp2906, Scalar(2));
    hessian_value_ptr[155] =
        4 * std::pow(_tmp2911, Scalar(2)) + 4 * std::pow(_tmp2913, Scalar(2)) + _tmp2915;
    hessian_value_ptr[156] =
        4 * std::pow(_tmp2919, Scalar(2)) + _tmp2921 + 4 * std::pow(_tmp2922, Scalar(2));
    hessian_value_ptr[157] =
        4 * std::pow(_tmp2927, Scalar(2)) + 4 * std::pow(_tmp2929, Scalar(2)) + _tmp2931;
    hessian_value_ptr[158] =
        4 * std::pow(_tmp2935, Scalar(2)) + _tmp2937 + 4 * std::pow(_tmp2938, Scalar(2));
    hessian_value_ptr[159] =
        4 * std::pow(_tmp2943, Scalar(2)) + 4 * std::pow(_tmp2945, Scalar(2)) + _tmp2947;
    hessian_value_ptr[160] =
        4 * std::pow(_tmp2952, Scalar(2)) + _tmp2954 + 4 * std::pow(_tmp2955, Scalar(2));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace bundle_adjustment_fixed_size
