// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/pose3.h>

namespace custom_factor_generation {

/**
 * Return the 6dof residual on the relative pose between the given two views. Compares
 * the relative pose between the optimized poses to the relative pose between the priors.
 *
 * This is similar to geo_factors_codegen.between_factor, but it uses a weight and diagonal
 * covariance instead of a sqrt information matrix
 *
 * Args:
 *     nav_T_src: Current pose of the src frame
 *     nav_T_target: Current pose of the target frame
 *     target_T_src_prior: Prior on the pose of src in the target frame
 *     prior_weight: The weight of the Gaussian prior
 *     prior_sigmas: The diagonal of the sqrt covariance matrix
 *     epsilon: Small positive value
 *
 * Outputs:
 *     res: The residual of the between factor
 *     jacobian: (6x12) jacobian of res wrt args nav_T_src (6), nav_T_target (6)
 *     hessian: (12x12) Gauss-Newton hessian for args nav_T_src (6), nav_T_target (6)
 *     rhs: (12x1) Gauss-Newton rhs for args nav_T_src (6), nav_T_target (6)
 */
template <typename Scalar>
void CustomBetweenFactor(const sym::Pose3<Scalar>& nav_T_src,
                         const sym::Pose3<Scalar>& nav_T_target,
                         const sym::Pose3<Scalar>& target_T_src_prior, const Scalar prior_weight,
                         const Eigen::Matrix<Scalar, 6, 1>& prior_sigmas, const Scalar epsilon,
                         Eigen::Matrix<Scalar, 6, 1>* const res = nullptr,
                         Eigen::Matrix<Scalar, 6, 12>* const jacobian = nullptr,
                         Eigen::Matrix<Scalar, 12, 12>* const hessian = nullptr,
                         Eigen::Matrix<Scalar, 12, 1>* const rhs = nullptr) {
  // Total ops: 808

  // Input arrays
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_src = nav_T_src.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _nav_T_target = nav_T_target.Data();
  const Eigen::Matrix<Scalar, 7, 1>& _target_T_src_prior = target_T_src_prior.Data();

  // Intermediate terms (310)
  const Scalar _tmp0 = _nav_T_src[3] * _nav_T_target[2];
  const Scalar _tmp1 = _nav_T_src[2] * _nav_T_target[3];
  const Scalar _tmp2 = _nav_T_src[1] * _nav_T_target[0];
  const Scalar _tmp3 = _nav_T_src[0] * _nav_T_target[1];
  const Scalar _tmp4 = -_tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _nav_T_src[0] * _nav_T_target[2];
  const Scalar _tmp6 = _nav_T_src[1] * _nav_T_target[3];
  const Scalar _tmp7 = _nav_T_src[2] * _nav_T_target[0];
  const Scalar _tmp8 = _nav_T_src[3] * _nav_T_target[1];
  const Scalar _tmp9 = -_tmp5 + _tmp6 + _tmp7 - _tmp8;
  const Scalar _tmp10 = _nav_T_src[0] * _nav_T_target[3] + _nav_T_src[1] * _nav_T_target[2] -
                        _nav_T_src[2] * _nav_T_target[1] - _nav_T_src[3] * _nav_T_target[0];
  const Scalar _tmp11 = _target_T_src_prior[3] * _tmp10;
  const Scalar _tmp12 = _nav_T_src[2] * _nav_T_target[2];
  const Scalar _tmp13 = _nav_T_src[0] * _nav_T_target[0];
  const Scalar _tmp14 = _nav_T_src[1] * _nav_T_target[1];
  const Scalar _tmp15 = _nav_T_src[3] * _nav_T_target[3];
  const Scalar _tmp16 = _tmp12 + _tmp13 + _tmp14 + _tmp15;
  const Scalar _tmp17 = Scalar(1.0) / (epsilon + prior_sigmas(0, 0));
  const Scalar _tmp18 = std::sqrt(prior_weight);
  const Scalar _tmp19 = 2 * _tmp18;
  const Scalar _tmp20 = _tmp17 * _tmp19;
  const Scalar _tmp21 = _target_T_src_prior[0] * _tmp10;
  const Scalar _tmp22 = -_tmp21;
  const Scalar _tmp23 = -_target_T_src_prior[1] * _tmp9 - _target_T_src_prior[2] * _tmp4 + _tmp22;
  const Scalar _tmp24 = _target_T_src_prior[3] * _tmp16;
  const Scalar _tmp25 = std::min<Scalar>(1 - epsilon, std::fabs(_tmp23 - _tmp24));
  const Scalar _tmp26 =
      (2 * std::min<Scalar>(0, (((-_tmp23 + _tmp24) > 0) - ((-_tmp23 + _tmp24) < 0))) + 1) *
      std::acos(_tmp25) / std::sqrt(Scalar(1 - std::pow(_tmp25, Scalar(2))));
  const Scalar _tmp27 = _tmp20 * _tmp26 *
                        (-_target_T_src_prior[0] * _tmp16 - _target_T_src_prior[1] * _tmp4 +
                         _target_T_src_prior[2] * _tmp9 + _tmp11);
  const Scalar _tmp28 = _target_T_src_prior[2] * _tmp10;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = Scalar(1.0) / (epsilon + prior_sigmas(1, 0));
  const Scalar _tmp31 = _tmp19 * _tmp30;
  const Scalar _tmp32 = _tmp26 * _tmp31 *
                        (_target_T_src_prior[0] * _tmp4 - _target_T_src_prior[1] * _tmp16 +
                         _target_T_src_prior[3] * _tmp9 + _tmp29);
  const Scalar _tmp33 = _target_T_src_prior[1] * _tmp10;
  const Scalar _tmp34 = Scalar(1.0) / (epsilon + prior_sigmas(2, 0));
  const Scalar _tmp35 = _tmp19 * _tmp34;
  const Scalar _tmp36 = _tmp26 * _tmp35 *
                        (-_target_T_src_prior[0] * _tmp9 - _target_T_src_prior[2] * _tmp16 +
                         _target_T_src_prior[3] * _tmp4 + _tmp33);
  const Scalar _tmp37 = _nav_T_target[0] * _nav_T_target[1];
  const Scalar _tmp38 = 2 * _tmp37;
  const Scalar _tmp39 = _nav_T_target[2] * _nav_T_target[3];
  const Scalar _tmp40 = 2 * _tmp39;
  const Scalar _tmp41 = _tmp38 + _tmp40;
  const Scalar _tmp42 = _nav_T_target[0] * _nav_T_target[2];
  const Scalar _tmp43 = 2 * _tmp42;
  const Scalar _tmp44 = _nav_T_target[1] * _nav_T_target[3];
  const Scalar _tmp45 = 2 * _tmp44;
  const Scalar _tmp46 = _tmp43 - _tmp45;
  const Scalar _tmp47 = std::pow(_nav_T_target[2], Scalar(2));
  const Scalar _tmp48 = -2 * _tmp47;
  const Scalar _tmp49 = std::pow(_nav_T_target[1], Scalar(2));
  const Scalar _tmp50 = 1 - 2 * _tmp49;
  const Scalar _tmp51 = _tmp48 + _tmp50;
  const Scalar _tmp52 = _nav_T_src[4] * _tmp51 + _nav_T_src[5] * _tmp41 + _nav_T_src[6] * _tmp46 -
                        _nav_T_target[4] * _tmp51 - _nav_T_target[5] * _tmp41 -
                        _nav_T_target[6] * _tmp46 - _target_T_src_prior[4];
  const Scalar _tmp53 = epsilon + prior_sigmas(3, 0);
  const Scalar _tmp54 = _tmp18 / _tmp53;
  const Scalar _tmp55 = _nav_T_target[1] * _nav_T_target[2];
  const Scalar _tmp56 = 2 * _tmp55;
  const Scalar _tmp57 = _nav_T_target[0] * _nav_T_target[3];
  const Scalar _tmp58 = 2 * _tmp57;
  const Scalar _tmp59 = _tmp56 + _tmp58;
  const Scalar _tmp60 = _tmp38 - _tmp40;
  const Scalar _tmp61 = std::pow(_nav_T_target[0], Scalar(2));
  const Scalar _tmp62 = -2 * _tmp61;
  const Scalar _tmp63 = _tmp48 + _tmp62 + 1;
  const Scalar _tmp64 = _nav_T_src[4] * _tmp60 + _nav_T_src[5] * _tmp63 + _nav_T_src[6] * _tmp59 -
                        _nav_T_target[4] * _tmp60 - _nav_T_target[5] * _tmp63 -
                        _nav_T_target[6] * _tmp59 - _target_T_src_prior[5];
  const Scalar _tmp65 = epsilon + prior_sigmas(4, 0);
  const Scalar _tmp66 = _tmp18 / _tmp65;
  const Scalar _tmp67 = _tmp56 - _tmp58;
  const Scalar _tmp68 = _tmp43 + _tmp45;
  const Scalar _tmp69 = _tmp50 + _tmp62;
  const Scalar _tmp70 = _nav_T_src[4] * _tmp68 + _nav_T_src[5] * _tmp67 + _nav_T_src[6] * _tmp69 -
                        _nav_T_target[4] * _tmp68 - _nav_T_target[5] * _tmp67 -
                        _nav_T_target[6] * _tmp69 - _target_T_src_prior[6];
  const Scalar _tmp71 = epsilon + prior_sigmas(5, 0);
  const Scalar _tmp72 = _tmp18 / _tmp71;
  const Scalar _tmp73 = _tmp5 - _tmp6 - _tmp7 + _tmp8;
  const Scalar _tmp74 = _target_T_src_prior[1] * _tmp73;
  const Scalar _tmp75 = _tmp0 - _tmp1 + _tmp2 - _tmp3;
  const Scalar _tmp76 = _target_T_src_prior[2] * _tmp75;
  const Scalar _tmp77 = _tmp22 + _tmp76;
  const Scalar _tmp78 = _tmp74 + _tmp77;
  const Scalar _tmp79 = _tmp12 + _tmp13 + _tmp14 + _tmp15;
  const Scalar _tmp80 = _target_T_src_prior[3] * _tmp79;
  const Scalar _tmp81 = -_tmp80;
  const Scalar _tmp82 = _tmp78 + _tmp81;
  const Scalar _tmp83 = std::min<Scalar>(0, -(((_tmp78 + _tmp81) > 0) - ((_tmp78 + _tmp81) < 0))) +
                        Scalar(1) / Scalar(2);
  const Scalar _tmp84 = std::fabs(_tmp82);
  const Scalar _tmp85 = epsilon - 1;
  const Scalar _tmp86 = std::min<Scalar>(_tmp84, -_tmp85);
  const Scalar _tmp87 = std::acos(_tmp86);
  const Scalar _tmp88 = _tmp83 * _tmp87;
  const Scalar _tmp89 = std::pow(_tmp86, Scalar(2)) - 1;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 = std::pow(_tmp90, Scalar(Scalar(-1) / Scalar(2)));
  const Scalar _tmp92 = _tmp20 * _tmp91;
  const Scalar _tmp93 = _tmp88 * _tmp92;
  const Scalar _tmp94 = _target_T_src_prior[2] * _tmp73;
  const Scalar _tmp95 = -_tmp94;
  const Scalar _tmp96 = _target_T_src_prior[0] * _tmp79;
  const Scalar _tmp97 = -_tmp96;
  const Scalar _tmp98 = _target_T_src_prior[1] * _tmp75;
  const Scalar _tmp99 = _tmp11 + _tmp98;
  const Scalar _tmp100 = _tmp95 + _tmp97 + _tmp99;
  const Scalar _tmp101 = std::pow(_tmp100, Scalar(2)) * _tmp17;
  const Scalar _tmp102 = _tmp18 * ((((_tmp84 + _tmp85) > 0) - ((_tmp84 + _tmp85) < 0)) - 1) *
                         (((_tmp82) > 0) - ((_tmp82) < 0));
  const Scalar _tmp103 = _tmp102 * _tmp86 / (_tmp90 * std::sqrt(_tmp90));
  const Scalar _tmp104 = _tmp103 * _tmp88;
  const Scalar _tmp105 = _tmp102 / _tmp89;
  const Scalar _tmp106 = _tmp105 * _tmp83;
  const Scalar _tmp107 = -_tmp101 * _tmp104 - _tmp101 * _tmp106 - _tmp82 * _tmp93;
  const Scalar _tmp108 = _tmp100 * _tmp83;
  const Scalar _tmp109 = _tmp105 * _tmp108;
  const Scalar _tmp110 = _target_T_src_prior[3] * _tmp73;
  const Scalar _tmp111 = _target_T_src_prior[1] * _tmp79;
  const Scalar _tmp112 = _target_T_src_prior[0] * _tmp75;
  const Scalar _tmp113 = _tmp112 + _tmp28;
  const Scalar _tmp114 = _tmp110 + _tmp111 + _tmp113;
  const Scalar _tmp115 = _tmp114 * _tmp30;
  const Scalar _tmp116 = _tmp108 * _tmp87;
  const Scalar _tmp117 = _tmp103 * _tmp116;
  const Scalar _tmp118 = _target_T_src_prior[2] * _tmp79;
  const Scalar _tmp119 = _target_T_src_prior[0] * _tmp73;
  const Scalar _tmp120 = -_tmp119;
  const Scalar _tmp121 = _target_T_src_prior[3] * _tmp75;
  const Scalar _tmp122 = _tmp121 - _tmp33;
  const Scalar _tmp123 = _tmp118 + _tmp120 + _tmp122;
  const Scalar _tmp124 = _tmp123 * _tmp88;
  const Scalar _tmp125 = _tmp31 * _tmp91;
  const Scalar _tmp126 = _tmp109 * _tmp115 + _tmp115 * _tmp117 - _tmp124 * _tmp125;
  const Scalar _tmp127 = _tmp35 * _tmp91;
  const Scalar _tmp128 = _tmp127 * _tmp88;
  const Scalar _tmp129 = _tmp123 * _tmp34;
  const Scalar _tmp130 = _tmp109 * _tmp129 + _tmp114 * _tmp128 + _tmp117 * _tmp129;
  const Scalar _tmp131 = _tmp114 * _tmp17;
  const Scalar _tmp132 = _tmp109 * _tmp131 + _tmp117 * _tmp131 + _tmp124 * _tmp92;
  const Scalar _tmp133 = std::pow(_tmp114, Scalar(2));
  const Scalar _tmp134 = _tmp106 * _tmp30;
  const Scalar _tmp135 = _tmp125 * _tmp88;
  const Scalar _tmp136 = -_tmp104 * _tmp133 * _tmp30 - _tmp133 * _tmp134 - _tmp135 * _tmp82;
  const Scalar _tmp137 = _tmp124 * _tmp34;
  const Scalar _tmp138 = _tmp103 * _tmp137;
  const Scalar _tmp139 = _tmp106 * _tmp129;
  const Scalar _tmp140 = -_tmp114 * _tmp138 - _tmp114 * _tmp139 + _tmp116 * _tmp127;
  const Scalar _tmp141 = _tmp109 * _tmp17;
  const Scalar _tmp142 = _tmp116 * _tmp17;
  const Scalar _tmp143 = _tmp103 * _tmp142;
  const Scalar _tmp144 = -_tmp114 * _tmp93 + _tmp123 * _tmp141 + _tmp123 * _tmp143;
  const Scalar _tmp145 = _tmp114 * _tmp134;
  const Scalar _tmp146 = -_tmp103 * _tmp115 * _tmp124 - _tmp116 * _tmp125 - _tmp123 * _tmp145;
  const Scalar _tmp147 = std::pow(_tmp123, Scalar(2)) * _tmp34;
  const Scalar _tmp148 = -_tmp104 * _tmp147 - _tmp106 * _tmp147 - _tmp128 * _tmp82;
  const Scalar _tmp149 = _tmp49 + Scalar(-1) / Scalar(2);
  const Scalar _tmp150 = _tmp149 + _tmp47;
  const Scalar _tmp151 = 2 * _tmp54;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = _tmp37 - _tmp39;
  const Scalar _tmp154 = 2 * _tmp66;
  const Scalar _tmp155 = _tmp153 * _tmp154;
  const Scalar _tmp156 = _tmp42 + _tmp44;
  const Scalar _tmp157 = 2 * _tmp72;
  const Scalar _tmp158 = _tmp156 * _tmp157;
  const Scalar _tmp159 = _tmp37 + _tmp39;
  const Scalar _tmp160 = _tmp151 * _tmp159;
  const Scalar _tmp161 = _tmp47 + _tmp61 + Scalar(-1) / Scalar(2);
  const Scalar _tmp162 = _tmp154 * _tmp161;
  const Scalar _tmp163 = _tmp55 - _tmp57;
  const Scalar _tmp164 = _tmp157 * _tmp163;
  const Scalar _tmp165 = _tmp42 - _tmp44;
  const Scalar _tmp166 = 2 * _tmp165;
  const Scalar _tmp167 = _tmp166 * _tmp54;
  const Scalar _tmp168 = _tmp55 + _tmp57;
  const Scalar _tmp169 = 2 * _tmp168;
  const Scalar _tmp170 = _tmp169 * _tmp66;
  const Scalar _tmp171 = _tmp149 + _tmp61;
  const Scalar _tmp172 = _tmp157 * _tmp171;
  const Scalar _tmp173 = -_tmp11 + _tmp98;
  const Scalar _tmp174 = _tmp173 + _tmp95 + _tmp96;
  const Scalar _tmp175 = _tmp21 + _tmp76;
  const Scalar _tmp176 =
      -_tmp141 * _tmp174 - _tmp143 * _tmp174 - _tmp93 * (_tmp175 + _tmp74 + _tmp80);
  const Scalar _tmp177 = _tmp104 * _tmp115;
  const Scalar _tmp178 = -_tmp118;
  const Scalar _tmp179 = _tmp121 + _tmp33;
  const Scalar _tmp180 =
      -_tmp135 * (_tmp120 + _tmp178 + _tmp179) + _tmp145 * _tmp174 + _tmp174 * _tmp177;
  const Scalar _tmp181 = -_tmp111;
  const Scalar _tmp182 = _tmp112 + _tmp29;
  const Scalar _tmp183 =
      _tmp128 * (_tmp110 + _tmp181 + _tmp182) + _tmp138 * _tmp174 + _tmp139 * _tmp174;
  const Scalar _tmp184 = -_tmp49;
  const Scalar _tmp185 = std::pow(_nav_T_target[3], Scalar(2));
  const Scalar _tmp186 = _tmp185 - _tmp61;
  const Scalar _tmp187 = _tmp184 + _tmp186 + _tmp47;
  const Scalar _tmp188 = _nav_T_target[6] * _tmp187;
  const Scalar _tmp189 = 2 * _nav_T_target[5];
  const Scalar _tmp190 = _tmp163 * _tmp189;
  const Scalar _tmp191 = 2 * _nav_T_target[4];
  const Scalar _tmp192 = _tmp156 * _tmp191;
  const Scalar _tmp193 = 2 * _nav_T_src[5];
  const Scalar _tmp194 = _tmp163 * _tmp193;
  const Scalar _tmp195 = 2 * _nav_T_src[4];
  const Scalar _tmp196 = _tmp156 * _tmp195;
  const Scalar _tmp197 = _nav_T_src[6] * _tmp187;
  const Scalar _tmp198 = -_tmp188 - _tmp190 - _tmp192 + _tmp194 + _tmp196 + _tmp197;
  const Scalar _tmp199 = -_tmp47;
  const Scalar _tmp200 = _tmp186 + _tmp199 + _tmp49;
  const Scalar _tmp201 = _nav_T_target[5] * _tmp200;
  const Scalar _tmp202 = _nav_T_target[6] * _tmp169;
  const Scalar _tmp203 = _tmp153 * _tmp191;
  const Scalar _tmp204 = _nav_T_src[6] * _tmp169;
  const Scalar _tmp205 = _tmp153 * _tmp195;
  const Scalar _tmp206 = _nav_T_src[5] * _tmp200;
  const Scalar _tmp207 = _tmp201 + _tmp202 + _tmp203 - _tmp204 - _tmp205 - _tmp206;
  const Scalar _tmp208 = -_tmp110;
  const Scalar _tmp209 = _tmp113 + _tmp181 + _tmp208;
  const Scalar _tmp210 =
      _tmp141 * _tmp209 + _tmp143 * _tmp209 + _tmp93 * (_tmp119 + _tmp122 + _tmp178);
  const Scalar _tmp211 = -_tmp74;
  const Scalar _tmp212 =
      -_tmp135 * (_tmp211 + _tmp77 + _tmp80) - _tmp145 * _tmp209 - _tmp177 * _tmp209;
  const Scalar _tmp213 =
      _tmp128 * (_tmp94 + _tmp96 + _tmp99) - _tmp138 * _tmp209 - _tmp139 * _tmp209;
  const Scalar _tmp214 = _tmp188 + _tmp190 + _tmp192 - _tmp194 - _tmp196 - _tmp197;
  const Scalar _tmp215 = _tmp184 + _tmp185 + _tmp199 + _tmp61;
  const Scalar _tmp216 = _nav_T_target[4] * _tmp215;
  const Scalar _tmp217 = _tmp159 * _tmp189;
  const Scalar _tmp218 = _nav_T_target[6] * _tmp166;
  const Scalar _tmp219 = _tmp159 * _tmp193;
  const Scalar _tmp220 = _nav_T_src[6] * _tmp166;
  const Scalar _tmp221 = _nav_T_src[4] * _tmp215;
  const Scalar _tmp222 = -_tmp216 - _tmp217 - _tmp218 + _tmp219 + _tmp220 + _tmp221;
  const Scalar _tmp223 = _tmp118 + _tmp119 + _tmp179;
  const Scalar _tmp224 = _tmp103 * _tmp223;
  const Scalar _tmp225 =
      -_tmp141 * _tmp223 - _tmp142 * _tmp224 + _tmp93 * (_tmp111 + _tmp182 + _tmp208);
  const Scalar _tmp226 =
      _tmp135 * (_tmp173 + _tmp94 + _tmp97) + _tmp145 * _tmp223 + _tmp177 * _tmp223;
  const Scalar _tmp227 =
      _tmp128 * (_tmp175 + _tmp211 + _tmp81) + _tmp137 * _tmp224 + _tmp139 * _tmp223;
  const Scalar _tmp228 = -_tmp201 - _tmp202 - _tmp203 + _tmp204 + _tmp205 + _tmp206;
  const Scalar _tmp229 = _tmp216 + _tmp217 + _tmp218 - _tmp219 - _tmp220 - _tmp221;
  const Scalar _tmp230 = prior_weight / std::pow(_tmp71, Scalar(2));
  const Scalar _tmp231 = 4 * _tmp230;
  const Scalar _tmp232 = std::pow(_tmp156, Scalar(2)) * _tmp231;
  const Scalar _tmp233 = prior_weight / std::pow(_tmp65, Scalar(2));
  const Scalar _tmp234 = 4 * _tmp233;
  const Scalar _tmp235 = std::pow(_tmp153, Scalar(2)) * _tmp234;
  const Scalar _tmp236 = prior_weight / std::pow(_tmp53, Scalar(2));
  const Scalar _tmp237 = 4 * _tmp236;
  const Scalar _tmp238 = std::pow(_tmp150, Scalar(2)) * _tmp237;
  const Scalar _tmp239 = _tmp232 + _tmp235 + _tmp238;
  const Scalar _tmp240 = _tmp153 * _tmp161 * _tmp234;
  const Scalar _tmp241 = _tmp150 * _tmp159 * _tmp237;
  const Scalar _tmp242 = _tmp156 * _tmp163 * _tmp231;
  const Scalar _tmp243 = -_tmp240 - _tmp241 + _tmp242;
  const Scalar _tmp244 = _tmp171 * _tmp231;
  const Scalar _tmp245 = _tmp156 * _tmp244;
  const Scalar _tmp246 = _tmp165 * _tmp237;
  const Scalar _tmp247 = _tmp150 * _tmp246;
  const Scalar _tmp248 = _tmp168 * _tmp234;
  const Scalar _tmp249 = _tmp153 * _tmp248;
  const Scalar _tmp250 = -_tmp245 - _tmp247 + _tmp249;
  const Scalar _tmp251 = _tmp198 * _tmp233;
  const Scalar _tmp252 = 2 * _tmp153;
  const Scalar _tmp253 = _tmp251 * _tmp252;
  const Scalar _tmp254 = _tmp207 * _tmp230;
  const Scalar _tmp255 = 2 * _tmp254;
  const Scalar _tmp256 = _tmp156 * _tmp255;
  const Scalar _tmp257 = _tmp214 * _tmp236;
  const Scalar _tmp258 = 2 * _tmp150;
  const Scalar _tmp259 = _tmp257 * _tmp258;
  const Scalar _tmp260 = _tmp222 * _tmp230;
  const Scalar _tmp261 = 2 * _tmp260;
  const Scalar _tmp262 = _tmp156 * _tmp261;
  const Scalar _tmp263 = _tmp228 * _tmp236;
  const Scalar _tmp264 = _tmp258 * _tmp263;
  const Scalar _tmp265 = _tmp229 * _tmp233;
  const Scalar _tmp266 = _tmp252 * _tmp265;
  const Scalar _tmp267 = _tmp240 + _tmp241 - _tmp242;
  const Scalar _tmp268 = _tmp245 + _tmp247 - _tmp249;
  const Scalar _tmp269 = std::pow(_tmp159, Scalar(2)) * _tmp237;
  const Scalar _tmp270 = std::pow(_tmp161, Scalar(2)) * _tmp234;
  const Scalar _tmp271 = std::pow(_tmp163, Scalar(2)) * _tmp231;
  const Scalar _tmp272 = _tmp269 + _tmp270 + _tmp271;
  const Scalar _tmp273 = _tmp163 * _tmp244;
  const Scalar _tmp274 = _tmp161 * _tmp248;
  const Scalar _tmp275 = _tmp159 * _tmp246;
  const Scalar _tmp276 = -_tmp273 - _tmp274 + _tmp275;
  const Scalar _tmp277 = 2 * _tmp163;
  const Scalar _tmp278 = _tmp254 * _tmp277;
  const Scalar _tmp279 = 2 * _tmp161;
  const Scalar _tmp280 = _tmp251 * _tmp279;
  const Scalar _tmp281 = 2 * _tmp159;
  const Scalar _tmp282 = _tmp257 * _tmp281;
  const Scalar _tmp283 = _tmp260 * _tmp277;
  const Scalar _tmp284 = _tmp263 * _tmp281;
  const Scalar _tmp285 = _tmp265 * _tmp279;
  const Scalar _tmp286 = _tmp273 + _tmp274 - _tmp275;
  const Scalar _tmp287 = std::pow(_tmp165, Scalar(2)) * _tmp237;
  const Scalar _tmp288 = std::pow(_tmp171, Scalar(2)) * _tmp231;
  const Scalar _tmp289 = std::pow(_tmp168, Scalar(2)) * _tmp234;
  const Scalar _tmp290 = _tmp287 + _tmp288 + _tmp289;
  const Scalar _tmp291 = _tmp171 * _tmp255;
  const Scalar _tmp292 = _tmp169 * _tmp251;
  const Scalar _tmp293 = _tmp166 * _tmp257;
  const Scalar _tmp294 = _tmp171 * _tmp261;
  const Scalar _tmp295 = _tmp169 * _tmp265;
  const Scalar _tmp296 = _tmp166 * _tmp263;
  const Scalar _tmp297 = _tmp236 * _tmp52;
  const Scalar _tmp298 = _tmp258 * _tmp297;
  const Scalar _tmp299 = _tmp230 * _tmp70;
  const Scalar _tmp300 = 2 * _tmp299;
  const Scalar _tmp301 = _tmp156 * _tmp300;
  const Scalar _tmp302 = _tmp233 * _tmp64;
  const Scalar _tmp303 = _tmp252 * _tmp302;
  const Scalar _tmp304 = _tmp277 * _tmp299;
  const Scalar _tmp305 = _tmp281 * _tmp297;
  const Scalar _tmp306 = _tmp279 * _tmp302;
  const Scalar _tmp307 = _tmp166 * _tmp297;
  const Scalar _tmp308 = _tmp171 * _tmp300;
  const Scalar _tmp309 = _tmp169 * _tmp302;

  // Output terms (4)
  if (res != nullptr) {
    Eigen::Matrix<Scalar, 6, 1>& _res = (*res);

    _res(0, 0) = _tmp27;
    _res(1, 0) = _tmp32;
    _res(2, 0) = _tmp36;
    _res(3, 0) = _tmp52 * _tmp54;
    _res(4, 0) = _tmp64 * _tmp66;
    _res(5, 0) = _tmp70 * _tmp72;
  }

  if (jacobian != nullptr) {
    Eigen::Matrix<Scalar, 6, 12>& _jacobian = (*jacobian);

    _jacobian(0, 0) = _tmp107;
    _jacobian(1, 0) = _tmp126;
    _jacobian(2, 0) = _tmp130;
    _jacobian(3, 0) = 0;
    _jacobian(4, 0) = 0;
    _jacobian(5, 0) = 0;
    _jacobian(0, 1) = _tmp132;
    _jacobian(1, 1) = _tmp136;
    _jacobian(2, 1) = _tmp140;
    _jacobian(3, 1) = 0;
    _jacobian(4, 1) = 0;
    _jacobian(5, 1) = 0;
    _jacobian(0, 2) = _tmp144;
    _jacobian(1, 2) = _tmp146;
    _jacobian(2, 2) = _tmp148;
    _jacobian(3, 2) = 0;
    _jacobian(4, 2) = 0;
    _jacobian(5, 2) = 0;
    _jacobian(0, 3) = 0;
    _jacobian(1, 3) = 0;
    _jacobian(2, 3) = 0;
    _jacobian(3, 3) = -_tmp152;
    _jacobian(4, 3) = _tmp155;
    _jacobian(5, 3) = _tmp158;
    _jacobian(0, 4) = 0;
    _jacobian(1, 4) = 0;
    _jacobian(2, 4) = 0;
    _jacobian(3, 4) = _tmp160;
    _jacobian(4, 4) = -_tmp162;
    _jacobian(5, 4) = _tmp164;
    _jacobian(0, 5) = 0;
    _jacobian(1, 5) = 0;
    _jacobian(2, 5) = 0;
    _jacobian(3, 5) = _tmp167;
    _jacobian(4, 5) = _tmp170;
    _jacobian(5, 5) = -_tmp172;
    _jacobian(0, 6) = _tmp176;
    _jacobian(1, 6) = _tmp180;
    _jacobian(2, 6) = _tmp183;
    _jacobian(3, 6) = 0;
    _jacobian(4, 6) = _tmp198 * _tmp66;
    _jacobian(5, 6) = _tmp207 * _tmp72;
    _jacobian(0, 7) = _tmp210;
    _jacobian(1, 7) = _tmp212;
    _jacobian(2, 7) = _tmp213;
    _jacobian(3, 7) = _tmp214 * _tmp54;
    _jacobian(4, 7) = 0;
    _jacobian(5, 7) = _tmp222 * _tmp72;
    _jacobian(0, 8) = _tmp225;
    _jacobian(1, 8) = _tmp226;
    _jacobian(2, 8) = _tmp227;
    _jacobian(3, 8) = _tmp228 * _tmp54;
    _jacobian(4, 8) = _tmp229 * _tmp66;
    _jacobian(5, 8) = 0;
    _jacobian(0, 9) = 0;
    _jacobian(1, 9) = 0;
    _jacobian(2, 9) = 0;
    _jacobian(3, 9) = _tmp152;
    _jacobian(4, 9) = -_tmp155;
    _jacobian(5, 9) = -_tmp158;
    _jacobian(0, 10) = 0;
    _jacobian(1, 10) = 0;
    _jacobian(2, 10) = 0;
    _jacobian(3, 10) = -_tmp160;
    _jacobian(4, 10) = _tmp162;
    _jacobian(5, 10) = -_tmp164;
    _jacobian(0, 11) = 0;
    _jacobian(1, 11) = 0;
    _jacobian(2, 11) = 0;
    _jacobian(3, 11) = -_tmp167;
    _jacobian(4, 11) = -_tmp170;
    _jacobian(5, 11) = _tmp172;
  }

  if (hessian != nullptr) {
    Eigen::Matrix<Scalar, 12, 12>& _hessian = (*hessian);

    _hessian.setZero();

    _hessian(0, 0) =
        std::pow(_tmp107, Scalar(2)) + std::pow(_tmp126, Scalar(2)) + std::pow(_tmp130, Scalar(2));
    _hessian(1, 0) = _tmp107 * _tmp132 + _tmp126 * _tmp136 + _tmp130 * _tmp140;
    _hessian(2, 0) = _tmp107 * _tmp144 + _tmp126 * _tmp146 + _tmp130 * _tmp148;
    _hessian(6, 0) = _tmp107 * _tmp176 + _tmp126 * _tmp180 + _tmp130 * _tmp183;
    _hessian(7, 0) = _tmp107 * _tmp210 + _tmp126 * _tmp212 + _tmp130 * _tmp213;
    _hessian(8, 0) = _tmp107 * _tmp225 + _tmp126 * _tmp226 + _tmp130 * _tmp227;
    _hessian(1, 1) =
        std::pow(_tmp132, Scalar(2)) + std::pow(_tmp136, Scalar(2)) + std::pow(_tmp140, Scalar(2));
    _hessian(2, 1) = _tmp132 * _tmp144 + _tmp136 * _tmp146 + _tmp140 * _tmp148;
    _hessian(6, 1) = _tmp132 * _tmp176 + _tmp136 * _tmp180 + _tmp140 * _tmp183;
    _hessian(7, 1) = _tmp132 * _tmp210 + _tmp136 * _tmp212 + _tmp140 * _tmp213;
    _hessian(8, 1) = _tmp132 * _tmp225 + _tmp136 * _tmp226 + _tmp140 * _tmp227;
    _hessian(2, 2) =
        std::pow(_tmp144, Scalar(2)) + std::pow(_tmp146, Scalar(2)) + std::pow(_tmp148, Scalar(2));
    _hessian(6, 2) = _tmp144 * _tmp176 + _tmp146 * _tmp180 + _tmp148 * _tmp183;
    _hessian(7, 2) = _tmp144 * _tmp210 + _tmp146 * _tmp212 + _tmp148 * _tmp213;
    _hessian(8, 2) = _tmp144 * _tmp225 + _tmp146 * _tmp226 + _tmp148 * _tmp227;
    _hessian(3, 3) = _tmp239;
    _hessian(4, 3) = _tmp243;
    _hessian(5, 3) = _tmp250;
    _hessian(6, 3) = _tmp253 + _tmp256;
    _hessian(7, 3) = -_tmp259 + _tmp262;
    _hessian(8, 3) = -_tmp264 + _tmp266;
    _hessian(9, 3) = -_tmp232 - _tmp235 - _tmp238;
    _hessian(10, 3) = _tmp267;
    _hessian(11, 3) = _tmp268;
    _hessian(4, 4) = _tmp272;
    _hessian(5, 4) = _tmp276;
    _hessian(6, 4) = _tmp278 - _tmp280;
    _hessian(7, 4) = _tmp282 + _tmp283;
    _hessian(8, 4) = _tmp284 - _tmp285;
    _hessian(9, 4) = _tmp267;
    _hessian(10, 4) = -_tmp269 - _tmp270 - _tmp271;
    _hessian(11, 4) = _tmp286;
    _hessian(5, 5) = _tmp290;
    _hessian(6, 5) = -_tmp291 + _tmp292;
    _hessian(7, 5) = _tmp293 - _tmp294;
    _hessian(8, 5) = _tmp295 + _tmp296;
    _hessian(9, 5) = _tmp268;
    _hessian(10, 5) = _tmp286;
    _hessian(11, 5) = -_tmp287 - _tmp288 - _tmp289;
    _hessian(6, 6) = std::pow(_tmp176, Scalar(2)) + std::pow(_tmp180, Scalar(2)) +
                     std::pow(_tmp183, Scalar(2)) + std::pow(_tmp198, Scalar(2)) * _tmp233 +
                     std::pow(_tmp207, Scalar(2)) * _tmp230;
    _hessian(7, 6) = _tmp176 * _tmp210 + _tmp180 * _tmp212 + _tmp183 * _tmp213 + _tmp207 * _tmp260;
    _hessian(8, 6) = _tmp176 * _tmp225 + _tmp180 * _tmp226 + _tmp183 * _tmp227 + _tmp229 * _tmp251;
    _hessian(9, 6) = -_tmp253 - _tmp256;
    _hessian(10, 6) = -_tmp278 + _tmp280;
    _hessian(11, 6) = _tmp291 - _tmp292;
    _hessian(7, 7) = std::pow(_tmp210, Scalar(2)) + std::pow(_tmp212, Scalar(2)) +
                     std::pow(_tmp213, Scalar(2)) + std::pow(_tmp214, Scalar(2)) * _tmp236 +
                     std::pow(_tmp222, Scalar(2)) * _tmp230;
    _hessian(8, 7) = _tmp210 * _tmp225 + _tmp212 * _tmp226 + _tmp213 * _tmp227 + _tmp228 * _tmp257;
    _hessian(9, 7) = _tmp259 - _tmp262;
    _hessian(10, 7) = -_tmp282 - _tmp283;
    _hessian(11, 7) = -_tmp293 + _tmp294;
    _hessian(8, 8) = std::pow(_tmp225, Scalar(2)) + std::pow(_tmp226, Scalar(2)) +
                     std::pow(_tmp227, Scalar(2)) + std::pow(_tmp228, Scalar(2)) * _tmp236 +
                     std::pow(_tmp229, Scalar(2)) * _tmp233;
    _hessian(9, 8) = _tmp264 - _tmp266;
    _hessian(10, 8) = -_tmp284 + _tmp285;
    _hessian(11, 8) = -_tmp295 - _tmp296;
    _hessian(9, 9) = _tmp239;
    _hessian(10, 9) = _tmp243;
    _hessian(11, 9) = _tmp250;
    _hessian(10, 10) = _tmp272;
    _hessian(11, 10) = _tmp276;
    _hessian(11, 11) = _tmp290;
  }

  if (rhs != nullptr) {
    Eigen::Matrix<Scalar, 12, 1>& _rhs = (*rhs);

    _rhs(0, 0) = _tmp107 * _tmp27 + _tmp126 * _tmp32 + _tmp130 * _tmp36;
    _rhs(1, 0) = _tmp132 * _tmp27 + _tmp136 * _tmp32 + _tmp140 * _tmp36;
    _rhs(2, 0) = _tmp144 * _tmp27 + _tmp146 * _tmp32 + _tmp148 * _tmp36;
    _rhs(3, 0) = -_tmp298 + _tmp301 + _tmp303;
    _rhs(4, 0) = _tmp304 + _tmp305 - _tmp306;
    _rhs(5, 0) = _tmp307 - _tmp308 + _tmp309;
    _rhs(6, 0) = _tmp176 * _tmp27 + _tmp180 * _tmp32 + _tmp183 * _tmp36 + _tmp251 * _tmp64 +
                 _tmp254 * _tmp70;
    _rhs(7, 0) = _tmp210 * _tmp27 + _tmp212 * _tmp32 + _tmp213 * _tmp36 + _tmp257 * _tmp52 +
                 _tmp260 * _tmp70;
    _rhs(8, 0) = _tmp225 * _tmp27 + _tmp226 * _tmp32 + _tmp227 * _tmp36 + _tmp263 * _tmp52 +
                 _tmp265 * _tmp64;
    _rhs(9, 0) = _tmp298 - _tmp301 - _tmp303;
    _rhs(10, 0) = -_tmp304 - _tmp305 + _tmp306;
    _rhs(11, 0) = -_tmp307 + _tmp308 - _tmp309;
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace custom_factor_generation
